<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:trace()</x:label>
      <x:variable name="expr" as="xs:string">fn:trace()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (1,2,3,4,5) return fn:trace($var + 1,"The Value of $var + 1 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (1,2,3,4,5) return fn:trace($var + 1,"The Value of $var + 1 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (2,3,4,5) return fn:trace($var - 1,"The Value of $var - 1 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,3,4,5) return fn:trace($var - 1,"The Value of $var - 1 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (2,3,4,5) return fn:trace($var * 2 ,"The Value of $var * 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,3,4,5) return fn:trace($var * 2 ,"The Value of $var * 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var div 2 ,"The Value of $var div 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var div 2 ,"The Value of $var div 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var idiv 2 ,"The Value of $var idiv 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var idiv 2 ,"The Value of $var idiv 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var mod 2 ,"The Value of $var mod 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var mod 2 ,"The Value of $var mod 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var1 in (2,4,6,8), $var2 in (3 + $var1) - (4 * $var1) 
        return fn:trace($var1 + $var2 ,"The Value of $var 1 + $var2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var1 in (2,4,6,8), $var2 in (3 + $var1) - (4 * $var1) 
        return fn:trace($var1 + $var2 ,"The Value of $var 1 + $var2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in ("aa","bb","cc","dd","ee") return fn:trace(fn:concat($var,$var) ,"The Value of concat($var,$var) is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in ("aa","bb","cc","dd","ee") return fn:trace(fn:concat($var,$var) ,"The Value of concat($var,$var) is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $var in (/works//hours) return fn:trace(($var div 2) ,"The Value of hours div/2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works//hours) return fn:trace(($var div 2) ,"The Value of hours div/2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((for $var in (/works//hours) return $var + $var) ,"The Value of the given expression is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (/works//hours) return $var + $var) ,"The Value of the given expression is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((fn:avg((1,3,3,4,5)) * 2) ,"The Value of 'fn:avg((1,3,3,4,5)) * 2' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:avg((1,3,3,4,5)) * 2) ,"The Value of 'fn:avg((1,3,3,4,5)) * 2' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((for $var in (1.1,2.2,3.3,4.4,5.5) return xs:integer($var)) ,"The Value of 'for $var in (1.1,2.2,3.3,4.4,5.5) return xs:float($var)' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (1.1,2.2,3.3,4.4,5.5) return xs:integer($var)) ,"The Value of 'for $var in (1.1,2.2,3.3,4.4,5.5) return xs:float($var)' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((fn:trace((2+2),"The value of '2 + 2' is:" )) ,"The Value of 'fn:trace(2+2)' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:trace((2+2),"The value of '2 + 2' is:" )) ,"The Value of 'fn:trace(2+2)' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((fn:count((1,2,-3,-4,5)) * 2) ,"The Value of 'fn:count(1,2,-3,-4,5)) * 2' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:count((1,2,-3,-4,5)) * 2) ,"The Value of 'fn:count(1,2,-3,-4,5)) * 2' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var and fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var and fn:true()' is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var and fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var and fn:true()' is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var or fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var or fn:true()' is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var or fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var or fn:true()' is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:trace(() ,"The value of the empty sequence is:"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:trace(() ,"The value of the empty sequence is:"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:trace("" ,"The value of the zero length string is:"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:trace("" ,"The value of the zero length string is:"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:trace((for $var in (fn:upper-case("a"),fn:lower-case("B")) return (fn:lower-case($var),fn:upper-case($var))) ,"The value of the complex expression on the other argument is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:upper-case("a"),fn:lower-case("B")) return (fn:lower-case($var),fn:upper-case($var))) ,"The value of the complex expression on the other argument is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>trace()</x:label>
      <x:variable name="expr" as="xs:string">trace()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>trace(., "message", "wrong parameter")</x:label>
      <x:variable name="expr" as="xs:string">trace(., "message", "wrong parameter")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>trace("a string", "trace message")</x:label>
      <x:variable name="expr" as="xs:string">trace("a string", "trace message")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(trace((), "trace message"))</x:label>
      <x:variable name="expr" as="xs:string">empty(trace((), "trace message"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(trace(error(), "trace message"))</x:label>
      <x:variable name="expr" as="xs:string">empty(trace(error(), "trace message"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>