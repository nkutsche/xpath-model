<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/string-length.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:string-length(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-length(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-length(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-length(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;Harp not on that string, madam; that is past.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("Harp not on that string, madam; that is past.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(())">
      <x:call>
        <x:param select="string(.)">fn:string-length(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;12345&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("12345")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;12345abcd&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("12345abcd")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;ABCD&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("ABCD")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;abcde&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("abcde")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;ABCDEabcde&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("ABCDEabcde")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(fn:string(&#34;AbcDH&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-length(fn:string("AbcDH"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;*****&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("*****")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;zzzzz&#34;) + fn:string-length(&#34;zzzzz&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("zzzzz") + fn:string-length("zzzzz")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(fn:string-length(&#34;abcde&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(fn:string-length("abcde"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:concat(fn:string-length(&#34;abcde&#34;), fn:string-length(&#34;fghi&#34;))">
      <x:call>
        <x:param select="string(.)">fn:concat(fn:string-length("abcde"), fn:string-length("fghi"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not(fn:string-length(&#34;abcde&#34;))">
      <x:call>
        <x:param select="string(.)">fn:not(fn:string-length("abcde"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;%$#@!&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("%$#@!")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;string-length&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("string-length")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(&#34;abc&#34;) and fn:string-length(&#34;abc&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-length("abc") and fn:string-length("abc")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length()">
      <x:call>
        <x:param select="string(.)">fn:string-length()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(.//employee/@name )">
      <x:call>
        <x:param select="string(.)">fn:string-length(.//employee/@name )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;êÄÇ&#34;)">
      <x:call>
        <x:param select="string(.)">string-length("êÄÇ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/*/string-length()">
      <x:call>
        <x:param select="string(.)">/*/string-length()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/*/string-length(.)">
      <x:call>
        <x:param select="string(.)">/*/string-length(.)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1 to 100)[string-length() = 3]">
      <x:call>
        <x:param select="string(.)">(1 to 100)[string-length() = 3]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1 to 100)[string-length(.) = 3]">
      <x:call>
        <x:param select="string(.)">(1 to 100)[string-length(.) = 3]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;a string&#34;, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">string-length("a string", "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;ebv&#34;) eq 3">
      <x:call>
        <x:param select="string(.)">string-length("ebv") eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;ebv&#34;) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">string-length("ebv") instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(()) eq 0">
      <x:call>
        <x:param select="string(.)">string-length(()) eq 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;&#34;) eq 0">
      <x:call>
        <x:param select="string(.)">string-length("") eq 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(()) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">string-length(()) instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="if(false()) then string-length() else true()">
      <x:call>
        <x:param select="string(.)">if(false()) then string-length() else true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;Harp not on that string, madam; that is past.&#34;) eq 45">
      <x:call>
        <x:param select="string(.)">string-length("Harp not on that string, madam; that is past.") eq 45</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>