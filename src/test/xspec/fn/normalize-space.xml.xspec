<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/normalize-space.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:normalize-space(&#34;This is a charac&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This is a charac")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This is a ch&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This is a ch")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This is a charac&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This is a charac")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(())">
      <x:call>
        <x:param select="string(.)">normalize-space(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="//doc/normalize-space(zero-or-one(a[normalize-space() = 'Hello, How are you?']))">
      <x:call>
        <x:param select="string(.)">//doc/normalize-space(zero-or-one(a[normalize-space() = 'Hello, How are you?']))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34; The wealthy curled darlings of our nation. &#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(" The wealthy curled darlings of our nation. ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space()">
      <x:call>
        <x:param select="string(.)">fn:normalize-space()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This&#x9;text should contains no tabs&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This	text should contains no tabs")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This text should contains&#xA;no newline characters.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This text should contains
no newline characters.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This&#x9;text&#x9;should&#x9;contains&#x9;no&#x9;tab&#x9;characters.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This	text	should	contains	no	tab	characters.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This&#xA;text&#xA;should&#xA;contains&#xA;no&#xA;newline&#xA;characters.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This
text
should
contains
no
newline
characters.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This text&#x9;should contains no tabs or&#xA;newline characters.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This text	should contains no tabs or
newline characters.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;This&#x9; text&#x9; should&#x9; contains&#xA; no tabs or newline characters.&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("This	 text	 should	 contains
 no tabs or newline characters.")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;    &#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("    ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34; &#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(" ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#x9;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("	")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#x9;&#x9;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("		")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#xA;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("
")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#xD;&#xA;&#xD;&#xA;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("&#xD;
&#xD;
")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34; &#x9;  &#x9; &#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(" 	  	 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34; &#xD;  &#xA; &#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(" &#xD;  
 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#x9;&#xA;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("	
")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(&#34;&#x9;12345&#34;)">
      <x:call>
        <x:param select="string(.)">fn:normalize-space("	12345")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(fn:string(&#34; ABC &#34;))">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(fn:string(" ABC "))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:normalize-space(fn:normalize-space(&#34; ABC&#34;))">
      <x:call>
        <x:param select="string(.)">fn:normalize-space(fn:normalize-space(" ABC"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/*/normalize-space()">
      <x:call>
        <x:param select="string(.)">/*/normalize-space()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/*/normalize-space(.)">
      <x:call>
        <x:param select="string(.)">/*/normalize-space(.)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="current-date()[normalize-space()]">
      <x:call>
        <x:param select="string(.)">current-date()[normalize-space()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="current-date()[normalize-space(.)]">
      <x:call>
        <x:param select="string(.)">current-date()[normalize-space(.)]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34;a string&#34;, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">normalize-space("a string", "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="if(false()) then normalize-space() else true()">
      <x:call>
        <x:param select="string(.)">if(false()) then normalize-space() else true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34;foo&#34;) eq &#34;foo&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space("foo") eq "foo"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34; foo&#34;) eq &#34;foo&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space(" foo") eq "foo"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34;foo &#34;) eq &#34;foo&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space("foo ") eq "foo"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(()) eq &#34;&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space(()) eq ""</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34;f o o &#34;) eq &#34;f o o&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space("f o o ") eq "f o o"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(&#34; 143 1239 fhjkls &#34;) eq &#34;143 1239 fhjkls&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space(" 143 1239 fhjkls ") eq "143 1239 fhjkls"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(normalize-space((&#34;foo&#34;, current-time())[1])) eq &#34;foo&#34;">
      <x:call>
        <x:param select="string(.)">normalize-space(normalize-space(("foo", current-time())[1])) eq "foo"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>