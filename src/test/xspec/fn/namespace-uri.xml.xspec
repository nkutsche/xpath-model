<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:namespace-uri()</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(/*,"A Second Argument")</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/*,"A Second Argument")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1 to 100)[fn:namespace-uri()]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[fn:namespace-uri()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(())</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri((//comment())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//comment())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri((//processing-instruction())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//processing-instruction())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri((//text())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//text())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri(/*)</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(/works/employee[1]/@name)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works/employee[1]/@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(/works[1]/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works[1]/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(/works[1]/employee[1]/@name)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works[1]/employee[1]/@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:namespace-uri(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>if(false()) then namespace-uri() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then namespace-uri() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>namespace-uri(()) eq xs:anyURI("")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri(()) eq xs:anyURI("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>