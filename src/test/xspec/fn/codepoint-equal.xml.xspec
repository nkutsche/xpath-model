<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/codepoint-equal.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:codepoint-equal(&#34;a&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal((),())">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal((),())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;abc&#34;,())">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("abc",())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal((), &#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal((), "")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;&#34;,&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("","")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;a&#34;,&#34;a&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("a","a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;a&#34;,&#34;b&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("a","b")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not(fn:codepoint-equal(&#34;a&#34;,&#34;b&#34;))">
      <x:call>
        <x:param select="string(.)">fn:not(fn:codepoint-equal("a","b"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not(fn:codepoint-equal(&#34;a&#34;,&#34;a&#34;))">
      <x:call>
        <x:param select="string(.)">fn:not(fn:codepoint-equal("a","a"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(fn:string(1),fn:string(1))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal(fn:string(1),fn:string(1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(fn:string(&#34;aa&#34;),fn:string(&#34;aa&#34;))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal(fn:string("aa"),fn:string("aa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(xs:integer(1),xs:integer(1))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal(xs:integer(1),xs:integer(1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,xs:integer(1))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa",xs:integer(1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;AA&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","AA")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,fn:lower-case(&#34;AA&#34;))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa",fn:lower-case("AA"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,fn:upper-case(&#34;aa&#34;))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa",fn:upper-case("aa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;))">
      <x:call>
        <x:param select="string(.)">xs:boolean(fn:codepoint-equal("aa","aa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) and fn:true()">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") and fn:true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) and fn:false()">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") and fn:false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) or fn:true()">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") or fn:true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) or fn:false()">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") or fn:false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) and fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") and fn:codepoint-equal("aa","aa")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;) or fn:codepoint-equal(&#34;aa&#34;,&#34;aa&#34;)">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal("aa","aa") or fn:codepoint-equal("aa","aa")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:codepoint-equal(normalize-unicode(&#34;garçon&#34;, &#34;NFC&#34;), normalize-unicode(&#34;garçon&#34;, &#34;NFD&#34;))">
      <x:call>
        <x:param select="string(.)">fn:codepoint-equal(normalize-unicode("garçon", "NFC"), normalize-unicode("garçon", "NFD"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(lower-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            lower-case(concat(&#34;b string&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("b string", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(upper-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            upper-case(concat(&#34;b string&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("b string", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(lower-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            lower-case(concat(&#34;no match&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(upper-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            upper-case(concat(&#34;no match&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(upper-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            lower-case(concat(&#34;no match&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoint-equal(lower-case(concat(&#34;B STRING&#34;, current-time())), &#xA;                            upper-case(concat(&#34;no match&#34;, current-time())))">
      <x:call>
        <x:param select="string(.)">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>