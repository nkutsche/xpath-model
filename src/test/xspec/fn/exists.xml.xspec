<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/exists.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:exists((xs:int(&#34;-2147483648&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:int("-2147483648")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:int(&#34;-1873914410&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:int("-1873914410")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:int(&#34;2147483647&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:int("2147483647")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:integer(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:integer("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:integer(&#34;830993497117024304&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:integer("830993497117024304")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:integer(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:integer("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:decimal(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:decimal("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:decimal(&#34;617375191608514839&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:decimal("617375191608514839")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:decimal(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:decimal("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:double(&#34;-1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:double("-1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:double(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:double("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:double(&#34;1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:double("1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:float(&#34;-3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:float("-3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:float(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:float("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:float(&#34;3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:float("3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:long(&#34;-92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:long("-92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:long(&#34;-47175562203048468&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:long("-47175562203048468")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:long(&#34;92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:long("92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedShort(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedShort("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedShort(&#34;44633&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedShort("44633")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedShort(&#34;65535&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedShort("65535")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:negativeInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:negativeInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:negativeInteger(&#34;-297014075999096793&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:negativeInteger("-297014075999096793")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:negativeInteger(&#34;-1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:negativeInteger("-1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:positiveInteger(&#34;1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:positiveInteger("1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:positiveInteger(&#34;52704602390610033&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:positiveInteger("52704602390610033")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:positiveInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:positiveInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedLong(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedLong("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedLong(&#34;130747108607674654&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedLong("130747108607674654")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:unsignedLong(&#34;184467440737095516&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:unsignedLong("184467440737095516")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonPositiveInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonPositiveInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonPositiveInteger(&#34;-475688437271870490&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonPositiveInteger("-475688437271870490")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonPositiveInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonPositiveInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonNegativeInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonNegativeInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonNegativeInteger(&#34;303884545991464527&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonNegativeInteger("303884545991464527")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:nonNegativeInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:nonNegativeInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:short(&#34;-32768&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:short("-32768")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:short(&#34;-5324&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:short("-5324")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists((xs:short(&#34;32767&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:exists((xs:short("32767")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(1, 2)">
      <x:call>
        <x:param select="string(.)">exists(1, 2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists()">
      <x:call>
        <x:param select="string(.)">exists()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(exists(()))">
      <x:call>
        <x:param select="string(.)">not(exists(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(1)">
      <x:call>
        <x:param select="string(.)">exists(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists((1))">
      <x:call>
        <x:param select="string(.)">exists((1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists((1, 2, 3))">
      <x:call>
        <x:param select="string(.)">exists((1, 2, 3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(exists(()))">
      <x:call>
        <x:param select="string(.)">not(exists(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(exists( ((), (), (), ()) ))">
      <x:call>
        <x:param select="string(.)">not(exists( ((), (), (), ()) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(reverse((1, 2, 3)))">
      <x:call>
        <x:param select="string(.)">exists(reverse((1, 2, 3)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(timezone-from-dateTime(current-dateTime()))">
      <x:call>
        <x:param select="string(.)">exists(timezone-from-dateTime(current-dateTime()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(timezone-from-date(current-date()))">
      <x:call>
        <x:param select="string(.)">exists(timezone-from-date(current-date()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(timezone-from-time(current-time()))">
      <x:call>
        <x:param select="string(.)">exists(timezone-from-time(current-time()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(remove(current-time(), 1))">
      <x:call>
        <x:param select="string(.)">empty(remove(current-time(), 1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(empty(remove((current-time(), 1), 1)))">
      <x:call>
        <x:param select="string(.)">not(empty(remove((current-time(), 1), 1)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(for $x in (1 to 10)[. mod 2 = 0] return &#34;blah&#34;)">
      <x:call>
        <x:param select="string(.)">exists(for $x in (1 to 10)[. mod 2 = 0] return "blah")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(for $x in (1 to 10)[. mod 2 = 0] return true())">
      <x:call>
        <x:param select="string(.)">exists(for $x in (1 to 10)[. mod 2 = 0] return true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(for $x in (1 to 10)[. mod 2 = 0] return floor($x))">
      <x:call>
        <x:param select="string(.)">exists(for $x in (1 to 10)[. mod 2 = 0] return floor($x))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>