<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/avg.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:avg((xs:int(&#34;-2147483648&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-2147483648")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;-1873914410&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-1873914410")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;2147483647&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("2147483647")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;830993497117024304&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("830993497117024304")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;617375191608514839&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("617375191608514839")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;-1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("-1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;-3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("-3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-47175562203048468&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-47175562203048468")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;44633&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("44633")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;65535&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("65535")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-297014075999096793&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-297014075999096793")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;52704602390610033&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("52704602390610033")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;130747108607674654&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("130747108607674654")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;184467440737095516&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("184467440737095516")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-475688437271870490&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-475688437271870490")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;303884545991464527&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("303884545991464527")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-32768&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-32768")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-5324&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-5324")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;32767&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("32767")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;-2147483648&#34;),xs:int(&#34;-2147483648&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-2147483648"),xs:int("-2147483648")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;-1873914410&#34;),xs:int(&#34;-2147483648&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-1873914410"),xs:int("-2147483648")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;2147483647&#34;),xs:int(&#34;-2147483648&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("2147483647"),xs:int("-2147483648")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;-2147483648&#34;),xs:int(&#34;-1873914410&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-2147483648"),xs:int("-1873914410")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:int(&#34;-2147483648&#34;),xs:int(&#34;2147483647&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:int("-2147483648"),xs:int("2147483647")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;-999999999999999999&#34;),xs:integer(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;830993497117024304&#34;),xs:integer(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;999999999999999999&#34;),xs:integer(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;-999999999999999999&#34;),xs:integer(&#34;830993497117024304&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:integer(&#34;-999999999999999999&#34;),xs:integer(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;-999999999999999999&#34;),xs:decimal(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;617375191608514839&#34;),xs:decimal(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;999999999999999999&#34;),xs:decimal(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;-999999999999999999&#34;),xs:decimal(&#34;617375191608514839&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;-999999999999999999&#34;),xs:decimal(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;-1.7976931348623157E150&#34;),xs:double(&#34;-1.7976931348623157E150&#34;))) eq -1.7976931348623157E150">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("-1.7976931348623157E150"),xs:double("-1.7976931348623157E150"))) eq -1.7976931348623157E150</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;0&#34;),xs:double(&#34;-1.7976931348623157E308&#34;))) eq -8.9884656743115785E307">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("0"),xs:double("-1.7976931348623157E308"))) eq -8.9884656743115785E307</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;1.7976931348623157E308&#34;),xs:double(&#34;-1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;-1.7976931348623157E308&#34;),xs:double(&#34;0&#34;))) eq -8.9884656743115785E307">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("-1.7976931348623157E308"),xs:double("0"))) eq -8.9884656743115785E307</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:double(&#34;-1.7976931348623157E308&#34;),xs:double(&#34;1.7976931348623157E308&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;-3.4028235E38&#34;),xs:float(&#34;-3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;0&#34;),xs:float(&#34;-3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("0"),xs:float("-3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;3.4028235E38&#34;),xs:float(&#34;-3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;-3.4028235E38&#34;),xs:float(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("-3.4028235E38"),xs:float("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:float(&#34;-3.4028235E38&#34;),xs:float(&#34;3.4028235E38&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-92233720368547758&#34;),xs:long(&#34;-92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-47175562203048468&#34;),xs:long(&#34;-92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;92233720368547758&#34;),xs:long(&#34;-92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-92233720368547758&#34;),xs:long(&#34;-47175562203048468&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:long(&#34;-92233720368547758&#34;),xs:long(&#34;92233720368547758&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;0&#34;),xs:unsignedShort(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;44633&#34;),xs:unsignedShort(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;65535&#34;),xs:unsignedShort(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;0&#34;),xs:unsignedShort(&#34;44633&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedShort(&#34;0&#34;),xs:unsignedShort(&#34;65535&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-999999999999999999&#34;),xs:negativeInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-297014075999096793&#34;),xs:negativeInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-1&#34;),xs:negativeInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-999999999999999999&#34;),xs:negativeInteger(&#34;-297014075999096793&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:negativeInteger(&#34;-999999999999999999&#34;),xs:negativeInteger(&#34;-1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;1&#34;),xs:positiveInteger(&#34;1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;52704602390610033&#34;),xs:positiveInteger(&#34;1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;999999999999999999&#34;),xs:positiveInteger(&#34;1&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;1&#34;),xs:positiveInteger(&#34;52704602390610033&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:positiveInteger(&#34;1&#34;),xs:positiveInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;0&#34;),xs:unsignedLong(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;130747108607674654&#34;),xs:unsignedLong(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;184467440737095516&#34;),xs:unsignedLong(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;0&#34;),xs:unsignedLong(&#34;130747108607674654&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:unsignedLong(&#34;0&#34;),xs:unsignedLong(&#34;184467440737095516&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-999999999999999999&#34;),xs:nonPositiveInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-475688437271870490&#34;),xs:nonPositiveInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;0&#34;),xs:nonPositiveInteger(&#34;-999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-999999999999999999&#34;),xs:nonPositiveInteger(&#34;-475688437271870490&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonPositiveInteger(&#34;-999999999999999999&#34;),xs:nonPositiveInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;0&#34;),xs:nonNegativeInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;303884545991464527&#34;),xs:nonNegativeInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;999999999999999999&#34;),xs:nonNegativeInteger(&#34;0&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;0&#34;),xs:nonNegativeInteger(&#34;303884545991464527&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:nonNegativeInteger(&#34;0&#34;),xs:nonNegativeInteger(&#34;999999999999999999&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-32768&#34;),xs:short(&#34;-32768&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-32768"),xs:short("-32768")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-5324&#34;),xs:short(&#34;-32768&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-5324"),xs:short("-32768")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;32767&#34;),xs:short(&#34;-32768&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("32767"),xs:short("-32768")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-32768&#34;),xs:short(&#34;-5324&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-32768"),xs:short("-5324")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:short(&#34;-32768&#34;),xs:short(&#34;32767&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:short("-32768"),xs:short("32767")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg( (3, 4, 5) )">
      <x:call>
        <x:param select="string(.)">fn:avg( (3, 4, 5) )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( xs:yearMonthDuration(&#34;P20Y&#34;) , xs:yearMonthDuration(&#34;P10M&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( xs:yearMonthDuration("P20Y") , xs:yearMonthDuration("P10M") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(())">
      <x:call>
        <x:param select="string(.)">fn:avg(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( xs:float('INF'), xs:float('-INF')))">
      <x:call>
        <x:param select="string(.)">fn:avg(( xs:float('INF'), xs:float('-INF')))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (3, 4, 5), xs:float('NaN') ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (3, 4, 5), xs:float('NaN') ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( fn:string-length(&#34;Hello&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( fn:string-length("Hello") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( fn:count(&#34;Hello&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( fn:count("Hello") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg( ( ( xs:integer(&#34;100&#34;), xs:integer(&#34;-100&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg( ( ( xs:integer("100"), xs:integer("-100"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg( ( ( xs:decimal(&#34;-1.000000000001&#34;), xs:integer(&#34;-100&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg( ( ( xs:decimal("-1.000000000001"), xs:integer("-100"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:decimal(&#34;1.01&#34;), xs:integer(&#34;12&#34;) )))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:decimal("1.01"), xs:integer("12") )))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;NaN&#34;), 100, (), 2)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("NaN"), 100, (), 2)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-3.4028235E38&#34;), xs:decimal(&#34;-999999999999999999&#34;) )))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") )))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;0&#34;), xs:decimal(&#34;-999999999999999999&#34;) ))) eq xs:float(&#34;-4.9999999999999999E17&#34;)">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;3.4028235E38&#34;), xs:decimal(&#34;-999999999999999999&#34;) )))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") )))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-0&#34;), xs:decimal(&#34;-999999999999999999&#34;) ))) eq xs:float(&#34;-4.9999999999999999E17&#34;)">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;NaN&#34;), xs:decimal(&#34;-999999999999999999&#34;) )))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") )))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;INF&#34;), xs:decimal(&#34;-999999999999999999&#34;) )))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") )))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;1.01&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("1.01"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-INF&#34;), xs:decimal(&#34;2.34&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-INF"), xs:decimal("2.34"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-1.7976931348623157E308&#34;), xs:integer(&#34;-999999999999999999&#34;) ) )) eq xs:double(&#34;-8.988465674311579E307&#34;)">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("-8.988465674311579E307")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;0&#34;), xs:integer(&#34;-999999999999999999&#34;) ) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") ) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;1.7976931348623157E308&#34;), xs:integer(&#34;-999999999999999999&#34;) ) )) eq xs:double(&#34;8.988465674311579E307&#34;)">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("8.988465674311579E307")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-0&#34;), xs:integer(&#34;-999999999999999999&#34;) ) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") ) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-INF&#34;), xs:integer(&#34;-999999999999999999&#34;) ) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") ) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;NaN&#34;), xs:integer(&#34;-999999999999999999&#34;) ) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") ) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;1.34&#34;), xs:float(&#34;INF&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("1.34"), xs:float("INF"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;INF&#34;), 2, 3)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("INF"), 2, 3)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:yearMonthDuration(&#34;P20Y&#34;) , (3, 4, 5)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:yearMonthDuration("P20Y") , (3, 4, 5)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( fn:empty(&#34;Hello&#34;)) or fn:boolean(fn:count(&#34;Hello&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( fn:empty("Hello")) or fn:boolean(fn:count("Hello")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( concat('hi',' all') ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( concat('hi',' all') ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( fn:empty(&#34;Hello&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( fn:empty("Hello") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (&#34;a&#34;, &#34;b&#34;, &#34;c&#34;, true()) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( ("a", "b", "c", true()) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:string(&#34;xyz&#34;), (), (), &#34;a&#34; , &#34;b&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:string("xyz"), (), (), "a" , "b") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:anyURI(&#34;www.example.com&#34;), &#34;a&#34;, (&#34;&#34;), &#34;b&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:anyURI("www.example.com"), "a", (""), "b")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:integer(&#34;100&#34;), xs:string(&#34;abc&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:integer("100"), xs:string("abc"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:integer(&#34;830993497117024304&#34;), &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:integer("830993497117024304"), "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:integer(&#34;999999999999999999&#34;), &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:integer("999999999999999999"), "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:decimal(&#34;617375191608514839&#34;), &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:decimal("617375191608514839"), "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:decimal(&#34;999999999999999999&#34;), &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:decimal("999999999999999999"), "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:decimal(&#34;1.01&#34;), xs:integer(&#34;12&#34;), xs:anyURI(&#34;www.example.com&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-3.4028235E38&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;0&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;3.4028235E38&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-0&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;NaN&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;INF&#34;), xs:decimal(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;1.01&#34;), xs:string(&#34;a&#34;))))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("1.01"), xs:string("a"))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:float(&#34;-INF&#34;), xs:decimal(&#34;2.34&#34;), &#34;abc&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:float("-INF"), xs:decimal("2.34"), "abc")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-1.7976931348623157E308&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;0&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;1.7976931348623157E308&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-0&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;-INF&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;NaN&#34;), xs:integer(&#34;-999999999999999999&#34;) , &#34;a&#34;, (), &#34;3&#34;) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:double(&#34;1.34&#34;), xs:float(&#34;INF&#34;), true())))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:double("1.34"), xs:float("INF"), true())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:boolean(&#34;false&#34;), xs:string(&#34;xyz&#34;), (), (), &#34;a&#34; , &#34;b&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:boolean("false"), xs:string("xyz"), (), (), "a" , "b")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (true(), xs:string(&#34;xyz&#34;), (), (), &#34;a&#34; , &#34;b&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (true(), xs:string("xyz"), (), (), "a" , "b")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (false(), xs:string(&#34;xyz&#34;), (), (), &#34;a&#34; , &#34;b&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (false(), xs:string("xyz"), (), (), "a" , "b")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:boolean(&#34;1&#34;), xs:double(&#34;-INF&#34;), &#34;s&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:boolean("1"), xs:double("-INF"), "s")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:boolean(&#34;true&#34;), xs:date(&#34;1993-03-31&#34;), 4, &#34;a&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:date(&#34;1993-03-31&#34;), xs:string(&#34;xyz&#34;), (), (), &#34;a&#34; , &#34;b&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:date("1993-03-31"), xs:string("xyz"), (), (), "a" , "b")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:dateTime(&#34;1972-12-31T00:00:00&#34;), xs:boolean(&#34;false&#34;), (), (&#34; &#34;)) ))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(( (xs:time(&#34;12:30:00&#34;), xs:decimal(&#34;2.000003&#34;), 2)))">
      <x:call>
        <x:param select="string(.)">fn:avg(( (xs:time("12:30:00"), xs:decimal("2.000003"), 2)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(/works/employee[1])">
      <x:call>
        <x:param select="string(.)">fn:avg(/works/employee[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg()">
      <x:call>
        <x:param select="string(.)">avg()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(1, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">avg(1, "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(avg(()))">
      <x:call>
        <x:param select="string(.)">empty(avg(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((3, 3, 3)) eq 3">
      <x:call>
        <x:param select="string(.)">avg((3, 3, 3)) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((-3, -3, -3)) eq -3">
      <x:call>
        <x:param select="string(.)">avg((-3, -3, -3)) eq -3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(3), xs:float(3))) instance of xs:float">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(3), xs:float(3))) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(3), xs:decimal(3))) instance of xs:float">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(3), xs:decimal(3))) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(3), xs:double(3))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(3), xs:double(3))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:integer(1), xs:integer(3), xs:decimal(3))) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">avg((xs:integer(1), xs:integer(3), xs:decimal(3))) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(0), xs:float(5))) eq 2.0">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(0), xs:float(5))) eq 2.0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(0), xs:untypedAtomic(-4))) eq -1">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(0), xs:untypedAtomic(-4))) eq -1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), xs:integer(0), xs:untypedAtomic(3))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), xs:integer(0), xs:untypedAtomic(3))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:untypedAtomic(3), xs:integer(0), xs:decimal(1))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:untypedAtomic(3), xs:integer(0), xs:decimal(1))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((3, 3, xs:double(&#34;NaN&#34;)))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((3, 3, xs:double("NaN")))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((3, xs:double(&#34;NaN&#34;), 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((3, xs:double("NaN"), 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((xs:double(&#34;NaN&#34;), 3, 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((xs:double("NaN"), 3, 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(avg(()))">
      <x:call>
        <x:param select="string(.)">empty(avg(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(avg(((), ())))">
      <x:call>
        <x:param select="string(.)">empty(avg(((), ())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((-5, -0, -3, -6)) eq -3.5">
      <x:call>
        <x:param select="string(.)">avg((-5, -0, -3, -6)) eq -3.5</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((1, 2, 3, xs:float(&#34;NaN&#34;)))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((1, 2, 3, xs:float("NaN")))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((1, 2, 3, xs:double(&#34;NaN&#34;)))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((1, 2, 3, xs:double("NaN")))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((xs:double(&#34;NaN&#34;), 1, 2, 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((xs:float(&#34;NaN&#34;), 1, 2, 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((1, 2, xs:double(&#34;NaN&#34;), 1, 2, 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((1, 2, xs:float(&#34;NaN&#34;), 1, 2, 3))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(xs:untypedAtomic(&#34;3&#34;)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg(xs:untypedAtomic("3")) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((1, 2, xs:untypedAtomic(&#34;3&#34;))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((1, 2, xs:untypedAtomic("3"))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((1, 2, xs:untypedAtomic(&#34;3&#34;))) eq 2">
      <x:call>
        <x:param select="string(.)">avg((1, 2, xs:untypedAtomic("3"))) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), 2, xs:untypedAtomic(&#34;3&#34;))) eq 2">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), 2, xs:untypedAtomic("3"))) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(1), 2, xs:untypedAtomic(&#34;3&#34;))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(&#34;a string&#34;)">
      <x:call>
        <x:param select="string(.)">avg("a string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(xs:anyURI(&#34;a string&#34;))">
      <x:call>
        <x:param select="string(.)">avg(xs:anyURI("a string"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((1, 2, 3, xs:anyURI(&#34;a string&#34;), xs:double(&#34;NaN&#34;)))">
      <x:call>
        <x:param select="string(.)">avg((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(&#34;a string&#34;)">
      <x:call>
        <x:param select="string(.)">avg("a string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:untypedAtomic(3), xs:integer(3), xs:string(1)))">
      <x:call>
        <x:param select="string(.)">avg((xs:untypedAtomic(3), xs:integer(3), xs:string(1)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:string(1), xs:integer(3), xs:untypedAtomic(3)))">
      <x:call>
        <x:param select="string(.)">avg((xs:string(1), xs:integer(3), xs:untypedAtomic(3)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(2), xs:integer(3), &#34;a string&#34;, xs:double(2)))">
      <x:call>
        <x:param select="string(.)">avg((xs:float(2), xs:integer(3), "a string", xs:double(2)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:yearMonthDuration(&#34;P20Y&#34;), (3, 4, 5)))">
      <x:call>
        <x:param select="string(.)">avg((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:yearMonthDuration(&#34;P20Y&#34;), xs:yearMonthDuration(&#34;P10M&#34;))) eq xs:yearMonthDuration(&#34;P125M&#34;)">
      <x:call>
        <x:param select="string(.)">avg((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P125M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(avg( () ))">
      <x:call>
        <x:param select="string(.)">empty(avg( () ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg((xs:float('INF'), xs:float('-INF')))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg((xs:float('INF'), xs:float('-INF')))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(avg(((3, 4, 5), xs:float('NaN')))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(avg(((3, 4, 5), xs:float('NaN')))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((3, 4, 5)) eq 4.0">
      <x:call>
        <x:param select="string(.)">avg((3, 4, 5)) eq 4.0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double">
      <x:call>
        <x:param select="string(.)">avg((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((1, 1))">
      <x:call>
        <x:param select="string(.)">avg((1, 1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((&#34;a&#34;,&#34;b&#34;,&#34;c&#34;))">
      <x:call>
        <x:param select="string(.)">fn:avg(("a","b","c"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(())">
      <x:call>
        <x:param select="string(.)">fn:avg(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:dayTimeDuration(&#34;P1D&#34;), xs:dayTimeDuration(&#34;PT2H&#34;))) instance of xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">avg((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(for $x in 1 to 10 return xs:dayTimeDuration(concat(&#34;PT&#34;,$x,&#34;H&#34;)))">
      <x:call>
        <x:param select="string(.)">avg(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:yearMonthDuration(&#34;P1Y&#34;), xs:yearMonthDuration(&#34;P1M&#34;))) instance of xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">avg((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(for $x in 1 to 9 return xs:yearMonthDuration(concat(&#34;P&#34;,$x,&#34;M&#34;)))">
      <x:call>
        <x:param select="string(.)">avg(for $x in 1 to 9 return xs:yearMonthDuration(concat("P",$x,"M")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:yearMonthDuration(&#34;P1Y&#34;), xs:dayTimeDuration(&#34;P1D&#34;)))">
      <x:call>
        <x:param select="string(.)">avg((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(xs:duration(&#34;P1Y1M1D&#34;))">
      <x:call>
        <x:param select="string(.)">avg(xs:duration("P1Y1M1D"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg(xs:duration(&#34;P1Y1M1D&#34;))">
      <x:call>
        <x:param select="string(.)">avg(xs:duration("P1Y1M1D"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:decimal(&#34;79000000000000000000000000000&#34;),&#xA;                    xs:decimal(&#34;79000000000000000000000000000&#34;)))&#xA;            eq 79000000000000000000000000000">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:decimal("79000000000000000000000000000"),
                    xs:decimal("79000000000000000000000000000")))
            eq 79000000000000000000000000000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:dayTimeDuration(&#34;P9223372036854775807D&#34;), xs:dayTimeDuration(&#34;P1D&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:dayTimeDuration("P9223372036854775807D"), xs:dayTimeDuration("P1D")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:yearMonthDuration(&#34;P768614336404564650Y&#34;), xs:yearMonthDuration(&#34;P1Y&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:yearMonthDuration("P768614336404564650Y"), xs:yearMonthDuration("P1Y")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:dayTimeDuration(&#34;P1DT2H&#34;), xs:dayTimeDuration(&#34;PT22H&#34;), xs:dayTimeDuration(&#34;P1D&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:dayTimeDuration("P1D")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:dayTimeDuration(&#34;P1DT2H&#34;), xs:dayTimeDuration(&#34;PT22H&#34;), xs:yearMonthDuration(&#34;P1M&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:yearMonthDuration("P1M")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:yearMonthDuration(&#34;P1Y1M&#34;), xs:yearMonthDuration(&#34;P11M&#34;), xs:yearMonthDuration(&#34;P1Y&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:yearMonthDuration("P1Y")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg((xs:yearMonthDuration(&#34;P1Y1M&#34;), xs:yearMonthDuration(&#34;P11M&#34;), xs:dayTimeDuration(&#34;P1D&#34;)))">
      <x:call>
        <x:param select="string(.)">fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:dayTimeDuration("P1D")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(avg(()))">
      <x:call>
        <x:param select="string(.)">boolean(avg(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:double(&#34;NaN&#34;), current-date() - xs:date(&#34;1997-01-01&#34;) ))">
      <x:call>
        <x:param select="string(.)">avg((xs:double("NaN"), current-date() - xs:date("1997-01-01") ))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:double(&#34;NaN&#34;), day-from-date(current-date())))">
      <x:call>
        <x:param select="string(.)">avg((xs:double("NaN"), day-from-date(current-date())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="avg((xs:float(&#34;NaN&#34;), day-from-date(current-date())))">
      <x:call>
        <x:param select="string(.)">avg((xs:float("NaN"), day-from-date(current-date())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(avg(()))">
      <x:call>
        <x:param select="string(.)">empty(avg(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>