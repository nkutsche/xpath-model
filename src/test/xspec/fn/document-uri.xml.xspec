<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/document-uri.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:contains(fn:document-uri(fn:doc($uri)),$uri) or (fn:document-uri(fn:doc($uri)) = &#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:contains(fn:document-uri(fn:doc($uri)),$uri) or (fn:document-uri(fn:doc($uri)) = "")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:document-uri(/works[1]/employee[1]))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:document-uri(/works[1]/employee[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:document-uri(/works[1]/employee[1]/@name))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:document-uri(/works[1]/employee[1]/@name))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-length(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))">
      <x:call>
        <x:param select="string(.)">fn:string-length(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:upper-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))">
      <x:call>
        <x:param select="string(.)">fn:upper-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:lower-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))">
      <x:call>
        <x:param select="string(.)">fn:lower-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:concat(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)),&#34; A String&#34;)">
      <x:call>
        <x:param select="string(.)">fn:concat(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)),&#34; A String&#34;),&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join((fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String"),"")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:substring-before(fn:string(fn:contains(fn:document-uri(/),&#34;works-mod&#34;)),&#34;e&#34;)">
      <x:call>
        <x:param select="string(.)">fn:substring-before(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"e")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:substring-after(fn:string(fn:contains(fn:document-uri(/),&#34;works-mod&#34;)),&#34;t&#34;)">
      <x:call>
        <x:param select="string(.)">fn:substring-after(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"t")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="document-uri((), &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">document-uri((), "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(document-uri(()))">
      <x:call>
        <x:param select="string(.)">empty(document-uri(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>