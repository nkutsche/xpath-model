<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/encode-for-uri.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:encode-for-uri (&#34;http://www.example.com/00/Weather/CA/Los%20Angeles#ocean&#34;)">
      <x:call>
        <x:param select="string(.)">fn:encode-for-uri ("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(&#34;~bébé&#34;)">
      <x:call>
        <x:param select="string(.)">encode-for-uri("~bébé")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(&#34;100% organic&#34;)">
      <x:call>
        <x:param select="string(.)">encode-for-uri("100% organic")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri('')">
      <x:call>
        <x:param select="string(.)">encode-for-uri('')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(())">
      <x:call>
        <x:param select="string(.)">encode-for-uri(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(12)">
      <x:call>
        <x:param select="string(.)">encode-for-uri(12)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri('',())">
      <x:call>
        <x:param select="string(.)">encode-for-uri('',())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples#example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples#example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples-example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples-example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples_example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples_example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples.example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples.example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples!example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples!example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples~example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples~example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples*example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples*example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples'example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples'example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples(example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples(example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples)example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples)example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples0123456789example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples0123456789example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;examples/example&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("examples/example"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;http:examples&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("http:examples"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(fn:encode-for-uri(&#34;http%20examples&#34;))">
      <x:call>
        <x:param select="string(.)">(fn:encode-for-uri("http%20examples"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri()">
      <x:call>
        <x:param select="string(.)">encode-for-uri()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(&#34;http://example.com/&#34;, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">encode-for-uri("http://example.com/", "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="encode-for-uri(()) eq &#34;&#34;">
      <x:call>
        <x:param select="string(.)">encode-for-uri(()) eq ""</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="concat(&#34;http://www.example.com/&#34;, encode-for-uri(&#34;~bébé&#34;)) eq &#34;http://www.example.com/~b%C3%A9b%C3%A9&#34;">
      <x:call>
        <x:param select="string(.)">concat("http://www.example.com/", encode-for-uri("~bébé")) eq "http://www.example.com/~b%C3%A9b%C3%A9"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="concat(&#34;http://www.example.com/&#34;, encode-for-uri(&#34;100% organic&#34;)) eq &#34;http://www.example.com/100%25%20organic&#34;">
      <x:call>
        <x:param select="string(.)">concat("http://www.example.com/", encode-for-uri("100% organic")) eq "http://www.example.com/100%25%20organic"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="normalize-space(encode-for-uri((&#34;some string&#34;, current-time())[1] treat as xs:string))">
      <x:call>
        <x:param select="string(.)">normalize-space(encode-for-uri(("some string", current-time())[1] treat as xs:string))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>