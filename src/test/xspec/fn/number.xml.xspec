<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/number.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:number(xs:int(&#34;-2147483648&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:int("-2147483648"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:int(&#34;-1873914410&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:int("-1873914410"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:int(&#34;2147483647&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:int("2147483647"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:integer(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:integer("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:integer(&#34;830993497117024304&#34;)) eq 830993497117024304">
      <x:call>
        <x:param select="string(.)">fn:number(xs:integer("830993497117024304")) eq 830993497117024304</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:integer(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:integer("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:decimal(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:decimal("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:decimal(&#34;617375191608514839&#34;)) eq 617375191608514839">
      <x:call>
        <x:param select="string(.)">fn:number(xs:decimal("617375191608514839")) eq 617375191608514839</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:decimal(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:decimal("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:double(&#34;-1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:double("-1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:double(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:double("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:double(&#34;1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:double("1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:float(&#34;-3.4028235E38&#34;)) eq -3.4028234663852885E38">
      <x:call>
        <x:param select="string(.)">fn:number(xs:float("-3.4028235E38")) eq -3.4028234663852885E38</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:float(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:float("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:float(&#34;3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:float("3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:long(&#34;-92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:long("-92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:long(&#34;-47175562203048468&#34;)) eq -47175562203048468">
      <x:call>
        <x:param select="string(.)">fn:number(xs:long("-47175562203048468")) eq -47175562203048468</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:long(&#34;92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:long("92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedShort(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedShort("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedShort(&#34;44633&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedShort("44633"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedShort(&#34;65535&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedShort("65535"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:negativeInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:negativeInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:negativeInteger(&#34;-297014075999096793&#34;)) eq -297014075999096793">
      <x:call>
        <x:param select="string(.)">fn:number(xs:negativeInteger("-297014075999096793")) eq -297014075999096793</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:negativeInteger(&#34;-1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:negativeInteger("-1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:positiveInteger(&#34;1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:positiveInteger("1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:positiveInteger(&#34;52704602390610033&#34;)) eq 52704602390610033">
      <x:call>
        <x:param select="string(.)">fn:number(xs:positiveInteger("52704602390610033")) eq 52704602390610033</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:positiveInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:positiveInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedLong(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedLong("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedLong(&#34;130747108607674654&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedLong("130747108607674654"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:unsignedLong(&#34;184467440737095516&#34;)) eq 1.8446744073709551E17">
      <x:call>
        <x:param select="string(.)">fn:number(xs:unsignedLong("184467440737095516")) eq 1.8446744073709551E17</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonPositiveInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonPositiveInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonPositiveInteger(&#34;-475688437271870490&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonPositiveInteger("-475688437271870490"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonPositiveInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonPositiveInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonNegativeInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonNegativeInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonNegativeInteger(&#34;303884545991464527&#34;)) eq 303884545991464527">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonNegativeInteger("303884545991464527")) eq 303884545991464527</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:nonNegativeInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:nonNegativeInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:short(&#34;-32768&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:short("-32768"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:short(&#34;-5324&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:short("-5324"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:short(&#34;32767&#34;))">
      <x:call>
        <x:param select="string(.)">fn:number(xs:short("32767"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(())">
      <x:call>
        <x:param select="string(.)">fn:number(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(&#34;A String&#34;)">
      <x:call>
        <x:param select="string(.)">fn:number("A String")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number()">
      <x:call>
        <x:param select="string(.)">fn:number()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(.)">
      <x:call>
        <x:param select="string(.)">fn:number(.)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(true())">
      <x:call>
        <x:param select="string(.)">number(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(false())">
      <x:call>
        <x:param select="string(.)">number(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(implicit-timezone())">
      <x:call>
        <x:param select="string(.)">number(implicit-timezone())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(&#34;  -22e0  &#34;)">
      <x:call>
        <x:param select="string(.)">number("  -22e0  ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(&#34;+22e0&#34;)">
      <x:call>
        <x:param select="string(.)">number("+22e0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(xs:untypedAtomic(&#34;1000&#34;))">
      <x:call>
        <x:param select="string(.)">number(xs:untypedAtomic("1000"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="number(1, 2)">
      <x:call>
        <x:param select="string(.)">number(1, 2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(1) eq 1">
      <x:call>
        <x:param select="string(.)">fn:number(1) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(fn:number(&#34;results in NaN&#34;))">
      <x:call>
        <x:param select="string(.)">not(fn:number("results in NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(&#34;results in NaN&#34;) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number("results in NaN") instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(1) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number(1) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(1.1) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number(1.1) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:float(3)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number(xs:float(3)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(xs:double(3)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number(xs:double(3)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(&#34;NaN&#34;) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number("NaN") instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:number(()) instance of xs:double">
      <x:call>
        <x:param select="string(.)">fn:number(()) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(fn:number(()))">
      <x:call>
        <x:param select="string(.)">not(fn:number(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(number(xs:anyURI(&#34;example.com/&#34;))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(number(xs:anyURI("example.com/"))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(number(xs:anyURI(&#34;1&#34;))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(number(xs:anyURI("1"))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(number(&#34;1&#34;)) eq &#34;1&#34;">
      <x:call>
        <x:param select="string(.)">string(number("1")) eq "1"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(number(xs:gYear(&#34;2005&#34;))) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(number(xs:gYear("2005"))) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="deep-equal((1, 2, 3)[number()], (1, 2, 3))">
      <x:call>
        <x:param select="string(.)">deep-equal((1, 2, 3)[number()], (1, 2, 3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1)[number()] eq 1">
      <x:call>
        <x:param select="string(.)">(1)[number()] eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>