<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:starts-with("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:starts-with("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:starts-with("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:starts-with("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with()</x:label>
      <x:variable name="expr" as="xs:string">starts-with()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with(())</x:label>
      <x:variable name="expr" as="xs:string">starts-with(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">starts-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with("foo", "foo")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("foo", "foo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with("tattoo", "tat")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("tattoo", "tat")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(starts-with("tattoo", "att"))</x:label>
      <x:variable name="expr" as="xs:string">not(starts-with("tattoo", "att"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with((), ())</x:label>
      <x:variable name="expr" as="xs:string">starts-with((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>starts-with("a string", ())</x:label>
      <x:variable name="expr" as="xs:string">starts-with("a string", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(starts-with("", "a string"))</x:label>
      <x:variable name="expr" as="xs:string">not(starts-with("", "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:boolean(fn:starts-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:starts-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>