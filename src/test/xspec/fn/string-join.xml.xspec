<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/string-join.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:string-join(xs:string(&#34;This is a characte&#34;),xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(xs:string(&#34;This is a characte&#34;),xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(xs:string(&#34;This is a characte&#34;),xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(xs:string(&#34;This is a characte&#34;),xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(xs:string(&#34;This is a characte&#34;),xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(('Now', 'is', 'the', 'time', '...'), ' ')">
      <x:call>
        <x:param select="string(.)">fn:string-join(('Now', 'is', 'the', 'time', '...'), ' ')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '')">
      <x:call>
        <x:param select="string(.)">fn:string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join((), 'separator'))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join((), 'separator'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join((),&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join((),""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join(&#34;&#34;,&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join("",""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join(&#34;&#34;,&#34;A Character String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join("","A Character String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join((),&#34;A Character String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join((),"A Character String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;AAAAABBBBBCCCCC&#34;),&#34;BBBBB&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join(("AAAAABBBBBCCCCC"),"BBBBB")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;AAAAABBBBB&#34;),&#34; &#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join(("AAAAABBBBB")," ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-join((&#34; &#34;),&#34;AAAAABBBBB&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-join((" "),"AAAAABBBBB"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not(fn:string-join((),&#34;A&#34;))">
      <x:call>
        <x:param select="string(.)">fn:not(fn:string-join((),"A"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not(fn:string-join((&#34;A&#34;),&#34;B&#34;))">
      <x:call>
        <x:param select="string(.)">fn:not(fn:string-join(("A"),"B"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((xs:string(&#34;A&#34;)),&#34;A&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join((xs:string("A")),"A")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;A&#34;),xs:string(&#34;A&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-join(("A"),xs:string("A"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;A&#34;),&#34;a&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join(("A"),"a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;a&#34;),&#34;A&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join(("a"),"A")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(&#34;string-join&#34;,&#34;string-join&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join("string-join","string-join")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join((&#34;string-joinstring-join&#34;),&#34;string-join&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join(("string-joinstring-join"),"string-join")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(&#34;****&#34;,&#34;***&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join("****","***")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(&#34;12345&#34;,&#34;1234&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join("12345","1234")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-join(&#34;string-join&#34;,&#34;nioj-gnirts&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-join("string-join","nioj-gnirts")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join(&#34;a string&#34;, &#34;a string&#34;, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">string-join("a string", "a string", "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join(('Now', 'is', 'the', 'time', '...'), ' ') eq &#34;Now is the time ...&#34;">
      <x:call>
        <x:param select="string(.)">string-join(('Now', 'is', 'the', 'time', '...'), ' ') eq "Now is the time ..."</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join((&#34;abc&#34;, &#34;def&#34;), &#34;&#34;) eq &#34;abcdef&#34;">
      <x:call>
        <x:param select="string(.)">string-join(("abc", "def"), "") eq "abcdef"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '') eq &#34;Blow, blow, thou winter wind!&#34;">
      <x:call>
        <x:param select="string(.)">string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '') eq "Blow, blow, thou winter wind!"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join((), 'separator') eq &#34;&#34;">
      <x:call>
        <x:param select="string(.)">string-join((), 'separator') eq ""</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join(&#34;a string&#34;, ())">
      <x:call>
        <x:param select="string(.)">string-join("a string", ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>