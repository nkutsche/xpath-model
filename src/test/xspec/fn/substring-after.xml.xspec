<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:substring-after("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:substring-after("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-after("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:substring-after("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-after("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("substring-after","substring-after")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-after","substring-after")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("substring-aftersubstring-after","substring-after")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-aftersubstring-after","substring-after")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("12345","1234")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("12345","1234")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after("substring-after","refta-gnirtsbus")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-after","refta-gnirtsbus")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("banana", "a", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "a", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("banana", "a", "collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "a", "collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("banana", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("𐀁𐀂𐀃", "𐀂")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("𐀁𐀂𐀃", "𐀂")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after()</x:label>
      <x:variable name="expr" as="xs:string">substring-after()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after(())</x:label>
      <x:variable name="expr" as="xs:string">substring-after(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("tattoo", "tat") eq "too"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("tattoo", "tat") eq "too"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("tattoo", "tattoo") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after("tattoo", "tattoo") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("abcdefgedij", "def") eq "gedij"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("abcdefgedij", "def") eq "gedij"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after((), ()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after((), ()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("a string", ()) eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", ()) eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-after("a string", "not in other") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", "not in other") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>