<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:substring-before("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:substring-before("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-before("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not(fn:substring-before("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-before("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("substring-before","substring-before")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-before","substring-before")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("substring-beforesubstring-before","substring-before")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-beforesubstring-before","substring-before")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("12345","2345")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("12345","2345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before("substring-before","erofeb-gnirtsbus")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-before","erofeb-gnirtsbus")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("banana", "a",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "a",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("banana", "a", "collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "a", "collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("banana", "A",
         "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "A",
         "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("êÄÅêÄÇêÄÉ", "êÄÇ")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("êÄÅêÄÇêÄÉ", "êÄÇ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before()</x:label>
      <x:variable name="expr" as="xs:string">substring-before()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before(())</x:label>
      <x:variable name="expr" as="xs:string">substring-before(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint",
         "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">substring-before((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint",
         "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("a string", "a string",
         "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "a string",
         "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("foo", "oo",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "f"</x:label>
      <x:variable name="expr" as="xs:string">substring-before("foo", "oo",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "f"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("tattoo", "attoo") eq "t"</x:label>
      <x:variable name="expr" as="xs:string">substring-before("tattoo", "attoo") eq "t"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("tattoo", "tatto") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("tattoo", "tatto") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before((), ()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before((), ()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("a string", "") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>substring-before("a string", "not in other") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "not in other") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:boolean(fn:substring-before('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring-before('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>