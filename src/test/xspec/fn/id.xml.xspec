<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:id("argument 1", / ,"Argument 3")</x:label>
      <x:variable name="expr" as="xs:string">fn:id("argument 1", / ,"Argument 3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1 to 5)[fn:id("argument1")]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 5)[fn:id("argument1")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("argument1", "A")</x:label>
      <x:variable name="expr" as="xs:string">fn:id("argument1", "A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id1", /IDS[1])/string(@anId)</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1", /IDS[1])/string(@anId)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:id("nomatchingid", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:id("nomatchingid", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id2 id2", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id2 id2", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id1 id2", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 id2", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id1 nomatching", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 nomatching", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:id("nomatching1 nomatching2", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:id("nomatching1 nomatching2", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("", /IDS[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:id("", /IDS[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(fn:substring("1id3",2), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:substring("1id3",2), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id4", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id4", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("p1:id5", /IDS[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:id("p1:id5", /IDS[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id1 id1", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 id1", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id("id1 ID1", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 ID1", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(fn:lower-case("ID1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:lower-case("ID1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(fn:upper-case("id5"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:upper-case("id5"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(fn:concat("i","d1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:concat("i","d1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(xs:string("id1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(xs:string("id1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(fn:string-join(("id","1"),""), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:string-join(("id","1"),""), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1 to 5)[ fn:id("argument1",.)]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 5)[ fn:id("argument1",.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>id((), ())</x:label>
      <x:variable name="expr" as="xs:string">id((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3)[id("ncname", .)]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[id("ncname", .)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3)[id("ncname")]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[id("ncname")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $i in id(("short", "positiveInteger")) return $i/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $i in id(("short", "positiveInteger")) return $i/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>id(("short"), //xs:element/@name[. = "positiveInteger"])/@name</x:label>
      <x:variable name="expr" as="xs:string">id(("short"), //xs:element/@name[. = "positiveInteger"])/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>id((".", "short", "123"), //xs:element/@name[. = "positiveInteger"])/@name</x:label>
      <x:variable name="expr" as="xs:string">id((".", "short", "123"), //xs:element/@name[. = "positiveInteger"])/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(//b/@ref)/data(exactly-one(@*))</x:label>
      <x:variable name="expr" as="xs:string">fn:id(//b/@ref)/data(exactly-one(@*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $i in id(("short positiveInteger")) return $i/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $i in id(("short positiveInteger")) return $i/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:id(string-join(reverse(//b/@ref), '	'))/data(exactly-one(@*))</x:label>
      <x:variable name="expr" as="xs:string">fn:id(string-join(reverse(//b/@ref), '	'))/data(exactly-one(@*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>