<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/id.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:id(&#34;argument 1&#34;, / ,&#34;Argument 3&#34;)">
      <x:call>
        <x:param select="string(.)">fn:id("argument 1", / ,"Argument 3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1 to 5)[fn:id(&#34;argument1&#34;)]">
      <x:call>
        <x:param select="string(.)">(1 to 5)[fn:id("argument1")]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;argument1&#34;, &#34;A&#34;)">
      <x:call>
        <x:param select="string(.)">fn:id("argument1", "A")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id1&#34;, /IDS[1])/string(@anId)">
      <x:call>
        <x:param select="string(.)">fn:id("id1", /IDS[1])/string(@anId)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:id(&#34;nomatchingid&#34;, /IDS[1]))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:id("nomatchingid", /IDS[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id2 id2&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id2 id2", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id1 id2&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id1 id2", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id1 nomatching&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id1 nomatching", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:id(&#34;nomatching1 nomatching2&#34;, /IDS[1]))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:id("nomatching1 nomatching2", /IDS[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;&#34;, /IDS[1])">
      <x:call>
        <x:param select="string(.)">fn:id("", /IDS[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(fn:substring(&#34;1id3&#34;,2), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(fn:substring("1id3",2), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id4&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id4", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;p1:id5&#34;, /IDS[1])">
      <x:call>
        <x:param select="string(.)">fn:id("p1:id5", /IDS[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id1 id1&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id1 id1", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(&#34;id1 ID1&#34;, /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id("id1 ID1", /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(fn:lower-case(&#34;ID1&#34;), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(fn:lower-case("ID1"), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(fn:upper-case(&#34;id5&#34;), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(fn:upper-case("id5"), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(fn:concat(&#34;i&#34;,&#34;d1&#34;), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(fn:concat("i","d1"), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(xs:string(&#34;id1&#34;), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(xs:string("id1"), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(fn:string-join((&#34;id&#34;,&#34;1&#34;),&#34;&#34;), /IDS[1])/name()">
      <x:call>
        <x:param select="string(.)">fn:id(fn:string-join(("id","1"),""), /IDS[1])/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1 to 5)[ fn:id(&#34;argument1&#34;,.)]">
      <x:call>
        <x:param select="string(.)">(1 to 5)[ fn:id("argument1",.)]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="id((), ())">
      <x:call>
        <x:param select="string(.)">id((), ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2, 3)[id(&#34;ncname&#34;, .)]">
      <x:call>
        <x:param select="string(.)">(1, 2, 3)[id("ncname", .)]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2, 3)[id(&#34;ncname&#34;)]">
      <x:call>
        <x:param select="string(.)">(1, 2, 3)[id("ncname")]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $i in id((&#34;short&#34;, &#34;positiveInteger&#34;)) return $i/@name/string()">
      <x:call>
        <x:param select="string(.)">for $i in id(("short", "positiveInteger")) return $i/@name/string()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="id((&#34;short&#34;), //xs:element/@name[. = &#34;positiveInteger&#34;])/@name">
      <x:call>
        <x:param select="string(.)">id(("short"), //xs:element/@name[. = "positiveInteger"])/@name</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="id((&#34;.&#34;, &#34;short&#34;, &#34;123&#34;), //xs:element/@name[. = &#34;positiveInteger&#34;])/@name">
      <x:call>
        <x:param select="string(.)">id((".", "short", "123"), //xs:element/@name[. = "positiveInteger"])/@name</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(//b/@ref)/data(exactly-one(@*))">
      <x:call>
        <x:param select="string(.)">fn:id(//b/@ref)/data(exactly-one(@*))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $i in id((&#34;short positiveInteger&#34;)) return $i/@name/string()">
      <x:call>
        <x:param select="string(.)">for $i in id(("short positiveInteger")) return $i/@name/string()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:id(string-join(reverse(//b/@ref), '&#x9;'))/data(exactly-one(@*))">
      <x:call>
        <x:param select="string(.)">fn:id(string-join(reverse(//b/@ref), '	'))/data(exactly-one(@*))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>