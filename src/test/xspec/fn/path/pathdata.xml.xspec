<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario label="/qt3tests-master/app/FunctxFn.xml">
    <x:scenario focus="">
      <x:label>(abs(3.5))</x:label>
      <x:variable name="expr" as="xs:string">(abs(3.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(abs(-4))</x:label>
      <x:variable name="expr" as="xs:string">(abs(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(abs(xs:float('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">(abs(xs:float('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(abs(3.5), abs(-4), abs(xs:float('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">(abs(3.5), abs(-4), abs(xs:float('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-date-to-timezone( xs:date('2006-02-15'), xs:dayTimeDuration('-PT8H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-date-to-timezone( xs:date('2006-02-15'), xs:dayTimeDuration('-PT8H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-date-to-timezone( xs:date('2006-02-15-03:00'), xs:dayTimeDuration('-PT8H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-date-to-timezone( xs:date('2006-02-15-03:00'), xs:dayTimeDuration('-PT8H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-date-to-timezone( xs:date('2006-02-15'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-date-to-timezone( xs:date('2006-02-15'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-date-to-timezone( xs:date('2006-02-15-03:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-date-to-timezone( xs:date('2006-02-15-03:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-date-to-timezone( xs:date('2006-02-15'), xs:dayTimeDuration('-PT8H')), adjust-date-to-timezone( xs:date('2006-02-15-03:00'), xs:dayTimeDuration('-PT8H')), adjust-date-to-timezone( xs:date('2006-02-15'), ()), adjust-date-to-timezone( xs:date('2006-02-15-03:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-date-to-timezone( xs:date('2006-02-15'), xs:dayTimeDuration('-PT8H')), adjust-date-to-timezone( xs:date('2006-02-15-03:00'), xs:dayTimeDuration('-PT8H')), adjust-date-to-timezone( xs:date('2006-02-15'), ()), adjust-date-to-timezone( xs:date('2006-02-15-03:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T01:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T01:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), xs:dayTimeDuration('-PT7H')), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), xs:dayTimeDuration('-PT7H')), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), ()), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), ()), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T01:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), xs:dayTimeDuration('-PT7H')), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), xs:dayTimeDuration('-PT7H')), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00'), ()), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T17:00:00-03:00'), ()), adjust-dateTime-to-timezone( xs:dateTime('2006-02-15T01:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-time-to-timezone( xs:time('17:00:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-time-to-timezone( xs:time('17:00:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-time-to-timezone( xs:time('17:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-time-to-timezone( xs:time('17:00:00-03:00'), xs:dayTimeDuration('-PT7H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-time-to-timezone( xs:time('17:00:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-time-to-timezone( xs:time('17:00:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-time-to-timezone( xs:time('17:00:00-03:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-time-to-timezone( xs:time('17:00:00-03:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(adjust-time-to-timezone( xs:time('17:00:00'), xs:dayTimeDuration('-PT7H')), adjust-time-to-timezone( xs:time('17:00:00-03:00'), xs:dayTimeDuration('-PT7H')), adjust-time-to-timezone( xs:time('17:00:00'), ()), adjust-time-to-timezone( xs:time('17:00:00-03:00'), ()))</x:label>
      <x:variable name="expr" as="xs:string">(adjust-time-to-timezone( xs:time('17:00:00'), xs:dayTimeDuration('-PT7H')), adjust-time-to-timezone( xs:time('17:00:00-03:00'), xs:dayTimeDuration('-PT7H')), adjust-time-to-timezone( xs:time('17:00:00'), ()), adjust-time-to-timezone( xs:time('17:00:00-03:00'), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(avg( (1, 2, 3, 4, 5) ))</x:label>
      <x:variable name="expr" as="xs:string">(avg( (1, 2, 3, 4, 5) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(avg( (1, 2, 3, (), 4, 5) ))</x:label>
      <x:variable name="expr" as="xs:string">(avg( (1, 2, 3, (), 4, 5) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(avg( (xs:yearMonthDuration('P4M'), xs:yearMonthDuration('P6M') ) ))</x:label>
      <x:variable name="expr" as="xs:string">(avg( (xs:yearMonthDuration('P4M'), xs:yearMonthDuration('P6M') ) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(5))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(5.1))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(5.1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(5.5))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(5.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(-5.5))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(-5.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(-5.51))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(-5.51))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling( () ))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ceiling(5), ceiling(5.1), ceiling(5.5), ceiling(-5.5), ceiling(-5.51), ceiling( () ))</x:label>
      <x:variable name="expr" as="xs:string">(ceiling(5), ceiling(5.1), ceiling(5.5), ceiling(-5.5), ceiling(-5.51), ceiling( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoint-equal('abc', 'abc'))</x:label>
      <x:variable name="expr" as="xs:string">(codepoint-equal('abc', 'abc'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoint-equal('abc', 'ab c'))</x:label>
      <x:variable name="expr" as="xs:string">(codepoint-equal('abc', 'ab c'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoint-equal('abc', ()))</x:label>
      <x:variable name="expr" as="xs:string">(codepoint-equal('abc', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoint-equal('abc', 'abc'), codepoint-equal('abc', 'ab c'), codepoint-equal('abc', ()))</x:label>
      <x:variable name="expr" as="xs:string">(codepoint-equal('abc', 'abc'), codepoint-equal('abc', 'ab c'), codepoint-equal('abc', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoints-to-string((97, 32, 98, 32, 99)))</x:label>
      <x:variable name="expr" as="xs:string">(codepoints-to-string((97, 32, 98, 32, 99)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoints-to-string(97))</x:label>
      <x:variable name="expr" as="xs:string">(codepoints-to-string(97))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoints-to-string(()))</x:label>
      <x:variable name="expr" as="xs:string">(codepoints-to-string(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(codepoints-to-string((97, 32, 98, 32, 99)), codepoints-to-string(97), codepoints-to-string(()))</x:label>
      <x:variable name="expr" as="xs:string">(codepoints-to-string((97, 32, 98, 32, 99)), codepoints-to-string(97), codepoints-to-string(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('a', 'b'))</x:label>
      <x:variable name="expr" as="xs:string">(compare('a', 'b'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('a', 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(compare('a', 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('b', 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(compare('b', 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('ab', 'abc'))</x:label>
      <x:variable name="expr" as="xs:string">(compare('ab', 'abc'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('a', 'B'))</x:label>
      <x:variable name="expr" as="xs:string">(compare('a', 'B'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare(upper-case('a'), upper-case('B')))</x:label>
      <x:variable name="expr" as="xs:string">(compare(upper-case('a'), upper-case('B')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('a', ()))</x:label>
      <x:variable name="expr" as="xs:string">(compare('a', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(compare('a', 'b'), compare('a', 'a'), compare('b', 'a'), compare('ab', 'abc'), compare('a', 'B'), compare(upper-case('a'), upper-case('B')), compare('a', ()))</x:label>
      <x:variable name="expr" as="xs:string">(compare('a', 'b'), compare('a', 'a'), compare('b', 'a'), compare('ab', 'abc'), compare('a', 'B'), compare(upper-case('a'), upper-case('B')), compare('a', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(concat('a', 'b'))</x:label>
      <x:variable name="expr" as="xs:string">(concat('a', 'b'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(concat('a', 'b', 'c'))</x:label>
      <x:variable name="expr" as="xs:string">(concat('a', 'b', 'c'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(concat('a', (), 'b', '', 'c'))</x:label>
      <x:variable name="expr" as="xs:string">(concat('a', (), 'b', '', 'c'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', 'e'))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', 'e'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', 'ery'))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', 'ery'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', 'query'))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', 'query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', ()))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains( (), 'q'))</x:label>
      <x:variable name="expr" as="xs:string">(contains( (), 'q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(contains('query', 'e'), contains('query', 'ery'), contains('query', 'query'), contains('query', 'x'), contains('query', ''), contains('query', ()), contains( (), 'q'))</x:label>
      <x:variable name="expr" as="xs:string">(contains('query', 'e'), contains('query', 'ery'), contains('query', 'query'), contains('query', 'x'), contains('query', ''), contains('query', ()), contains( (), 'q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(dateTime(xs:date('2006-08-15'), xs:time('12:30:45-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(dateTime(xs:date('2006-08-15'), xs:time('12:30:45-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(day-from-date(xs:date('2006-08-15')))</x:label>
      <x:variable name="expr" as="xs:string">(day-from-date(xs:date('2006-08-15')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(day-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(day-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('P5D')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('P5D')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('-PT24H')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('-PT24H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('PT23H')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('PT23H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('P1DT36H')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('P1DT36H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('PT1440M')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('PT1440M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(days-from-duration( xs:dayTimeDuration('P5D')), days-from-duration( xs:dayTimeDuration('-PT24H')), days-from-duration( xs:dayTimeDuration('PT23H')), days-from-duration( xs:dayTimeDuration('P1DT36H')), days-from-duration( xs:dayTimeDuration('PT1440M')))</x:label>
      <x:variable name="expr" as="xs:string">(days-from-duration( xs:dayTimeDuration('P5D')), days-from-duration( xs:dayTimeDuration('-PT24H')), days-from-duration( xs:dayTimeDuration('PT23H')), days-from-duration( xs:dayTimeDuration('P1DT36H')), days-from-duration( xs:dayTimeDuration('PT1440M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(default-collation())</x:label>
      <x:variable name="expr" as="xs:string">(default-collation())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(doc-available( document-uri(/) ))</x:label>
      <x:variable name="expr" as="xs:string">(doc-available( document-uri(/) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(encode-for-uri( 'Sales % Numbers.pdf'))</x:label>
      <x:variable name="expr" as="xs:string">(encode-for-uri( 'Sales % Numbers.pdf'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(encode-for-uri( 'http://datypic.com/a%20URI#frag'))</x:label>
      <x:variable name="expr" as="xs:string">(encode-for-uri( 'http://datypic.com/a%20URI#frag'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(encode-for-uri( 'Sales % Numbers.pdf'), encode-for-uri( 'http://datypic.com/a%20URI#frag'))</x:label>
      <x:variable name="expr" as="xs:string">(encode-for-uri( 'Sales % Numbers.pdf'), encode-for-uri( 'http://datypic.com/a%20URI#frag'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('query', 'y'))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('query', 'y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('query', 'query'))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('query', 'query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('query ', 'y'))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('query ', 'y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('', 'y'))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('', 'y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(ends-with('query', 'y'), ends-with('query', 'query'), ends-with('query', ''), ends-with('query ', 'y'), ends-with('', 'y'))</x:label>
      <x:variable name="expr" as="xs:string">(ends-with('query', 'y'), ends-with('query', 'query'), ends-with('query', ''), ends-with('query ', 'y'), ends-with('', 'y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(escape-html-uri( 'http://datypic.com/a%20URI#frag'))</x:label>
      <x:variable name="expr" as="xs:string">(escape-html-uri( 'http://datypic.com/a%20URI#frag'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(escape-html-uri('http://datypic.com'))</x:label>
      <x:variable name="expr" as="xs:string">(escape-html-uri('http://datypic.com'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(escape-html-uri( 'http://datypic.com/a%20URI#frag'), escape-html-uri('http://datypic.com'))</x:label>
      <x:variable name="expr" as="xs:string">(escape-html-uri( 'http://datypic.com/a%20URI#frag'), escape-html-uri('http://datypic.com'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exactly-one('a'))</x:label>
      <x:variable name="expr" as="xs:string">(exactly-one('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exists( ('a', 'b', 'c') ))</x:label>
      <x:variable name="expr" as="xs:string">(exists( ('a', 'b', 'c') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exists( '' ))</x:label>
      <x:variable name="expr" as="xs:string">(exists( '' ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exists( () ))</x:label>
      <x:variable name="expr" as="xs:string">(exists( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exists( false() ))</x:label>
      <x:variable name="expr" as="xs:string">(exists( false() ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(exists( ('a', 'b', 'c') ), exists( '' ), exists( () ), exists( false() ))</x:label>
      <x:variable name="expr" as="xs:string">(exists( ('a', 'b', 'c') ), exists( '' ), exists( () ), exists( false() ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(false())</x:label>
      <x:variable name="expr" as="xs:string">(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(5))</x:label>
      <x:variable name="expr" as="xs:string">(floor(5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(5.1))</x:label>
      <x:variable name="expr" as="xs:string">(floor(5.1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(5.7))</x:label>
      <x:variable name="expr" as="xs:string">(floor(5.7))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(-5.1))</x:label>
      <x:variable name="expr" as="xs:string">(floor(-5.1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(-5.7))</x:label>
      <x:variable name="expr" as="xs:string">(floor(-5.7))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor( () ))</x:label>
      <x:variable name="expr" as="xs:string">(floor( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(floor(5), floor(5.1), floor(5.7), floor(-5.1), floor(-5.7), floor( () ))</x:label>
      <x:variable name="expr" as="xs:string">(floor(5), floor(5.1), floor(5.7), floor(-5.1), floor(-5.7), floor( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23')), hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23')), hours-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('P1DT5H')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('P1DT5H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('-PT36H')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('-PT36H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('PT1H90M')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('PT1H90M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('PT2H59M')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('PT2H59M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('PT3600S')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('PT3600S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-duration( xs:dayTimeDuration('P1DT5H')), hours-from-duration( xs:dayTimeDuration('-PT36H')), hours-from-duration( xs:dayTimeDuration('PT1H90M')), hours-from-duration( xs:dayTimeDuration('PT2H59M')), hours-from-duration( xs:dayTimeDuration('PT3600S')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-duration( xs:dayTimeDuration('P1DT5H')), hours-from-duration( xs:dayTimeDuration('-PT36H')), hours-from-duration( xs:dayTimeDuration('PT1H90M')), hours-from-duration( xs:dayTimeDuration('PT2H59M')), hours-from-duration( xs:dayTimeDuration('PT3600S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-time( xs:time('10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-time( xs:time('10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-time( xs:time('10:30:23-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-time( xs:time('10:30:23-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(hours-from-time( xs:time('10:30:23')), hours-from-time( xs:time('10:30:23-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(hours-from-time( xs:time('10:30:23')), hours-from-time( xs:time('10:30:23-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( ('a', 'b', 'c'), 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( ('a', 'b', 'c'), 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( ('a', 'b', 'c'), 'd'))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( ('a', 'b', 'c'), 'd'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( (4, 5, 6, 4), 4))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( (4, 5, 6, 4), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( (4, 5, 6, 4), 04.0))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( (4, 5, 6, 4), 04.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( ('a', 5, 6), 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( ('a', 5, 6), 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(index-of( (), 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(index-of( (), 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 1, ('x', 'y')))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 1, ('x', 'y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 2, ('x', 'y')))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 2, ('x', 'y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 10, ('x', 'y')))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 10, ('x', 'y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 0, ('x', 'y')))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 0, ('x', 'y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 2, ()))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 2, ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( (), 3, ('a', 'b', 'c') ))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( (), 3, ('a', 'b', 'c') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before( ('a', 'b', 'c'), 1, ('x', 'y')), insert-before( ('a', 'b', 'c'), 2, ('x', 'y')), insert-before( ('a', 'b', 'c'), 10, ('x', 'y')), insert-before( ('a', 'b', 'c'), 0, ('x', 'y')), insert-before( ('a', 'b', 'c'), 2, ()), insert-before( (), 3, ('a', 'b', 'c') ))</x:label>
      <x:variable name="expr" as="xs:string">(insert-before( ('a', 'b', 'c'), 1, ('x', 'y')), insert-before( ('a', 'b', 'c'), 2, ('x', 'y')), insert-before( ('a', 'b', 'c'), 10, ('x', 'y')), insert-before( ('a', 'b', 'c'), 0, ('x', 'y')), insert-before( ('a', 'b', 'c'), 2, ()), insert-before( (), 3, ('a', 'b', 'c') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(iri-to-uri( 'http://datypic.com/Sales Numbers.pdf'))</x:label>
      <x:variable name="expr" as="xs:string">(iri-to-uri( 'http://datypic.com/Sales Numbers.pdf'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/ catalog/product[last()])</x:label>
      <x:variable name="expr" as="xs:string">(/ catalog/product[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(local-name-from-QName( QName('http://datypic.com/prod', 'number')))</x:label>
      <x:variable name="expr" as="xs:string">(local-name-from-QName( QName('http://datypic.com/prod', 'number')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(local-name-from-QName(QName ('', 'number')))</x:label>
      <x:variable name="expr" as="xs:string">(local-name-from-QName(QName ('', 'number')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(local-name-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">(local-name-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(local-name-from-QName( QName('http://datypic.com/prod', 'number')), local-name-from-QName(QName ('', 'number')), local-name-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">(local-name-from-QName( QName('http://datypic.com/prod', 'number')), local-name-from-QName(QName ('', 'number')), local-name-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(lower-case('QUERY'))</x:label>
      <x:variable name="expr" as="xs:string">(lower-case('QUERY'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(lower-case('Query'))</x:label>
      <x:variable name="expr" as="xs:string">(lower-case('Query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(lower-case('QUERY123'))</x:label>
      <x:variable name="expr" as="xs:string">(lower-case('QUERY123'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(lower-case('QUERY'), lower-case('Query'), lower-case('QUERY123'))</x:label>
      <x:variable name="expr" as="xs:string">(lower-case('QUERY'), lower-case('Query'), lower-case('QUERY123'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('PT30M')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('PT30M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('-PT90M')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('-PT90M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('PT1M90S')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('PT1M90S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('PT3H')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('PT3H')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('PT60M')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('PT60M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-duration( xs:dayTimeDuration('PT30M')), minutes-from-duration( xs:dayTimeDuration('-PT90M')), minutes-from-duration( xs:dayTimeDuration('PT1M90S')), minutes-from-duration( xs:dayTimeDuration('PT3H')), minutes-from-duration( xs:dayTimeDuration('PT60M')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-duration( xs:dayTimeDuration('PT30M')), minutes-from-duration( xs:dayTimeDuration('-PT90M')), minutes-from-duration( xs:dayTimeDuration('PT1M90S')), minutes-from-duration( xs:dayTimeDuration('PT3H')), minutes-from-duration( xs:dayTimeDuration('PT60M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(minutes-from-time(xs:time('10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(minutes-from-time(xs:time('10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(month-from-date(xs:date('2006-08-15')))</x:label>
      <x:variable name="expr" as="xs:string">(month-from-date(xs:date('2006-08-15')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(month-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(month-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(months-from-duration( xs:yearMonthDuration('P3M')))</x:label>
      <x:variable name="expr" as="xs:string">(months-from-duration( xs:yearMonthDuration('P3M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(months-from-duration( xs:yearMonthDuration('-P18M')))</x:label>
      <x:variable name="expr" as="xs:string">(months-from-duration( xs:yearMonthDuration('-P18M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(months-from-duration( xs:yearMonthDuration('P1Y')))</x:label>
      <x:variable name="expr" as="xs:string">(months-from-duration( xs:yearMonthDuration('P1Y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(months-from-duration( xs:yearMonthDuration('P12M')))</x:label>
      <x:variable name="expr" as="xs:string">(months-from-duration( xs:yearMonthDuration('P12M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(months-from-duration( xs:yearMonthDuration('P3M')), months-from-duration( xs:yearMonthDuration('-P18M')), months-from-duration( xs:yearMonthDuration('P1Y')), months-from-duration( xs:yearMonthDuration('P12M')))</x:label>
      <x:variable name="expr" as="xs:string">(months-from-duration( xs:yearMonthDuration('P3M')), months-from-duration( xs:yearMonthDuration('-P18M')), months-from-duration( xs:yearMonthDuration('P1Y')), months-from-duration( xs:yearMonthDuration('P12M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(namespace-uri-from-QName( QName ('http://datypic.com/pre', 'prefixed')))</x:label>
      <x:variable name="expr" as="xs:string">(namespace-uri-from-QName( QName ('http://datypic.com/pre', 'prefixed')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(namespace-uri-from-QName( QName ('', 'unprefixed')))</x:label>
      <x:variable name="expr" as="xs:string">(namespace-uri-from-QName( QName ('', 'unprefixed')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(namespace-uri-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">(namespace-uri-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(namespace-uri-from-QName( QName ('http://datypic.com/pre', 'prefixed')), namespace-uri-from-QName( QName ('', 'unprefixed')), namespace-uri-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">(namespace-uri-from-QName( QName ('http://datypic.com/pre', 'prefixed')), namespace-uri-from-QName( QName ('', 'unprefixed')), namespace-uri-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space('query'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space('query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space(' query '))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space(' query '))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space('xml query'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space('xml query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space('xml query'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space('xml query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space('xml query'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space('xml query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space(''))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space(''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space(' '))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space(' '))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-space(()))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-space(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-unicode('query'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-unicode('query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-unicode('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-unicode('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-unicode('query'), normalize-unicode('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-unicode('query'), normalize-unicode('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not(32 &gt;
         20))</x:label>
      <x:variable name="expr" as="xs:string">(not(32 &gt;
         20))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not((/) //product))</x:label>
      <x:variable name="expr" as="xs:string">(not((/) //product))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not(true()))</x:label>
      <x:variable name="expr" as="xs:string">(not(true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not(()))</x:label>
      <x:variable name="expr" as="xs:string">(not(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not(''))</x:label>
      <x:variable name="expr" as="xs:string">(not(''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(not(0))</x:label>
      <x:variable name="expr" as="xs:string">(not(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(one-or-more('a'))</x:label>
      <x:variable name="expr" as="xs:string">(one-or-more('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(one-or-more( ('a', 'b') ))</x:label>
      <x:variable name="expr" as="xs:string">(one-or-more( ('a', 'b') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(one-or-more('a'), one-or-more( ('a', 'b') ))</x:label>
      <x:variable name="expr" as="xs:string">(one-or-more('a'), one-or-more( ('a', 'b') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName('http://datypic.com/prod','product'))</x:label>
      <x:variable name="expr" as="xs:string">(QName('http://datypic.com/prod','product'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName('http://datypic.com/prod', 'pre:product'))</x:label>
      <x:variable name="expr" as="xs:string">(QName('http://datypic.com/prod', 'pre:product'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName('', 'product'))</x:label>
      <x:variable name="expr" as="xs:string">(QName('', 'product'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName('http://datypic.com/prod','product'), QName('http://datypic.com/prod', 'pre:product'), QName('', 'product'))</x:label>
      <x:variable name="expr" as="xs:string">(QName('http://datypic.com/prod','product'), QName('http://datypic.com/prod', 'pre:product'), QName('', 'product'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove( ('a', 'b', 'c'), 2) )</x:label>
      <x:variable name="expr" as="xs:string">(remove( ('a', 'b', 'c'), 2) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove( ('a', 'b', 'c'), 10))</x:label>
      <x:variable name="expr" as="xs:string">(remove( ('a', 'b', 'c'), 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove( ('a', 'b', 'c'), 0))</x:label>
      <x:variable name="expr" as="xs:string">(remove( ('a', 'b', 'c'), 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove( ('a', 'b', 'c'), 2) , remove( ('a', 'b', 'c'), 10), remove( ('a', 'b', 'c'), 0))</x:label>
      <x:variable name="expr" as="xs:string">(remove( ('a', 'b', 'c'), 2) , remove( ('a', 'b', 'c'), 10), remove( ('a', 'b', 'c'), 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', 'r', 'as'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', 'r', 'as'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', 'qu', 'quack'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', 'qu', 'quack'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', '[ry]', 'l'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', '[ry]', 'l'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', '[ry]+', 'l'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', '[ry]+', 'l'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', 'z', 'a'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', 'z', 'a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', 'query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', 'query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace( (), 'r', 'as'))</x:label>
      <x:variable name="expr" as="xs:string">(replace( (), 'r', 'as'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('Chapter', '(Chap)|(Chapter)', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('Chapter', '(Chap)|(Chapter)', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('reluctant', 'r.*t', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('reluctant', 'r.*t', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('reluctant', 'r.*?t', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('reluctant', 'r.*?t', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('aaah', 'a{2,3}', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('aaah', 'a{2,3}', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('aaah', 'a{2,3}?', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('aaah', 'a{2,3}?', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('aaaah', 'a{2,3}', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('aaaah', 'a{2,3}', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('aaaah', 'a{2,3}?', 'X'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('aaaah', 'a{2,3}?', 'X'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('Chap 2...Chap 3...Chap 4...', 'Chap (\d)', 'Sec $1.0'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('Chap 2...Chap 3...Chap 4...', 'Chap (\d)', 'Sec $1.0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('abc123', '([a-z])', '$1x'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('abc123', '([a-z])', '$1x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('2315551212', '(\d{3})(\d{3})(\d{4})', '($1) $2-$3'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('2315551212', '(\d{3})(\d{3})(\d{4})', '($1) $2-$3'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('2006-10-18', '\d{2}(\d{2})-(\d{2})-(\d{2})', '$2/$3/$1'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('2006-10-18', '\d{2}(\d{2})-(\d{2})-(\d{2})', '$2/$3/$1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('25', '(\d+)', '\$$1.00'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('25', '(\d+)', '\$$1.00'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(replace('query', 'r', 'as'), replace('query', 'qu', 'quack'), replace('query', '[ry]', 'l'), replace('query', '[ry]+', 'l'), replace('query', 'z', 'a'), replace('query', 'query', ''), replace( (), 'r', 'as'), replace('Chapter', '(Chap)|(Chapter)', 'x'), replace('reluctant', 'r.*t', 'X'), replace('reluctant', 'r.*?t', 'X'), replace('aaah', 'a{2,3}', 'X'), replace('aaah', 'a{2,3}?', 'X'), replace('aaaah', 'a{2,3}', 'X'), replace('aaaah', 'a{2,3}?', 'X'), replace('Chap 2...Chap 3...Chap 4...', 'Chap (\d)', 'Sec $1.0'), replace('abc123', '([a-z])', '$1x'), replace('2315551212', '(\d{3})(\d{3})(\d{4})', '($1) $2-$3'), replace('2006-10-18', '\d{2}(\d{2})-(\d{2})-(\d{2})', '$2/$3/$1'), replace('25', '(\d+)', '\$$1.00'))</x:label>
      <x:variable name="expr" as="xs:string">(replace('query', 'r', 'as'), replace('query', 'qu', 'quack'), replace('query', '[ry]', 'l'), replace('query', '[ry]+', 'l'), replace('query', 'z', 'a'), replace('query', 'query', ''), replace( (), 'r', 'as'), replace('Chapter', '(Chap)|(Chapter)', 'x'), replace('reluctant', 'r.*t', 'X'), replace('reluctant', 'r.*?t', 'X'), replace('aaah', 'a{2,3}', 'X'), replace('aaah', 'a{2,3}?', 'X'), replace('aaaah', 'a{2,3}', 'X'), replace('aaaah', 'a{2,3}?', 'X'), replace('Chap 2...Chap 3...Chap 4...', 'Chap (\d)', 'Sec $1.0'), replace('abc123', '([a-z])', '$1x'), replace('2315551212', '(\d{3})(\d{3})(\d{4})', '($1) $2-$3'), replace('2006-10-18', '\d{2}(\d{2})-(\d{2})-(\d{2})', '$2/$3/$1'), replace('25', '(\d+)', '\$$1.00'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri('prod', 'http://datypic.com/'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri('prod', 'http://datypic.com/'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri('prod2', 'http://datypic.com/prod1'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri('prod2', 'http://datypic.com/prod1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri( 'http://example.org','http://datypic.com'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri( 'http://example.org','http://datypic.com'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri( 'http://datypic.com', '../base'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri( 'http://datypic.com', '../base'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri( '', 'http://datypic.com'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri( '', 'http://datypic.com'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(resolve-uri('prod', 'http://datypic.com/'), resolve-uri('prod2', 'http://datypic.com/prod1'), resolve-uri( 'http://example.org','http://datypic.com'), resolve-uri( 'http://datypic.com', '../base'), resolve-uri( '', 'http://datypic.com'))</x:label>
      <x:variable name="expr" as="xs:string">(resolve-uri('prod', 'http://datypic.com/'), resolve-uri('prod2', 'http://datypic.com/prod1'), resolve-uri( 'http://example.org','http://datypic.com'), resolve-uri( 'http://datypic.com', '../base'), resolve-uri( '', 'http://datypic.com'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(reverse( (1, 2, 3, 4, 5) ))</x:label>
      <x:variable name="expr" as="xs:string">(reverse( (1, 2, 3, 4, 5) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(reverse( (6, 2, 4) ))</x:label>
      <x:variable name="expr" as="xs:string">(reverse( (6, 2, 4) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(reverse( () ))</x:label>
      <x:variable name="expr" as="xs:string">(reverse( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(reverse( (1, 2, 3, 4, 5) ), reverse( (6, 2, 4) ), reverse( () ))</x:label>
      <x:variable name="expr" as="xs:string">(reverse( (1, 2, 3, 4, 5) ), reverse( (6, 2, 4) ), reverse( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(5.5))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(5.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(6.5))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(6.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(9372.253, 2))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(9372.253, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(9372.253, 0))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(9372.253, 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(9372.253, -3))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(9372.253, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round-half-to-even(5.5), round-half-to-even(6.5), round-half-to-even(9372.253, 2), round-half-to-even(9372.253, 0), round-half-to-even(9372.253, -3))</x:label>
      <x:variable name="expr" as="xs:string">(round-half-to-even(5.5), round-half-to-even(6.5), round-half-to-even(9372.253, 2), round-half-to-even(9372.253, 0), round-half-to-even(9372.253, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(5))</x:label>
      <x:variable name="expr" as="xs:string">(round(5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(5.1))</x:label>
      <x:variable name="expr" as="xs:string">(round(5.1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(5.5))</x:label>
      <x:variable name="expr" as="xs:string">(round(5.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(-5.5))</x:label>
      <x:variable name="expr" as="xs:string">(round(-5.5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(-5.51))</x:label>
      <x:variable name="expr" as="xs:string">(round(-5.51))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(round(5), round(5.1), round(5.5), round(-5.5), round(-5.51))</x:label>
      <x:variable name="expr" as="xs:string">(round(5), round(5.1), round(5.5), round(-5.5), round(-5.51))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-dateTime( xs:dateTime('2006-08-15T10:30:23.5')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-dateTime( xs:dateTime('2006-08-15T10:30:23.5')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-duration( xs:dayTimeDuration('PT30.5S')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-duration( xs:dayTimeDuration('PT30.5S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-duration( xs:dayTimeDuration('-PT90.5S')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-duration( xs:dayTimeDuration('-PT90.5S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-duration( xs:dayTimeDuration('PT1M')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-duration( xs:dayTimeDuration('PT1M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-duration( xs:dayTimeDuration('PT60S')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-duration( xs:dayTimeDuration('PT60S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-duration( xs:dayTimeDuration('PT30.5S')), seconds-from-duration( xs:dayTimeDuration('-PT90.5S')), seconds-from-duration( xs:dayTimeDuration('PT1M')), seconds-from-duration( xs:dayTimeDuration('PT60S')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-duration( xs:dayTimeDuration('PT30.5S')), seconds-from-duration( xs:dayTimeDuration('-PT90.5S')), seconds-from-duration( xs:dayTimeDuration('PT1M')), seconds-from-duration( xs:dayTimeDuration('PT60S')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(seconds-from-time(xs:time('10:30:23.5')))</x:label>
      <x:variable name="expr" as="xs:string">(seconds-from-time(xs:time('10:30:23.5')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', 'que'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', 'que'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', 'query'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', 'query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', 'u'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', 'u'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('', 'query'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('', 'query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('', ''))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', ()))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with(' query', 'q'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with(' query', 'q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(starts-with('query', 'que'), starts-with('query', 'query'), starts-with('query', 'u'), starts-with('query', ''), starts-with('', 'query'), starts-with('', ''), starts-with('query', ()), starts-with(' query', 'q'))</x:label>
      <x:variable name="expr" as="xs:string">(starts-with('query', 'que'), starts-with('query', 'query'), starts-with('query', 'u'), starts-with('query', ''), starts-with('', 'query'), starts-with('', ''), starts-with('query', ()), starts-with(' query', 'q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join( ('a', 'b', 'c'), ''))</x:label>
      <x:variable name="expr" as="xs:string">(string-join( ('a', 'b', 'c'), ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join( ('a', 'b', 'c'), '/*'))</x:label>
      <x:variable name="expr" as="xs:string">(string-join( ('a', 'b', 'c'), '/*'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join( ('a', '', 'c'), '/*'))</x:label>
      <x:variable name="expr" as="xs:string">(string-join( ('a', '', 'c'), '/*'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join( 'a', '/*'))</x:label>
      <x:variable name="expr" as="xs:string">(string-join( 'a', '/*'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join((), '/*'))</x:label>
      <x:variable name="expr" as="xs:string">(string-join((), '/*'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-join( ('a', 'b', 'c'), ''), string-join( ('a', 'b', 'c'), '/*'), string-join( ('a', '', 'c'), '/*'), string-join( 'a', '/*'), string-join((), '/*'))</x:label>
      <x:variable name="expr" as="xs:string">(string-join( ('a', 'b', 'c'), ''), string-join( ('a', 'b', 'c'), '/*'), string-join( ('a', '', 'c'), '/*'), string-join( 'a', '/*'), string-join((), '/*'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length('query'))</x:label>
      <x:variable name="expr" as="xs:string">(string-length('query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length(' 
query
 '))</x:label>
      <x:variable name="expr" as="xs:string">(string-length(' 
query
 '))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length(normalize-space(' query ')))</x:label>
      <x:variable name="expr" as="xs:string">(string-length(normalize-space(' query ')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length('xml query'))</x:label>
      <x:variable name="expr" as="xs:string">(string-length('xml query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length(''))</x:label>
      <x:variable name="expr" as="xs:string">(string-length(''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length(()))</x:label>
      <x:variable name="expr" as="xs:string">(string-length(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-length('query'), string-length(' 
query 
 '), string-length(normalize-space('  
query 
 ')), string-length('xml query'), string-length(''), string-length(()))</x:label>
      <x:variable name="expr" as="xs:string">(string-length('query'), string-length(' 
query 
 '), string-length(normalize-space('  
query 
 ')), string-length('xml query'), string-length(''), string-length(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-to-codepoints('abc'))</x:label>
      <x:variable name="expr" as="xs:string">(string-to-codepoints('abc'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-to-codepoints('a'))</x:label>
      <x:variable name="expr" as="xs:string">(string-to-codepoints('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-to-codepoints(''))</x:label>
      <x:variable name="expr" as="xs:string">(string-to-codepoints(''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(string-to-codepoints('abc'), string-to-codepoints('a'), string-to-codepoints(''))</x:label>
      <x:variable name="expr" as="xs:string">(string-to-codepoints('abc'), string-to-codepoints('a'), string-to-codepoints(''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), 3) )</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), 3) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 2))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 10))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), 10))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), -2, 5))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), -2, 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( (), 3))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( (), 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(subsequence( ('a', 'b', 'c', 'd', 'e'), 3) , subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 2), subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 10), subsequence( ('a', 'b', 'c', 'd', 'e'), 10), subsequence( ('a', 'b', 'c', 'd', 'e'), -2, 5), subsequence( (), 3))</x:label>
      <x:variable name="expr" as="xs:string">(subsequence( ('a', 'b', 'c', 'd', 'e'), 3) , subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 2), subsequence( ('a', 'b', 'c', 'd', 'e'), 3, 10), subsequence( ('a', 'b', 'c', 'd', 'e'), 10), subsequence( ('a', 'b', 'c', 'd', 'e'), -2, 5), subsequence( (), 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('query', 'u'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('query', 'u'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('queryquery', 'ue'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('queryquery', 'ue'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('query', 'y'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('query', 'y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('query', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('query', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-after('query', 'u'), substring-after('queryquery', 'ue'), substring-after('query', 'y'), substring-after('query', 'x'), substring-after('query', ''), substring-after('', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-after('query', 'u'), substring-after('queryquery', 'ue'), substring-after('query', 'y'), substring-after('query', 'x'), substring-after('query', ''), substring-after('', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', 'r'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', 'r'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', 'ery'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', 'ery'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('queryquery', 'ery'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('queryquery', 'ery'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', 'query'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', 'query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', 'x'))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', 'x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', ''))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', ()))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring-before('query', 'r'), substring-before('query', 'ery'), substring-before('queryquery', 'ery'), substring-before('query', 'query'), substring-before('query', 'x'), substring-before('query', ''), substring-before('query', ()))</x:label>
      <x:variable name="expr" as="xs:string">(substring-before('query', 'r'), substring-before('query', 'ery'), substring-before('queryquery', 'ery'), substring-before('query', 'query'), substring-before('query', 'x'), substring-before('query', ''), substring-before('query', ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 1))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 3))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 2, 850))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 2, 850))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 6, 2))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 6, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', -2))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', -2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', -2, 5))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', -2, 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 1, 0))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 1, 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('', 1))</x:label>
      <x:variable name="expr" as="xs:string">(substring('', 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring((), 1))</x:label>
      <x:variable name="expr" as="xs:string">(substring((), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(substring('query', 1), substring('query', 3), substring('query', 1, 1), substring('query', 2, 3), substring('query', 2, 850), substring('query', 6, 2), substring('query', -2), substring('query', -2, 5), substring('query', 1, 0), substring('', 1), substring((), 1))</x:label>
      <x:variable name="expr" as="xs:string">(substring('query', 1), substring('query', 3), substring('query', 1, 1), substring('query', 2, 3), substring('query', 2, 850), substring('query', 6, 2), substring('query', -2), substring('query', -2, 5), substring('query', 1, 0), substring('', 1), substring((), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-date( xs:date('2006-08-15-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-date( xs:date('2006-08-15-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-date( xs:date('2006-08-15')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-date( xs:date('2006-08-15')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-date( xs:date('2006-08-15-05:00')), timezone-from-date( xs:date('2006-08-15')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-date( xs:date('2006-08-15-05:00')), timezone-from-date( xs:date('2006-08-15')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')), timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23-05:00')), timezone-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-time( xs:time('09:54:00-05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-time( xs:time('09:54:00-05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-time( xs:time('09:54:00+05:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-time( xs:time('09:54:00+05:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-time( xs:time('09:54:00Z')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-time( xs:time('09:54:00Z')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-time( xs:time('09:54:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-time( xs:time('09:54:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(timezone-from-time( xs:time('09:54:00-05:00')), timezone-from-time( xs:time('09:54:00+05:00')), timezone-from-time( xs:time('09:54:00Z')), timezone-from-time( xs:time('09:54:00')))</x:label>
      <x:variable name="expr" as="xs:string">(timezone-from-time( xs:time('09:54:00-05:00')), timezone-from-time( xs:time('09:54:00+05:00')), timezone-from-time( xs:time('09:54:00Z')), timezone-from-time( xs:time('09:54:00')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a b c', '\s'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a b c', '\s'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(tokenize( 'a    b c', '\s'), '|')</x:label>
      <x:variable name="expr" as="xs:string">string-join(tokenize( 'a    b c', '\s'), '|')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a b c', '\s+'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a b c', '\s+'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( ' b c', '\s'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( ' b c', '\s'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a,b,c', ','))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a,b,c', ','))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a,b,,c', ','))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a,b,,c', ','))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a, b, c', '[,\s]+'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a, b, c', '[,\s]+'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( '2006-12-25T12:15:00', '[\-T:]'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( '2006-12-25T12:15:00', '[\-T:]'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'Hello, there.', '\W+'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'Hello, there.', '\W+'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( (), '\s+'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( (), '\s+'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'abc', '\s'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'abc', '\s'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a,xb,xc', ',|,x'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a,xb,xc', ',|,x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(tokenize( 'a b c', '\s'), tokenize( 'a b c', '\s'), tokenize( 'a b c', '\s+'), tokenize( ' b c', '\s'), tokenize( 'a,b,c', ','), tokenize( 'a,b,,c', ','), tokenize( 'a, b, c', '[,\s]+'), tokenize( '2006-12-25T12:15:00', '[\-T:]'), tokenize( 'Hello, there.', '\W+'), tokenize( (), '\s+'), tokenize( 'abc', '\s'), tokenize( 'a,xb,xc', ',|,x'))</x:label>
      <x:variable name="expr" as="xs:string">(tokenize( 'a b c', '\s'), tokenize( 'a b c', '\s'), tokenize( 'a b c', '\s+'), tokenize( ' b c', '\s'), tokenize( 'a,b,c', ','), tokenize( 'a,b,,c', ','), tokenize( 'a, b, c', '[,\s]+'), tokenize( '2006-12-25T12:15:00', '[\-T:]'), tokenize( 'Hello, there.', '\W+'), tokenize( (), '\s+'), tokenize( 'abc', '\s'), tokenize( 'a,xb,xc', ',|,x'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('1999/01/02', '/', '-'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('1999/01/02', '/', '-'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('xml query', 'qlmx', 'QLMX'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('xml query', 'qlmx', 'QLMX'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('xml query', 'qlmx ', 'Q'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('xml query', 'qlmx ', 'Q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('xml query', 'qlmx ', ''))</x:label>
      <x:variable name="expr" as="xs:string">(translate('xml query', 'qlmx ', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('xml query', 'abcd', 'ABCD'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('xml query', 'abcd', 'ABCD'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('', 'qlmx ', 'Q'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('', 'qlmx ', 'Q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate((), 'qlmx ', 'Q'))</x:label>
      <x:variable name="expr" as="xs:string">(translate((), 'qlmx ', 'Q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(translate('1999/01/02', '/', '-'), translate('xml query', 'qlmx', 'QLMX'), translate('xml query', 'qlmx ', 'Q'), translate('xml query', 'qlmx ', ''), translate('xml query', 'abcd', 'ABCD'), translate('', 'qlmx ', 'Q'), translate((), 'qlmx ', 'Q'))</x:label>
      <x:variable name="expr" as="xs:string">(translate('1999/01/02', '/', '-'), translate('xml query', 'qlmx', 'QLMX'), translate('xml query', 'qlmx ', 'Q'), translate('xml query', 'qlmx ', ''), translate('xml query', 'abcd', 'ABCD'), translate('', 'qlmx ', 'Q'), translate((), 'qlmx ', 'Q'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(true())</x:label>
      <x:variable name="expr" as="xs:string">(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(upper-case('query'))</x:label>
      <x:variable name="expr" as="xs:string">(upper-case('query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(upper-case('QUERY'))</x:label>
      <x:variable name="expr" as="xs:string">(upper-case('QUERY'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(upper-case('Query'))</x:label>
      <x:variable name="expr" as="xs:string">(upper-case('Query'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(upper-case('query-123'))</x:label>
      <x:variable name="expr" as="xs:string">(upper-case('query-123'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(upper-case('query'), upper-case('QUERY'), upper-case('Query'), upper-case('query-123'))</x:label>
      <x:variable name="expr" as="xs:string">(upper-case('query'), upper-case('QUERY'), upper-case('Query'), upper-case('query-123'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(year-from-date(xs:date('2006-08-15')))</x:label>
      <x:variable name="expr" as="xs:string">(year-from-date(xs:date('2006-08-15')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(year-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:label>
      <x:variable name="expr" as="xs:string">(year-from-dateTime( xs:dateTime('2006-08-15T10:30:23')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('P3Y')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('P3Y')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('P3Y11M')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('P3Y11M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('-P18M')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('-P18M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('P1Y18M')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('P1Y18M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('P12M')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('P12M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(years-from-duration( xs:yearMonthDuration('P3Y')), years-from-duration( xs:yearMonthDuration('P3Y11M')), years-from-duration( xs:yearMonthDuration('-P18M')), years-from-duration( xs:yearMonthDuration('P1Y18M')), years-from-duration( xs:yearMonthDuration('P12M')))</x:label>
      <x:variable name="expr" as="xs:string">(years-from-duration( xs:yearMonthDuration('P3Y')), years-from-duration( xs:yearMonthDuration('P3Y11M')), years-from-duration( xs:yearMonthDuration('-P18M')), years-from-duration( xs:yearMonthDuration('P1Y18M')), years-from-duration( xs:yearMonthDuration('P12M')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(zero-or-one( () ))</x:label>
      <x:variable name="expr" as="xs:string">(zero-or-one( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(zero-or-one('a'))</x:label>
      <x:variable name="expr" as="xs:string">(zero-or-one('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(zero-or-one( () ), zero-or-one('a'))</x:label>
      <x:variable name="expr" as="xs:string">(zero-or-one( () ), zero-or-one('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/app/UseCaseSEQ.xml">
    <x:scenario>
      <x:label>for $s in //section[section.title = "Procedure"] return ($s//incision)[2]/instrument</x:label>
      <x:variable name="expr" as="xs:string">for $s in //section[section.title = "Procedure"] return ($s//incision)[2]/instrument</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/app/UseCaseSTRING.xml">
    <x:scenario>
      <x:label>//news_item/title[contains(., "Foobar Corporation")]</x:label>
      <x:variable name="expr" as="xs:string">//news_item/title[contains(., "Foobar Corporation")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/abs.xml">
    <x:scenario>
      <x:label>fn:abs(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:string("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:string("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:string("hello"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:string("hello"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean(fn:true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean(fn:true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean(fn:false()))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean(fn:false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:date("2002-10-09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:date("2002-10-09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:time("13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:time("13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:anyURI("www.examples.org"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:anyURI("www.examples.org"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs()</x:label>
      <x:variable name="expr" as="xs:string">abs()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">abs(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(abs(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(abs(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(10.5) eq 10.5</x:label>
      <x:variable name="expr" as="xs:string">abs(10.5) eq 10.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(-10.5) eq 10.5</x:label>
      <x:variable name="expr" as="xs:string">abs(-10.5) eq 10.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs("a string")</x:label>
      <x:variable name="expr" as="xs:string">abs("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:byte(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:byte(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedInt(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedInt(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedByte(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedByte(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:byte(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:byte(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedInt(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedInt(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedByte(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedByte(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1.1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1.1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1e1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1e1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1.1) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1.1) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1e1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1e1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(1)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(1)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedShort(.)) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedShort(.)) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedLong(.)) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedLong(.)) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedInt(.)) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedInt(.)) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedByte(.)) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedByte(.)) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:positiveInteger(.)) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:positiveInteger(.)) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:nonPositiveInteger(.)) instance of
         xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:nonPositiveInteger(.)) instance of
         xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:nonNegativeInteger(.)) instance of
         xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:nonNegativeInteger(.)) instance of
         xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:negativeInteger(.)) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:negativeInteger(.)) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:long(.)) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:long(.)) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:int(.)) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:int(.)) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:short(.)) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:short(.)) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:byte(.)) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:byte(.)) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((abs($x)) instance of xs:integer) then "integer" 
           else if ((abs($x)) instance of xs:decimal) then "decimal" 
           else if ((abs($x)) instance of xs:float) then "float"
           else if ((abs($x)) instance of xs:double) then "double" else error(), " ")</x:label>
      <x:variable name="expr" as="xs:string">string-join(for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((abs($x)) instance of xs:integer) then "integer" 
           else if ((abs($x)) instance of xs:decimal) then "decimal" 
           else if ((abs($x)) instance of xs:float) then "float"
           else if ((abs($x)) instance of xs:double) then "double" else error(), " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs( fn:reverse( (1, xs:decimal(2.2), xs:float(3.3), xs:double(4.4)) )[2] )</x:label>
      <x:variable name="expr" as="xs:string">fn:abs( fn:reverse( (1, xs:decimal(2.2), xs:float(3.3), xs:double(4.4)) )[2] )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/adjust-date-to-timezone.xml">
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("1970-01-01Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("1970-01-01Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("1983-11-17Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("1983-11-17Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2030-12-31Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2030-12-31Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:adjust-date-to-timezone(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:adjust-date-to-timezone(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00")) - fn:adjust-date-to-timezone(xs:date("2006-03-07-07:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00")) - fn:adjust-date-to-timezone(xs:date("2006-03-07-07:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00")) - fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00")) - fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00"),())) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00")) ge fn:adjust-date-to-timezone(xs:date("2005-03-07-04:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(xs:date("2002-03-07-04:00")) ge fn:adjust-date-to-timezone(xs:date("2005-03-07-04:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-date-to-timezone(current-date()[. lt xs:date('2000-01-01')])</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-date-to-timezone(current-date()[. lt xs:date('2000-01-01')])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone()</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone((), (), "WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone((), (), "WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-date-to-timezone(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-date-to-timezone(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-date-to-timezone((), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-date-to-timezone((), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(()) instance of xs:date?</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(()) instance of xs:date?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("-PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("-PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("PT14H0M0.001S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2001-02-03"), xs:dayTimeDuration("PT14H0M0.001S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07"), xs:dayTimeDuration("-PT5H0M")) eq xs:date("2002-03-07-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07"), xs:dayTimeDuration("-PT5H0M")) eq xs:date("2002-03-07-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:date("2002-03-07-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:date("2002-03-07-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07"), xs:dayTimeDuration("-PT10H")) eq xs:date("2002-03-07-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07"), xs:dayTimeDuration("-PT10H")) eq xs:date("2002-03-07-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:date("2002-03-06-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:date("2002-03-06-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07"), ()) eq xs:date("2002-03-07")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07"), ()) eq xs:date("2002-03-07")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("2002-03-07-07:00"), ()) eq xs:date("2002-03-07")</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("2002-03-07-07:00"), ()) eq xs:date("2002-03-07")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(current-date(), implicit-timezone()) eq current-date()</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(current-date(), implicit-timezone()) eq current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("-25252734927766555-06-07+02:00"), xs:dayTimeDuration("PT0S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("-25252734927766555-06-07+02:00"), xs:dayTimeDuration("PT0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(xs:date("25252734927766555-07-28-12:00"), xs:dayTimeDuration("PT12H"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(xs:date("25252734927766555-07-28-12:00"), xs:dayTimeDuration("PT12H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-date-to-timezone(current-date(), xs:dayTimeDuration("PT12H")) eq adjust-date-to-timezone(current-date(), xs:dayTimeDuration("-PT12H"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-date-to-timezone(current-date(), xs:dayTimeDuration("PT12H")) eq adjust-date-to-timezone(current-date(), xs:dayTimeDuration("-PT12H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/adjust-dateTime-to-timezone.xml">
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("1970-01-01T00:00:00Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("1970-01-01T00:00:00Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("1996-04-07T01:40:52Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("1996-04-07T01:40:52Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2030-12-31T23:59:59Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2030-12-31T23:59:59Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T00:00:00+01:00"), xs:dayTimeDuration("-PT8H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T00:00:00+01:00"), xs:dayTimeDuration("-PT8H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00")) - fn:adjust-dateTime-to-timezone(xs:dateTime("2006-03-07T10:00:00-07:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00")) - fn:adjust-dateTime-to-timezone(xs:dateTime("2006-03-07T10:00:00-07:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00")) - fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00")) - fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),())) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) - xs:dateTime("2006-03-07T10:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) - xs:dateTime("2006-03-07T10:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) - xs:dateTime("2001-03-07T10:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) - xs:dateTime("2001-03-07T10:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) ge fn:adjust-dateTime-to-timezone(xs:dateTime("2005-03-07T10:00:00-04:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00")) ge fn:adjust-dateTime-to-timezone(xs:dateTime("2005-03-07T10:00:00-04:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:adjust-dateTime-to-timezone(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:adjust-dateTime-to-timezone(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),xs:dayTimeDuration("-PT15H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),xs:dayTimeDuration("-PT15H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),xs:dayTimeDuration("PT15H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-04:00"),xs:dayTimeDuration("PT15H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(current-dateTime()[. lt xs:dateTime('2000-01-01T12:00:00Z')])</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(current-dateTime()[. lt xs:dateTime('2000-01-01T12:00:00Z')])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone()</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone((), (), "WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone((), (), "WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-dateTime-to-timezone(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-dateTime-to-timezone(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-dateTime-to-timezone((), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-dateTime-to-timezone((), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(()) instance of xs:dateTime?</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(()) instance of xs:dateTime?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime(adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T00:00:00"))) eq implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime(adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T00:00:00"))) eq implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("-PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("-PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("PT14H0M0.001S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2001-02-03T08:02:00"), xs:dayTimeDuration("PT14H0M0.001S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:dateTime("2002-03-07T10:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:dateTime("2002-03-07T10:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:dateTime("2002-03-07T12:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:dateTime("2002-03-07T12:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), xs:dayTimeDuration("-PT10H")) eq xs:dateTime("2002-03-07T10:00:00-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), xs:dayTimeDuration("-PT10H")) eq xs:dateTime("2002-03-07T10:00:00-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:dateTime("2002-03-07T07:00:00-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:dateTime("2002-03-07T07:00:00-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("PT10H")) eq xs:dateTime("2002-03-08T03:00:00+10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), xs:dayTimeDuration("PT10H")) eq xs:dateTime("2002-03-08T03:00:00+10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T00:00:00+01:00"), xs:dayTimeDuration("-PT8H")) eq xs:dateTime("2002-03-06T15:00:00-08:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T00:00:00+01:00"), xs:dayTimeDuration("-PT8H")) eq xs:dateTime("2002-03-06T15:00:00-08:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), ()) eq xs:dateTime("2002-03-07T10:00:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), ()) eq xs:dateTime("2002-03-07T10:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T24:00:00"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T24:00:00"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(current-dateTime(), implicit-timezone()) eq current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(current-dateTime(), implicit-timezone()) eq current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("-25252734927766555-06-07T01:00:00+02:00"), xs:dayTimeDuration("PT0S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("-25252734927766555-06-07T01:00:00+02:00"), xs:dayTimeDuration("PT0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(xs:dateTime("25252734927766555-07-28T23:00:00-02:00"), xs:dayTimeDuration("PT0S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(xs:dateTime("25252734927766555-07-28T23:00:00-02:00"), xs:dayTimeDuration("PT0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-dateTime-to-timezone(current-dateTime(), xs:dayTimeDuration("PT2H")) eq adjust-dateTime-to-timezone(current-dateTime(), xs:dayTimeDuration("-PT2H"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-dateTime-to-timezone(current-dateTime(), xs:dayTimeDuration("PT2H")) eq adjust-dateTime-to-timezone(current-dateTime(), xs:dayTimeDuration("-PT2H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/adjust-time-to-timezone.xml">
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("00:00:00Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("00:00:00Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("08:03:35Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("08:03:35Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("23:59:59Z"),xs:dayTimeDuration("-PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("23:59:59Z"),xs:dayTimeDuration("-PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00-05:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"),xs:dayTimeDuration("-PT5H0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00-05:00"),())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00-05:00"),())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:adjust-time-to-timezone((),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:adjust-time-to-timezone((),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("09:00:00Z"),()) - fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("09:00:00Z"),()) - fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()) - fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()) - fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:adjust-time-to-timezone(xs:time("10:00:00Z"),())) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()) ge fn:adjust-time-to-timezone(xs:time("11:00:00Z"),())</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("10:00:00Z"),()) ge fn:adjust-time-to-timezone(xs:time("11:00:00Z"),())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(current-time()[current-date() lt xs:date('2000-01-01')])</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(current-time()[current-date() lt xs:date('2000-01-01')])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone()</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone((), (), "WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone((), (), "WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-time-to-timezone(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-time-to-timezone(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(adjust-time-to-timezone((), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(adjust-time-to-timezone((), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(()) instance of xs:time?</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(()) instance of xs:time?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("-PT14H1M"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("-PT14H1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("PT14H0M0.001S"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("08:02:00"), xs:dayTimeDuration("PT14H0M0.001S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time(adjust-time-to-timezone(xs:time("00:00:00"))) eq implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time(adjust-time-to-timezone(xs:time("00:00:00"))) eq implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:time("10:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:time("10:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:time("12:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("-PT5H0M")) eq xs:time("12:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00"), xs:dayTimeDuration("-PT10H")) eq xs:time("10:00:00-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00"), xs:dayTimeDuration("-PT10H")) eq xs:time("10:00:00-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:time("07:00:00-10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("-PT10H")) eq xs:time("07:00:00-10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00"), ()) eq xs:time("10:00:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00"), ()) eq xs:time("10:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00-07:00"), ()) eq xs:time("10:00:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00-07:00"), ()) eq xs:time("10:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("PT10H")) eq xs:time("03:00:00+10:00")</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("10:00:00-07:00"), xs:dayTimeDuration("PT10H")) eq xs:time("03:00:00+10:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(current-time(), implicit-timezone()) eq current-time()</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(current-time(), implicit-timezone()) eq current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>adjust-time-to-timezone(xs:time("12:00:00Z")) eq adjust-time-to-timezone(xs:time("13:00:00+01:00"))</x:label>
      <x:variable name="expr" as="xs:string">adjust-time-to-timezone(xs:time("12:00:00Z")) eq adjust-time-to-timezone(xs:time("13:00:00+01:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/avg.xml">
    <x:scenario>
      <x:label>fn:avg((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("-2147483648"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-2147483648"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("-1873914410"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-1873914410"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("2147483647"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("2147483647"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("-2147483648"),xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-2147483648"),xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:int("-2147483648"),xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:int("-2147483648"),xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("-1.7976931348623157E150"),xs:double("-1.7976931348623157E150"))) eq -1.7976931348623157E150</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("-1.7976931348623157E150"),xs:double("-1.7976931348623157E150"))) eq -1.7976931348623157E150</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("0"),xs:double("-1.7976931348623157E308"))) eq -8.9884656743115785E307</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("0"),xs:double("-1.7976931348623157E308"))) eq -8.9884656743115785E307</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("-1.7976931348623157E308"),xs:double("0"))) eq -8.9884656743115785E307</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("-1.7976931348623157E308"),xs:double("0"))) eq -8.9884656743115785E307</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("0"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("0"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("-3.4028235E38"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("-3.4028235E38"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-32768"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-32768"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-5324"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-5324"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("32767"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("32767"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-32768"),xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-32768"),xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:short("-32768"),xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:short("-32768"),xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg( (3, 4, 5) )</x:label>
      <x:variable name="expr" as="xs:string">fn:avg( (3, 4, 5) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( xs:yearMonthDuration("P20Y") , xs:yearMonthDuration("P10M") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( xs:yearMonthDuration("P20Y") , xs:yearMonthDuration("P10M") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(())</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( xs:float('INF'), xs:float('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( xs:float('INF'), xs:float('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (3, 4, 5), xs:float('NaN') ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (3, 4, 5), xs:float('NaN') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( fn:string-length("Hello") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( fn:string-length("Hello") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( fn:count("Hello") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( fn:count("Hello") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg( ( ( xs:integer("100"), xs:integer("-100"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg( ( ( xs:integer("100"), xs:integer("-100"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg( ( ( xs:decimal("-1.000000000001"), xs:integer("-100"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg( ( ( xs:decimal("-1.000000000001"), xs:integer("-100"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:decimal("1.01"), xs:integer("12") )))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:decimal("1.01"), xs:integer("12") )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("NaN"), 100, (), 2)))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("NaN"), 100, (), 2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") )))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") )))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") ))) eq xs:float("-4.9999999999999999E17")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") )))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") )))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("1.01"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("1.01"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-INF"), xs:decimal("2.34"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-INF"), xs:decimal("2.34"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("-8.988465674311579E307")</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("-8.988465674311579E307")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") ) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") ) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("8.988465674311579E307")</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") ) )) eq xs:double("8.988465674311579E307")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") ) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") ) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") ) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") ) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") ) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") ) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("1.34"), xs:float("INF"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("1.34"), xs:float("INF"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("INF"), 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("INF"), 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:yearMonthDuration("P20Y") , (3, 4, 5)))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:yearMonthDuration("P20Y") , (3, 4, 5)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( fn:empty("Hello")) or fn:boolean(fn:count("Hello")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( fn:empty("Hello")) or fn:boolean(fn:count("Hello")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( concat('hi',' all') ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( concat('hi',' all') ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( fn:empty("Hello") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( fn:empty("Hello") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( ("a", "b", "c", true()) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( ("a", "b", "c", true()) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:string("xyz"), (), (), "a" , "b") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:string("xyz"), (), (), "a" , "b") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:anyURI("www.example.com"), "a", (""), "b")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:anyURI("www.example.com"), "a", (""), "b")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:integer("100"), xs:string("abc"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:integer("100"), xs:string("abc"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:integer("830993497117024304"), "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:integer("830993497117024304"), "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:integer("999999999999999999"), "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:integer("999999999999999999"), "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:decimal("617375191608514839"), "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:decimal("617375191608514839"), "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:decimal("999999999999999999"), "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:decimal("999999999999999999"), "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("3.4028235E38"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-0"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("NaN"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("INF"), xs:decimal("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("1.01"), xs:string("a"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("1.01"), xs:string("a"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:float("-INF"), xs:decimal("2.34"), "abc")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:float("-INF"), xs:decimal("2.34"), "abc")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("1.7976931348623157E308"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-0"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("-INF"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("NaN"), xs:integer("-999999999999999999") , "a", (), "3") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:double("1.34"), xs:float("INF"), true())))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:double("1.34"), xs:float("INF"), true())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:boolean("false"), xs:string("xyz"), (), (), "a" , "b")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:boolean("false"), xs:string("xyz"), (), (), "a" , "b")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (true(), xs:string("xyz"), (), (), "a" , "b")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (true(), xs:string("xyz"), (), (), "a" , "b")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (false(), xs:string("xyz"), (), (), "a" , "b")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (false(), xs:string("xyz"), (), (), "a" , "b")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:boolean("1"), xs:double("-INF"), "s")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:boolean("1"), xs:double("-INF"), "s")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:date("1993-03-31"), xs:string("xyz"), (), (), "a" , "b")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:date("1993-03-31"), xs:string("xyz"), (), (), "a" , "b")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(( (xs:time("12:30:00"), xs:decimal("2.000003"), 2)))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(( (xs:time("12:30:00"), xs:decimal("2.000003"), 2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg()</x:label>
      <x:variable name="expr" as="xs:string">avg()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(1, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">avg(1, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(avg(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(avg(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((3, 3, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">avg((3, 3, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((-3, -3, -3)) eq -3</x:label>
      <x:variable name="expr" as="xs:string">avg((-3, -3, -3)) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(3), xs:float(3))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(3), xs:float(3))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(3), xs:decimal(3))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(3), xs:decimal(3))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(3), xs:double(3))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(3), xs:double(3))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:integer(1), xs:integer(3), xs:decimal(3))) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:integer(1), xs:integer(3), xs:decimal(3))) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(0), xs:float(5))) eq 2.0</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(0), xs:float(5))) eq 2.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(0), xs:untypedAtomic(-4))) eq -1</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(0), xs:untypedAtomic(-4))) eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), xs:integer(0), xs:untypedAtomic(3))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), xs:integer(0), xs:untypedAtomic(3))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:untypedAtomic(3), xs:integer(0), xs:decimal(1))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:untypedAtomic(3), xs:integer(0), xs:decimal(1))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((3, 3, xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((3, 3, xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((3, xs:double("NaN"), 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((3, xs:double("NaN"), 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((xs:double("NaN"), 3, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((xs:double("NaN"), 3, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(avg(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(avg(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(avg(((), ())))</x:label>
      <x:variable name="expr" as="xs:string">empty(avg(((), ())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((-5, -0, -3, -6)) eq -3.5</x:label>
      <x:variable name="expr" as="xs:string">avg((-5, -0, -3, -6)) eq -3.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((1, 2, 3, xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((1, 2, 3, xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((1, 2, 3, xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((1, 2, 3, xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg(xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((1, 2, xs:untypedAtomic("3"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((1, 2, xs:untypedAtomic("3"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((1, 2, xs:untypedAtomic("3"))) eq 2</x:label>
      <x:variable name="expr" as="xs:string">avg((1, 2, xs:untypedAtomic("3"))) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), 2, xs:untypedAtomic("3"))) eq 2</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), 2, xs:untypedAtomic("3"))) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg("a string")</x:label>
      <x:variable name="expr" as="xs:string">avg("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(xs:anyURI("a string"))</x:label>
      <x:variable name="expr" as="xs:string">avg(xs:anyURI("a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">avg((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg("a string")</x:label>
      <x:variable name="expr" as="xs:string">avg("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:untypedAtomic(3), xs:integer(3), xs:string(1)))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:untypedAtomic(3), xs:integer(3), xs:string(1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:string(1), xs:integer(3), xs:untypedAtomic(3)))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:string(1), xs:integer(3), xs:untypedAtomic(3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float(2), xs:integer(3), "a string", xs:double(2)))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float(2), xs:integer(3), "a string", xs:double(2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P125M")</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P125M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(avg( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(avg( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg((xs:float('INF'), xs:float('-INF')))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg((xs:float('INF'), xs:float('-INF')))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(avg(((3, 4, 5), xs:float('NaN')))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(avg(((3, 4, 5), xs:float('NaN')))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((3, 4, 5)) eq 4.0</x:label>
      <x:variable name="expr" as="xs:string">avg((3, 4, 5)) eq 4.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((1, 1))</x:label>
      <x:variable name="expr" as="xs:string">avg((1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(("a","b","c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(("a","b","c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(())</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:label>
      <x:variable name="expr" as="xs:string">avg(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(for $x in 1 to 9 return xs:yearMonthDuration(concat("P",$x,"M")))</x:label>
      <x:variable name="expr" as="xs:string">avg(for $x in 1 to 9 return xs:yearMonthDuration(concat("P",$x,"M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(xs:duration("P1Y1M1D"))</x:label>
      <x:variable name="expr" as="xs:string">avg(xs:duration("P1Y1M1D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg(xs:duration("P1Y1M1D"))</x:label>
      <x:variable name="expr" as="xs:string">avg(xs:duration("P1Y1M1D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:decimal("79000000000000000000000000000"),
                    xs:decimal("79000000000000000000000000000")))
            eq 79000000000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:decimal("79000000000000000000000000000"),
                    xs:decimal("79000000000000000000000000000")))
            eq 79000000000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:dayTimeDuration("P9223372036854775807D"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:dayTimeDuration("P9223372036854775807D"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:yearMonthDuration("P768614336404564650Y"), xs:yearMonthDuration("P1Y")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:yearMonthDuration("P768614336404564650Y"), xs:yearMonthDuration("P1Y")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:yearMonthDuration("P1M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:dayTimeDuration("P1DT2H"), xs:dayTimeDuration("PT22H"), xs:yearMonthDuration("P1M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:yearMonthDuration("P1Y")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:yearMonthDuration("P1Y")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((xs:yearMonthDuration("P1Y1M"), xs:yearMonthDuration("P11M"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(avg(()))</x:label>
      <x:variable name="expr" as="xs:string">boolean(avg(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:double("NaN"), current-date() - xs:date("1997-01-01") ))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:double("NaN"), current-date() - xs:date("1997-01-01") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:double("NaN"), day-from-date(current-date())))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:double("NaN"), day-from-date(current-date())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>avg((xs:float("NaN"), day-from-date(current-date())))</x:label>
      <x:variable name="expr" as="xs:string">avg((xs:float("NaN"), day-from-date(current-date())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(avg(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(avg(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/base-uri.xml">
    <x:scenario>
      <x:label>(1 to 100)[fn:base-uri()]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[fn:base-uri()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:base-uri(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:base-uri(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>base-uri((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">base-uri((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(base-uri(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(base-uri(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/boolean.xml">
    <x:scenario>
      <x:label>fn:boolean(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(())</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean("")</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(false())</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(true())</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:string(""))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:string(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(('a'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(('a'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:string('abc'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:string('abc'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(0)</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(1)</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(-1)</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float('-INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float('-INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float('INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float(0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:float(-1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:float(-1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double('-INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double('-INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double('INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double(0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:double('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:double('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal('9.99999999999999999999999999'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal('9.99999999999999999999999999'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal('-123456789.123456789123456789'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal('-123456789.123456789123456789'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal('0'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal('0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:decimal('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:decimal('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer('0'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer('0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:integer('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:integer('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger('-99999999999999999'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger('-99999999999999999'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger('0'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger('0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:nonPositiveInteger('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:nonPositiveInteger('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:negativeInteger('-99999999999999999'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:negativeInteger('-99999999999999999'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:negativeInteger('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:negativeInteger('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:positiveInteger('99999999999999999'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:positiveInteger('99999999999999999'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:positiveInteger('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:positiveInteger('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long('9223372036854775807'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long('9223372036854775807'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long('-9223372036854775808'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long('-9223372036854775808'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long('0'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long('0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:long('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:long('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int('2147483647'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int('2147483647'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int('-2147483648'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int('-2147483648'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int('0'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int('0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int('1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int('1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:int('-1'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:int('-1'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:anyURI("http://www.example.org/examples"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:anyURI("http://www.example.org/examples"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:dateTime("1999-12-31T00:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:dateTime("1999-12-31T00:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean()</x:label>
      <x:variable name="expr" as="xs:string">boolean()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(1, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">boolean(1, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 2))</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:QName("valid-local-name"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:QName("valid-local-name"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:hexBinary("03"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:hexBinary("03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:base64Binary("aaaa"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:base64Binary("aaaa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:anyURI("example.com/"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:anyURI("example.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(xs:anyURI("")))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(xs:anyURI("")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean("string")</x:label>
      <x:variable name="expr" as="xs:string">boolean("string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:untypedAtomic("string"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:untypedAtomic("string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(xs:untypedAtomic("")))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(xs:untypedAtomic("")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(1)</x:label>
      <x:variable name="expr" as="xs:string">boolean(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(""))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(false()))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(true())</x:label>
      <x:variable name="expr" as="xs:string">boolean(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq boolean(remove((xs:hexBinary("FF"), 1), 1) treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">true() eq boolean(remove((xs:hexBinary("FF"), 1), 1) treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0)</x:label>
      <x:variable name="expr" as="xs:string">not(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(1)</x:label>
      <x:variable name="expr" as="xs:string">boolean(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(1.1)</x:label>
      <x:variable name="expr" as="xs:string">boolean(1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(1.1e1)</x:label>
      <x:variable name="expr" as="xs:string">boolean(1.1e1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0.0e0)</x:label>
      <x:variable name="expr" as="xs:string">not(0.0e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0.0)</x:label>
      <x:variable name="expr" as="xs:string">not(0.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(-1)</x:label>
      <x:variable name="expr" as="xs:string">boolean(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(())</x:label>
      <x:variable name="expr" as="xs:string">not(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(()))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(())</x:label>
      <x:variable name="expr" as="xs:string">not(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty((1, 2)))</x:label>
      <x:variable name="expr" as="xs:string">not(empty((1, 2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty(((), 1, 2)))</x:label>
      <x:variable name="expr" as="xs:string">not(empty(((), 1, 2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean('nada')</x:label>
      <x:variable name="expr" as="xs:string">boolean('nada')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean('""')</x:label>
      <x:variable name="expr" as="xs:string">boolean('""')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('')</x:label>
      <x:variable name="expr" as="xs:string">not('')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(count((1, 2, 3, timezone-from-time(current-time()), 4)))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(count((1, 2, 3, timezone-from-time(current-time()), 4)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//*:Open)</x:label>
      <x:variable name="expr" as="xs:string">boolean(//*:Open)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//*:NotAtAllOpen)</x:label>
      <x:variable name="expr" as="xs:string">boolean(//*:NotAtAllOpen)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((/, 93.7))</x:label>
      <x:variable name="expr" as="xs:string">boolean((/, 93.7))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((93.7, /))</x:label>
      <x:variable name="expr" as="xs:string">boolean((93.7, /))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((true(), false()))</x:label>
      <x:variable name="expr" as="xs:string">boolean((true(), false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 0))</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(("", "a"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(("", "a"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((true(), //aspidistra))</x:label>
      <x:variable name="expr" as="xs:string">boolean((true(), //aspidistra))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(string(false()))</x:label>
      <x:variable name="expr" as="xs:string">boolean(string(false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(boolean(for $x in 1 to 10 return $x * $x))</x:label>
      <x:variable name="expr" as="xs:string">not(boolean(for $x in 1 to 10 return $x * $x))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/ceiling.xml">
    <x:scenario>
      <x:label>fn:ceiling(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ceiling(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ceiling(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling()</x:label>
      <x:variable name="expr" as="xs:string">ceiling()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(ceiling(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(ceiling(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(10.5) eq 11</x:label>
      <x:variable name="expr" as="xs:string">ceiling(10.5) eq 11</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-10.5) eq -10</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-10.5) eq -10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling("a string")</x:label>
      <x:variable name="expr" as="xs:string">ceiling("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:unsignedShort(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:unsignedShort(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:unsignedLong(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:unsignedLong(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:unsignedInt(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:unsignedInt(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:unsignedByte(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:unsignedByte(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:positiveInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:positiveInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:nonPositiveInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:nonPositiveInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:nonNegativeInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:nonNegativeInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:negativeInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:negativeInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:long(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:long(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:int(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:int(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:short(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:short(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:byte(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:byte(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((ceiling($x)) instance of xs:integer) then "integer" 
           else if ((ceiling($x)) instance of xs:decimal) then "decimal" 
           else if ((ceiling($x)) instance of xs:float) then "float"
           else if ((ceiling($x)) instance of xs:double) then "double" 
           else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((ceiling($x)) instance of xs:integer) then "integer" 
           else if ((ceiling($x)) instance of xs:decimal) then "decimal" 
           else if ((ceiling($x)) instance of xs:float) then "float"
           else if ((ceiling($x)) instance of xs:double) then "double" 
           else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(12.5)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(12.5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(12.9)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(12.9)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(0.000000001)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(0.000000001)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(0.0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(0.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-0.1)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-0.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-12345678.567890)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-12345678.567890)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-1234567891234567.2)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-1234567891234567.2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(12.5e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(12.5e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(12.9e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(12.9e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(0.000000001e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(0.000000001e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(0.0e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(0.0e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-0.1e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-0.1e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-12345678.567890e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-12345678.567890e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(-1234567891234567.2e0)</x:label>
      <x:variable name="expr" as="xs:string">ceiling(-1234567891234567.2e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:double('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:double('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:double('INF'))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:double('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:double('-INF'))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:double('-INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:double('-0'))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:double('-0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(12.5e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(12.5e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(12.9e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(12.9e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(0.000000001e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(0.000000001e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(0.0e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(0.0e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(-0.1e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(-0.1e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(-12345678.1e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(-12345678.1e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(-1234567.2e0))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(-1234567.2e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(xs:float('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(xs:float('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(xs:float('INF')))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(xs:float('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(xs:float('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(xs:float('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ceiling(xs:float(xs:float('-0')))</x:label>
      <x:variable name="expr" as="xs:string">ceiling(xs:float(xs:float('-0')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/codepoint-equal.xml">
    <x:scenario>
      <x:label>fn:codepoint-equal("a")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal((),())</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal((),())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("abc",())</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("abc",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal((), "")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal((), "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("a","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("a","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("a","b")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("a","b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:codepoint-equal("a","b"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:codepoint-equal("a","b"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:codepoint-equal("a","a"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:codepoint-equal("a","a"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal(fn:string(1),fn:string(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal(fn:string(1),fn:string(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal(fn:string("aa"),fn:string("aa"))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal(fn:string("aa"),fn:string("aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal(xs:integer(1),xs:integer(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal(xs:integer(1),xs:integer(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa",xs:integer(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa",xs:integer(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","AA")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","AA")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa",fn:lower-case("AA"))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa",fn:lower-case("AA"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa",fn:upper-case("aa"))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa",fn:upper-case("aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(fn:codepoint-equal("aa","aa"))</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(fn:codepoint-equal("aa","aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") and fn:codepoint-equal("aa","aa")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") and fn:codepoint-equal("aa","aa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal("aa","aa") or fn:codepoint-equal("aa","aa")</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal("aa","aa") or fn:codepoint-equal("aa","aa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoint-equal(normalize-unicode("garçon", "NFC"), normalize-unicode("garçon", "NFD"))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoint-equal(normalize-unicode("garçon", "NFC"), normalize-unicode("garçon", "NFD"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("b string", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("b string", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("b string", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("b string", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(upper-case(concat("B STRING", current-time())), 
                            lower-case(concat("no match", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(lower-case(concat("B STRING", current-time())), 
                            upper-case(concat("no match", current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/codepoints-to-string.xml">
    <x:scenario>
      <x:label>codepoints-to-string((98,223,1682,12365,63744))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((98,223,1682,12365,63744))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(())</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string('hello')</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string('hello')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(0)</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(10000000)</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(10000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(49)</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(49)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(97)</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(97)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string((49,97))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string((49,97))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string((35, 42, 94, 36))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string((35, 42, 94, 36))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string((99,111,100,101,112,111,105,110,116,115,45,116,111,45,115,116,114,105,110,103))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string((99,111,100,101,112,111,105,110,116,115,45,116,111,45,115,116,114,105,110,103))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(fn:codepoints-to-string((65,32,83,116,114,105,110,103)))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:codepoints-to-string((65,32,83,116,114,105,110,103)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(fn:codepoints-to-string((65,32,83,84,82,73,78,71)))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(fn:codepoints-to-string((65,32,83,84,82,73,78,71)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(fn:codepoints-to-string((97,32,115,116,114,105,110,103)))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(fn:codepoints-to-string((97,32,115,116,114,105,110,103)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(xs:integer(97))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(xs:integer(97))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string(xs:integer(fn:avg((65,32,83,116,114,105,110,103))))</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string(xs:integer(fn:avg((65,32,83,116,114,105,110,103))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:codepoints-to-string((49,97)),"1a")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:codepoints-to-string((49,97)),"1a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:codepoints-to-string((49,97)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:codepoints-to-string((49,97)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:codepoints-to-string((49,97)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:codepoints-to-string((49,97)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join((fn:codepoints-to-string((49,97)),'ab'),'')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join((fn:codepoints-to-string((49,97)),'ab'),'')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string((84, 104), "INVALID")</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((84, 104), "INVALID")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string((87, 36, 56, 87, 102, 96)) eq "W$8Wf`"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((87, 36, 56, 87, 102, 96)) eq "W$8Wf`"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(57343)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(57343)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(-500)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(-500)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(0)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(8)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(8)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(8)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(8)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(9) eq "	"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(9) eq "	"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(10) eq "
"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(10) eq "
"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(11)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(11)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(codepoints-to-string(11))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(codepoints-to-string(11))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(12)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(codepoints-to-string(12))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(codepoints-to-string(12))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(codepoints-to-string(14))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(codepoints-to-string(14))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(codepoints-to-string(31))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(codepoints-to-string(31))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(32) eq " "</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(32) eq " "</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(27637) eq "毵"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(27637) eq "毵"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(55295) eq "퟿"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(55295) eq "퟿"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(55296)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(55296)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(57343)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(57343)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(57344) eq ""</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(57344) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(61438) eq ""</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(61438) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(65533) eq "�"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(65533) eq "�"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(65534)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(65534)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(65535)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(65535)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(65536) eq "𐀀"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(65536) eq "𐀀"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(589823) eq "򏿿"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(589823) eq "򏿿"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(1114111) eq "􏿿"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(1114111) eq "􏿿"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(1114112)</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(1114112)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string( 65536 to 1114112 )</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string( 65536 to 1114112 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string( 55295 to 55297 )</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string( 55295 to 55297 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string( 55296 to 57343 )</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string( 55296 to 57343 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string( 65535 to 70000 )</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string( 65535 to 70000 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:codepoints-to-string( 65530 to 70000 )</x:label>
      <x:variable name="expr" as="xs:string">fn:codepoints-to-string( 65530 to 70000 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:codepoints-to-string( 65 to 76 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:codepoints-to-string( 65 to 76 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:codepoints-to-string( 0 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:codepoints-to-string( 0 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:codepoints-to-string( 999999999 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:codepoints-to-string( 999999999 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:codepoints-to-string( 65 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:codepoints-to-string( 65 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:codepoints-to-string( () ))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:codepoints-to-string( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( fn:string-to-codepoints(fn:codepoints-to-string(65536 to 66000)), 65536 to 66000 )</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( fn:string-to-codepoints(fn:codepoints-to-string(65536 to 66000)), 65536 to 66000 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( fn:string-to-codepoints(fn:codepoints-to-string(65536 to 100000)), 65536 to 100000 )</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( fn:string-to-codepoints(fn:codepoints-to-string(65536 to 100000)), 65536 to 100000 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 32 to 64 return boolean(codepoints-to-string($x to $x + 10))</x:label>
      <x:variable name="expr" as="xs:string">for $x in 32 to 64 return boolean(codepoints-to-string($x to $x + 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 65 to 75 return string-length(codepoints-to-string($x to $x+10))</x:label>
      <x:variable name="expr" as="xs:string">for $x in 65 to 75 return string-length(codepoints-to-string($x to $x+10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 65 to 75 return boolean(codepoints-to-string($x[. mod 2 = 0] to ($x+9)[. mod 2 = 0]))</x:label>
      <x:variable name="expr" as="xs:string">for $x in 65 to 75 return boolean(codepoints-to-string($x[. mod 2 = 0] to ($x+9)[. mod 2 = 0]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 9 to 15 return codepoints-to-string($x to $x)</x:label>
      <x:variable name="expr" as="xs:string">for $x in 9 to 15 return codepoints-to-string($x to $x)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 13 to 15 return codepoints-to-string($x to $x)</x:label>
      <x:variable name="expr" as="xs:string">for $x in 13 to 15 return codepoints-to-string($x to $x)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 9 to 9 return codepoints-to-string($x to $x+1)</x:label>
      <x:variable name="expr" as="xs:string">for $x in 9 to 9 return codepoints-to-string($x to $x+1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 13 to 13 return codepoints-to-string($x to $x)</x:label>
      <x:variable name="expr" as="xs:string">for $x in 13 to 13 return codepoints-to-string($x to $x)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (13), $y in (13,9,10) return codepoints-to-string($x to $y)</x:label>
      <x:variable name="expr" as="xs:string">for $x in (13), $y in (13,9,10) return codepoints-to-string($x to $y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/collection.xml">
    <x:scenario>
      <x:label>fn:collection("argument1","argument2")</x:label>
      <x:variable name="expr" as="xs:string">fn:collection("argument1","argument2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:collection("thisfileshouldnotexists")</x:label>
      <x:variable name="expr" as="xs:string">fn:collection("thisfileshouldnotexists")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:collection("invalidURI%gg")</x:label>
      <x:variable name="expr" as="xs:string">fn:collection("invalidURI%gg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:collection($collection-uri))</x:label>
      <x:variable name="expr" as="xs:string">count(fn:collection($collection-uri))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:collection())</x:label>
      <x:variable name="expr" as="xs:string">count(fn:collection())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:collection($collection-uri))</x:label>
      <x:variable name="expr" as="xs:string">count(fn:collection($collection-uri))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:collection())</x:label>
      <x:variable name="expr" as="xs:string">count(fn:collection())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values(fn:collection($collection-uri)//*[text()[contains(.,"TCP/IP")]]/normalize-space())</x:label>
      <x:variable name="expr" as="xs:string">distinct-values(fn:collection($collection-uri)//*[text()[contains(.,"TCP/IP")]]/normalize-space())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $d in fn:collection($collection-uri) return ($d//title)[1]</x:label>
      <x:variable name="expr" as="xs:string">for $d in fn:collection($collection-uri) return ($d//title)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("http:\\invalidURI\someURI%gg")</x:label>
      <x:variable name="expr" as="xs:string">collection("http:\\invalidURI\someURI%gg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection(":/")</x:label>
      <x:variable name="expr" as="xs:string">collection(":/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection()</x:label>
      <x:variable name="expr" as="xs:string">collection()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection(())</x:label>
      <x:variable name="expr" as="xs:string">collection(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection() | collection(())</x:label>
      <x:variable name="expr" as="xs:string">collection() | collection(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection() | collection(())</x:label>
      <x:variable name="expr" as="xs:string">collection() | collection(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1")</x:label>
      <x:variable name="expr" as="xs:string">collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("collection1")</x:label>
      <x:variable name="expr" as="xs:string">collection("collection1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1") |
         collection("collection1")</x:label>
      <x:variable name="expr" as="xs:string">collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1") |
         collection("collection1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1") |
         collection("collection1")</x:label>
      <x:variable name="expr" as="xs:string">collection("http://www.w3.org/2010/09/qt-fots-catalog/collection1") |
         collection("collection1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("collection/one/")</x:label>
      <x:variable name="expr" as="xs:string">collection("collection/one/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("nonexistent")</x:label>
      <x:variable name="expr" as="xs:string">collection("nonexistent")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection()</x:label>
      <x:variable name="expr" as="xs:string">collection()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection("##invalid")</x:label>
      <x:variable name="expr" as="xs:string">collection("##invalid")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>collection(())</x:label>
      <x:variable name="expr" as="xs:string">collection(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:collection('%gg')</x:label>
      <x:variable name="expr" as="xs:string">fn:collection('%gg')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/compare.xml">
    <x:scenario>
      <x:label>fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:compare((),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:compare((),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:compare("",()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:compare("",()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:compare("A Character String",()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:compare("A Character String",()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:compare((),"A Character String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:compare((),"A Character String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:compare("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:compare("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:compare("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:compare("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("compare","compare")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("compare","compare")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("comparecompare","compare")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("comparecompare","compare")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("12345","1234")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("12345","1234")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("compare","erapmoc")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("compare","erapmoc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:compare("a","a","CollationA")</x:label>
      <x:variable name="expr" as="xs:string">fn:compare("a","a","CollationA")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal()</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal(())</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal((), (), ())</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal((), (), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(codepoint-equal((), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">empty(codepoint-equal((), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(codepoint-equal("a string", ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(codepoint-equal("a string", ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoint-equal("a string", "a string")</x:label>
      <x:variable name="expr" as="xs:string">codepoint-equal("a string", "a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(codepoint-equal("cow", "a string"))</x:label>
      <x:variable name="expr" as="xs:string">not(codepoint-equal("cow", "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare()</x:label>
      <x:variable name="expr" as="xs:string">compare()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare(())</x:label>
      <x:variable name="expr" as="xs:string">compare(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">compare((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(compare((), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">empty(compare((), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(compare("a string", ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(compare("a string", ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(compare("a string", (), "http://www.w3.org/2005/xpath-functions/collation/codepoint"))</x:label>
      <x:variable name="expr" as="xs:string">empty(compare("a string", (), "http://www.w3.org/2005/xpath-functions/collation/codepoint"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("str", "str") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">compare("str", "str") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(compare("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED"))</x:label>
      <x:variable name="expr" as="xs:string">empty(compare("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("a", "b")</x:label>
      <x:variable name="expr" as="xs:string">compare("a", "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("b", "a")</x:label>
      <x:variable name="expr" as="xs:string">compare("b", "a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("b", "b")</x:label>
      <x:variable name="expr" as="xs:string">compare("b", "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("b", ())</x:label>
      <x:variable name="expr" as="xs:string">compare("b", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare((), "b")</x:label>
      <x:variable name="expr" as="xs:string">compare((), "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare((), ())</x:label>
      <x:variable name="expr" as="xs:string">compare((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("𐀁", "𐀂", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">compare("𐀁", "𐀂", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("𐀁", "￰", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">compare("𐀁", "￰", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("𐀁", "￰", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">compare("𐀁", "￰", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("a", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">compare("a", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare(123, 456)</x:label>
      <x:variable name="expr" as="xs:string">compare(123, 456)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare(xs:anyURI('http://www.example.com/'), 'http://www.example.com/')</x:label>
      <x:variable name="expr" as="xs:string">compare(xs:anyURI('http://www.example.com/'), 'http://www.example.com/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare(xs:untypedAtomic('http://www.example.com/'), 'http://www.example.com/')</x:label>
      <x:variable name="expr" as="xs:string">compare(xs:untypedAtomic('http://www.example.com/'), 'http://www.example.com/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("a", "a", ("http://www.w3.org/2005/xpath-functions/collation/codepoint", ()))</x:label>
      <x:variable name="expr" as="xs:string">compare("a", "a", ("http://www.w3.org/2005/xpath-functions/collation/codepoint", ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("a", "a", ((), "http://www.w3.org/2005/xpath-functions/collation/codepoint"))</x:label>
      <x:variable name="expr" as="xs:string">compare("a", "a", ((), "http://www.w3.org/2005/xpath-functions/collation/codepoint"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>compare("a", "a", ((), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ()))</x:label>
      <x:variable name="expr" as="xs:string">compare("a", "a", ((), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/concat.xml">
    <x:scenario>
      <x:label>fn:concat(xs:int("-2147483648"),xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:int("-2147483648"),xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:int("-1873914410"),xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:int("-1873914410"),xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:int("2147483647"),xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:int("2147483647"),xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:int("-2147483648"),xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:int("-2147483648"),xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:int("-2147483648"),xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:int("-2147483648"),xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:integer("-999999999999999999"),xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:integer("-999999999999999999"),xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:integer("830993497117024304"),xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:integer("830993497117024304"),xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:integer("999999999999999999"),xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:integer("999999999999999999"),xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:integer("-999999999999999999"),xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:integer("-999999999999999999"),xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:integer("-999999999999999999"),xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:integer("-999999999999999999"),xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:decimal("617375191608514839"),xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:decimal("617375191608514839"),xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:decimal("999999999999999999"),xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:decimal("999999999999999999"),xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:decimal("-999999999999999999"),xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:decimal("-999999999999999999"),xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:decimal("-999999999999999999"),xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:decimal("-999999999999999999"),xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:double("0"),xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:double("0"),xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:double("-1.7976931348623157E308"),xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:double("-1.7976931348623157E308"),xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:float("-3.4028235E38"),xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:float("-3.4028235E38"),xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:float("0"),xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:float("0"),xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:float("3.4028235E38"),xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:float("3.4028235E38"),xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:float("-3.4028235E38"),xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:float("-3.4028235E38"),xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:float("-3.4028235E38"),xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:float("-3.4028235E38"),xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:long("-92233720368547758"),xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:long("-92233720368547758"),xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:long("-47175562203048468"),xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:long("-47175562203048468"),xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:long("92233720368547758"),xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:long("92233720368547758"),xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:long("-92233720368547758"),xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:long("-92233720368547758"),xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:long("-92233720368547758"),xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:long("-92233720368547758"),xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedShort("0"),xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedShort("0"),xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedShort("44633"),xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedShort("44633"),xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedShort("65535"),xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedShort("65535"),xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedShort("0"),xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedShort("0"),xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedShort("0"),xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedShort("0"),xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:positiveInteger("1"),xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:positiveInteger("1"),xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:positiveInteger("52704602390610033"),xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:positiveInteger("52704602390610033"),xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:positiveInteger("999999999999999999"),xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:positiveInteger("999999999999999999"),xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:positiveInteger("1"),xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:positiveInteger("1"),xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:positiveInteger("1"),xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:positiveInteger("1"),xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedLong("0"),xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedLong("0"),xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedLong("130747108607674654"),xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedLong("130747108607674654"),xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedLong("184467440737095516"),xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedLong("184467440737095516"),xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedLong("0"),xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedLong("0"),xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:unsignedLong("0"),xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:unsignedLong("0"),xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:short("-32768"),xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:short("-32768"),xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:short("-5324"),xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:short("-5324"),xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:short("32767"),xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:short("32767"),xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:short("-32768"),xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:short("-32768"),xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:short("-32768"),xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:short("-32768"),xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat('un', 'grateful')</x:label>
      <x:variable name="expr" as="xs:string">fn:concat('un', 'grateful')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat('Thy ', (), 'old ', "groans", "", ' ring', ' yet', ' in', ' my', ' ancient',' ears.')</x:label>
      <x:variable name="expr" as="xs:string">fn:concat('Thy ', (), 'old ', "groans", "", ' ring', ' yet', ' in', ' my', ' ancient',' ears.')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat('Ciao!',())</x:label>
      <x:variable name="expr" as="xs:string">fn:concat('Ciao!',())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat('Ingratitude, ', 'thou ', 'marble-hearted', ' fiend!')</x:label>
      <x:variable name="expr" as="xs:string">fn:concat('Ingratitude, ', 'thou ', 'marble-hearted', ' fiend!')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("AB","CD")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("AB","CD")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("abc","de")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("abc","de")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("ABCDE","abcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("ABCDE","abcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:concat("",""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:concat("",""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:upper-case("Abc"),fn:upper-case("DH"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:upper-case("Abc"),fn:upper-case("DH"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("**","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("**","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:concat("zzz","zz"),"123")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:concat("zzz","zz"),"123")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:concat("ab","cde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:concat("ab","cde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:concat("abc","de"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:concat("abc","de"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:concat("ab","cde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:concat("ab","cde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("%$","#@!")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("%$","#@!")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("concat","concat")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("concat","concat")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat("abc","abc") and fn:concat("abc","abc")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat("abc","abc") and fn:concat("abc","abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("ab", "c") eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">concat("ab", "c") eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("ab", "c") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">concat("ab", "c") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat((), ()) instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">concat((), ()) instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat((), ()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">concat((), ()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat('a', 'b', 'c', (), 'd', 'e', 'f', 'g', 'h', ' ', 'i', 'j', 'k l') eq "abcdefgh ijk l"</x:label>
      <x:variable name="expr" as="xs:string">concat('a', 'b', 'c', (), 'd', 'e', 'f', 'g', 'h', ' ', 'i', 'j', 'k l') eq "abcdefgh ijk l"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat(1, 2, 3) eq "123"</x:label>
      <x:variable name="expr" as="xs:string">concat(1, 2, 3) eq "123"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat(1, "2", 3) eq "123"</x:label>
      <x:variable name="expr" as="xs:string">concat(1, "2", 3) eq "123"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:concat('', ''))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:concat('', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/contains.xml">
    <x:scenario>
      <x:label>fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:contains("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:contains("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:contains("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:contains("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains()</x:label>
      <x:variable name="expr" as="xs:string">contains()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains(())</x:label>
      <x:variable name="expr" as="xs:string">contains(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">contains((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">contains("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">contains("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("tattoo", "t")</x:label>
      <x:variable name="expr" as="xs:string">contains("tattoo", "t")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(contains("tattoo", "ttt"))</x:label>
      <x:variable name="expr" as="xs:string">not(contains("tattoo", "ttt"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("", ())</x:label>
      <x:variable name="expr" as="xs:string">contains("", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("a string", ())</x:label>
      <x:variable name="expr" as="xs:string">contains("a string", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>contains("foo", "foo")</x:label>
      <x:variable name="expr" as="xs:string">contains("foo", "foo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(contains("", "a string"))</x:label>
      <x:variable name="expr" as="xs:string">not(contains("", "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:contains('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:contains('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:contains('', 'empty', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:contains('', 'empty', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of( ( fn:true(), fn:false()), fn:contains('input', 'in', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of( ( fn:true(), fn:false()), fn:contains('input', 'in', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/count.xml">
    <x:scenario>
      <x:label>fn:count((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count()</x:label>
      <x:variable name="expr" as="xs:string">count()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(1, ())</x:label>
      <x:variable name="expr" as="xs:string">count(1, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( () ) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count( () ) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( (1, 2, 3) ) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count( (1, 2, 3) ) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( (1, 2, ()) ) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count( (1, 2, ()) ) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(()) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(()) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(((((()))))) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(((((()))))) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( (((), (), ()), (), (), (), ()) ) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count( (((), (), ()), (), (), (), ()) ) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( (1, 2, 3) ) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count( (1, 2, 3) ) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( ((), "one", 2, "three")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count( ((), "one", 2, "three")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count( ("one", (2, "three")) ) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count( ("one", (2, "three")) ) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, "four")) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, "four")) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, "four")) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, "four")) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(1 to 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(1 to 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse((1, 2, 3))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(reverse((1, 2, 3))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse((1, 2, 3))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(reverse((1, 2, 3))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(count((1, 2, current-time(), 4))) eq false()</x:label>
      <x:variable name="expr" as="xs:string">not(count((1, 2, current-time(), 4))) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)/count()</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)/count()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[@name='John Doe 4']) = 1</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[@name='John Doe 4']) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[@name='John Doe 4']) &lt; 2</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[@name='John Doe 4']) &lt; 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[@name='John Doe 4']) &gt; 0</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[@name='John Doe 4']) &gt; 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[@name='John Doe 4']/@name) &gt; 0.5</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[@name='John Doe 4']/@name) &gt; 0.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 4']) lt 1.5</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 4']) lt 1.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 4']) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 4']) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 498']) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 498']) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 4']) lt 1000000000000</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 4']) lt 1000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 4']) gt -5</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 4']) gt -5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//*[@name='John Doe 4']) eq 0.3</x:label>
      <x:variable name="expr" as="xs:string">count(//*[@name='John Doe 4']) eq 0.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//node()) gt 40</x:label>
      <x:variable name="expr" as="xs:string">count(//node()) gt 40</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//node()) ne -1</x:label>
      <x:variable name="expr" as="xs:string">count(//node()) ne -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 = count(//node())</x:label>
      <x:variable name="expr" as="xs:string">0 = count(//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 gt count(//node())</x:label>
      <x:variable name="expr" as="xs:string">40 gt count(//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(for $s in ("red", "blue", "green") return string-to-codepoints($s))</x:label>
      <x:variable name="expr" as="xs:string">count(for $s in ("red", "blue", "green") return string-to-codepoints($s))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(1 to 10000000)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(1 to 10000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/current-date.xml">
    <x:scenario>
      <x:label>fn:current-date()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() - fn:current-date()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() - fn:current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date("Argument 1")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date("Argument 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() - fn:current-date()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() - fn:current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) eq fn:string(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) eq fn:string(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) ne fn:string(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) ne fn:string(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) le fn:string(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) le fn:string(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) ge fn:string(fn:current-date())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) ge fn:string(fn:current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-date()) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-date()) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:current-date()))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:current-date()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() - xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() - xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-date() gt xs:date('2010-01-01')</x:label>
      <x:variable name="expr" as="xs:string">fn:current-date() gt xs:date('2010-01-01')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-date(current-date()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-date(current-date()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() = xs:date(current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">current-date() = xs:date(current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date("WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">current-date("WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() eq current-date()</x:label>
      <x:variable name="expr" as="xs:string">current-date() eq current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/current-dateTime.xml">
    <x:scenario>
      <x:label>fn:current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime() - fn:current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime() - fn:current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime() + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime() + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime() - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime() - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime("Argument 1")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime("Argument 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime() - fn:current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime() - fn:current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) eq fn:string(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) eq fn:string(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) ne fn:string(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) ne fn:string(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) le fn:string(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) le fn:string(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) ge fn:string(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) ge fn:string(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-dateTime()) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-dateTime()) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:current-dateTime()))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:current-dateTime()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-dateTime() - xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-dateTime() - xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(fn:current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(fn:current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-dateTime(current-dateTime()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-dateTime(current-dateTime()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-dateTime("WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">current-dateTime("WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-dateTime() eq current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">current-dateTime() eq current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/current-time.xml">
    <x:scenario>
      <x:label>fn:current-time()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() - fn:current-time()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() - fn:current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time("Argument 1")</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time("Argument 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() - fn:current-time()</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() - fn:current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) eq fn:string(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) eq fn:string(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) ne fn:string(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) ne fn:string(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) le fn:string(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) le fn:string(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) ge fn:string(fn:current-time())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) ge fn:string(fn:current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:current-time()) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:current-time()) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:current-time()))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:current-time()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-time(current-time()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-time(current-time()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-time() = xs:time(current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">current-time() = xs:time(current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-time("WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">current-time("WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-time() eq current-time()</x:label>
      <x:variable name="expr" as="xs:string">current-time() eq current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/data.xml">
    <x:scenario>
      <x:label>fn:data((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:data((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>data(1, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">data(1, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(data((1, 2, 3, 4, 5))) eq 5</x:label>
      <x:variable name="expr" as="xs:string">count(data((1, 2, 3, 4, 5))) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(data( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(data( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>data(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">data(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/data()</x:label>
      <x:variable name="expr" as="xs:string">/*/data()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:data(fn:error()) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:data(fn:error()) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/dateTime.xml">
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31"), xs:time("12:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31"), xs:time("12:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31"), xs:time("23:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31"), xs:time("23:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31Z"), xs:time("23:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) eq fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) eq fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ne fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ne fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) lt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) lt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) le fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) gt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) gt fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) ge fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-dateTime-to-timezone(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")),xs:dayTimeDuration("PT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-dateTime-to-timezone(fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")),xs:dayTimeDuration("PT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("22:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("22:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31+10:00"), xs:time("23:00:00+10:00")) - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:dateTime((), xs:time("23:00:00+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:dateTime((), xs:time("23:00:00+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:dateTime(xs:date("1999-12-31+10:00"), ()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:dateTime(xs:date("1999-12-31+10:00"), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:dateTime((),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:dateTime((),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:dateTime(xs:date("1999-12-31Z"), xs:time("12:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:dateTime(xs:date("1999-12-31Z"), xs:time("12:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime()</x:label>
      <x:variable name="expr" as="xs:string">dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"))</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"), xs:time("08:05:23"), ())</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"), xs:time("08:05:23"), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(dateTime(xs:date("2004-03-04"), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(dateTime(xs:date("2004-03-04"), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(dateTime((), xs:time("08:05:23")))</x:label>
      <x:variable name="expr" as="xs:string">empty(dateTime((), xs:time("08:05:23")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23+00:01"))</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23+00:01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23Z"))</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04-00:01"), xs:time("08:05:23Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04-00:00"), xs:time("08:05:23+00:00")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04-00:00"), xs:time("08:05:23+00:00")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23+11:00")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23+11:00")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"), xs:time("08:05:23-05:00")) eq xs:dateTime("2004-03-04T08:05:23-05:00")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"), xs:time("08:05:23-05:00")) eq xs:dateTime("2004-03-04T08:05:23-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04+11:00"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+11:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))) eq "1999-12-31T00:00:00"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))) eq "1999-12-31T00:00:00"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04Z"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04+13:07"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04+13:07"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"), xs:time("08:05:23+13:07")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"), xs:time("08:05:23+13:07")) eq xs:dateTime("2004-03-04T08:05:23+13:07")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"), xs:time("08:05:23")) eq xs:dateTime("2004-03-04T08:05:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>dateTime(xs:date("2004-03-04"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:label>
      <x:variable name="expr" as="xs:string">dateTime(xs:date("2004-03-04"), xs:time("08:05:23Z")) eq xs:dateTime("2004-03-04T08:05:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(dateTime((), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(dateTime((), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of( ( 'A', fn:current-dateTime(), 'B' ), fn:dateTime(fn:current-date(), fn:current-time()) )</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of( ( 'A', fn:current-dateTime(), 'B' ), fn:dateTime(fn:current-date(), fn:current-time()) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of( ( 'A', fn:current-dateTime(), 'B' ), fn:dateTime(adjust-date-to-timezone(fn:current-date(), xs:dayTimeDuration("PT1H")), adjust-time-to-timezone(fn:current-time(), xs:dayTimeDuration("PT2H"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of( ( 'A', fn:current-dateTime(), 'B' ), fn:dateTime(adjust-date-to-timezone(fn:current-date(), xs:dayTimeDuration("PT1H")), adjust-time-to-timezone(fn:current-time(), xs:dayTimeDuration("PT2H"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/day-from-date.xml">
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1983-11-17Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1983-11-17Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("2030-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("2030-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1999-05-31-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1999-05-31-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("2000-01-01+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("2000-01-01+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1999-12-31Z")) lt fn:day-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1999-12-31Z")) lt fn:day-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1999-12-31Z")) le fn:day-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1999-12-31Z")) le fn:day-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:day-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:day-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1999-05-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1999-05-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:day-from-date(xs:date("1999-12-31Z")),fn:day-from-date(xs:date("1999-12-29Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:day-from-date(xs:date("1999-12-31Z")),fn:day-from-date(xs:date("1999-12-29Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-01Z")) + fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-01Z")) + fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-01Z")) - fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-01Z")) - fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-03Z")) * fn:day-from-date(xs:date("0002-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-03Z")) * fn:day-from-date(xs:date("0002-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-02Z")) div fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-02Z")) div fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-02Z")) idiv fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-02Z")) idiv fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-02Z")) mod fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-02Z")) mod fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-02Z")) eq fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-02Z")) eq fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) ne fn:month-from-date(xs:date("1970-01-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) ne fn:month-from-date(xs:date("1970-01-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-01Z")) le fn:day-from-date(xs:date("1970-01-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-01Z")) le fn:day-from-date(xs:date("1970-01-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-date(xs:date("1970-01-03Z")) ge fn:day-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-date(xs:date("1970-01-03Z")) ge fn:day-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-date()</x:label>
      <x:variable name="expr" as="xs:string">day-from-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-date((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">day-from-date((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(day-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(day-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-date(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">day-from-date(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-date(xs:date("2000-02-03")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">day-from-date(xs:date("2000-02-03")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/day-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1999-12-31T20:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1999-12-31T20:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:day-from-dateTime(xs:dateTime("1996-12-10T12:00:00Z")),fn:day-from-dateTime(xs:dateTime("2000-12-20T12:00:00Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:day-from-dateTime(xs:dateTime("1996-12-10T12:00:00Z")),fn:day-from-dateTime(xs:dateTime("2000-12-20T12:00:00Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:day-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:day-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1999-01-01T00:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1999-01-01T00:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("0001-05-31T23:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("0001-05-31T23:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-03T00:00:00Z")) + fn:day-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-03T00:00:00Z")) + fn:day-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-10T00:00:00Z")) - fn:day-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-10T00:00:00Z")) - fn:day-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-02T02:00:00Z")) * fn:day-from-dateTime(xs:dateTime("0002-01-04T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-02T02:00:00Z")) * fn:day-from-dateTime(xs:dateTime("0002-01-04T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1000-01-10T02:00:00Z")) div fn:day-from-dateTime(xs:dateTime("0050-01-05T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1000-01-10T02:00:00Z")) div fn:day-from-dateTime(xs:dateTime("0050-01-05T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-10T10:00:00Z")) idiv fn:day-from-dateTime(xs:dateTime("1970-01-10T02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-10T10:00:00Z")) idiv fn:day-from-dateTime(xs:dateTime("1970-01-10T02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-10T10:00:00Z")) mod fn:day-from-dateTime(xs:dateTime("1970-01-03T03:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-10T10:00:00Z")) mod fn:day-from-dateTime(xs:dateTime("1970-01-03T03:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:day-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:day-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:day-from-dateTime(xs:dateTime("1970-01-03T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:day-from-dateTime(xs:dateTime("1970-01-03T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:day-from-dateTime(xs:dateTime("1970-01-02T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:day-from-dateTime(xs:dateTime("1970-01-02T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1970-01-02T10:00:00Z")) ne fn:day-from-dateTime(xs:dateTime("1970-02-02T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1970-01-02T10:00:00Z")) ne fn:day-from-dateTime(xs:dateTime("1970-02-02T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1971-01-03T10:00:00Z")) ge fn:day-from-dateTime(xs:dateTime("1970-01-03T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1971-01-03T10:00:00Z")) ge fn:day-from-dateTime(xs:dateTime("1970-01-03T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:day-from-dateTime(xs:dateTime("1971-01-10T10:00:00Z")) ge fn:day-from-dateTime(xs:dateTime("1970-01-11T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:day-from-dateTime(xs:dateTime("1971-01-10T10:00:00Z")) ge fn:day-from-dateTime(xs:dateTime("1970-01-11T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">day-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">day-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(day-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(day-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-dateTime(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">day-from-dateTime(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>day-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">day-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/days-from-duration.xml">
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P3DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P3DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P3DT55H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P3DT55H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P20DT20H")) lt fn:days-from-duration(xs:dayTimeDuration("P03DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P20DT20H")) lt fn:days-from-duration(xs:dayTimeDuration("P03DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P21DT10H")) le fn:days-from-duration(xs:dayTimeDuration("P22DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P21DT10H")) le fn:days-from-duration(xs:dayTimeDuration("P22DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:days-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:days-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P01DT01H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P01DT01H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:days-from-duration(xs:dayTimeDuration("P23DT10H")),fn:days-from-duration(xs:dayTimeDuration("P21DT10H"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:days-from-duration(xs:dayTimeDuration("P23DT10H")),fn:days-from-duration(xs:dayTimeDuration("P21DT10H"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P21DT10H")) + fn:days-from-duration(xs:dayTimeDuration("P22DT11H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P21DT10H")) + fn:days-from-duration(xs:dayTimeDuration("P22DT11H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P30DT10H")) - fn:days-from-duration(xs:dayTimeDuration("P10DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P30DT10H")) - fn:days-from-duration(xs:dayTimeDuration("P10DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P20DT09H")) * fn:days-from-duration(xs:dayTimeDuration("P03DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P20DT09H")) * fn:days-from-duration(xs:dayTimeDuration("P03DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P20DT10H")) div fn:days-from-duration(xs:dayTimeDuration("P05DT05H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P20DT10H")) div fn:days-from-duration(xs:dayTimeDuration("P05DT05H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P25DT10H")) idiv fn:days-from-duration(xs:dayTimeDuration("P05DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P25DT10H")) idiv fn:days-from-duration(xs:dayTimeDuration("P05DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P10DT10H")) mod fn:days-from-duration(xs:dayTimeDuration("P03DT03H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P10DT10H")) mod fn:days-from-duration(xs:dayTimeDuration("P03DT03H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:days-from-duration(xs:dayTimeDuration("P21DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:days-from-duration(xs:dayTimeDuration("P21DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:days-from-duration(xs:dayTimeDuration("P20DT03H"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:days-from-duration(xs:dayTimeDuration("P20DT03H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P22DT10H")) eq fn:days-from-duration(xs:dayTimeDuration("P22DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P22DT10H")) eq fn:days-from-duration(xs:dayTimeDuration("P22DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P23DT08H")) ne fn:days-from-duration(xs:dayTimeDuration("P12DT05H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P23DT08H")) ne fn:days-from-duration(xs:dayTimeDuration("P12DT05H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P20DT03H")) le fn:days-from-duration(xs:dayTimeDuration("P21DT15H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P20DT03H")) le fn:days-from-duration(xs:dayTimeDuration("P21DT15H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:dayTimeDuration("P21DT07H")) ge fn:days-from-duration(xs:dayTimeDuration("P20DT01H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:dayTimeDuration("P21DT07H")) ge fn:days-from-duration(xs:dayTimeDuration("P20DT01H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(days-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(days-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration(xs:dayTimeDuration("P45678DT8H2M1.03S")) eq 45678</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration(xs:dayTimeDuration("P45678DT8H2M1.03S")) eq 45678</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration(xs:dayTimeDuration("-P45678DT8H2M1.03S")) eq -45678</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration(xs:dayTimeDuration("-P45678DT8H2M1.03S")) eq -45678</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>days-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -8</x:label>
      <x:variable name="expr" as="xs:string">days-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:days-from-duration(xs:yearMonthDuration('P1Y'))</x:label>
      <x:variable name="expr" as="xs:string">fn:days-from-duration(xs:yearMonthDuration('P1Y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/deep-equal.xml">
    <x:scenario>
      <x:label>fn:deep-equal((xs:int("-2147483648")),(xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:int("-2147483648")),(xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:int("-1873914410")),(xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:int("-1873914410")),(xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:int("2147483647")),(xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:int("2147483647")),(xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:int("-2147483648")),(xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:int("-2147483648")),(xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:int("-2147483648")),(xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:int("-2147483648")),(xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:integer("830993497117024304")),(xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:integer("830993497117024304")),(xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:integer("999999999999999999")),(xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:integer("999999999999999999")),(xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:integer("-999999999999999999")),(xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:decimal("617375191608514839")),(xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:decimal("617375191608514839")),(xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:decimal("999999999999999999")),(xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:decimal("999999999999999999")),(xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:decimal("-999999999999999999")),(xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:double("0")),(xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:double("0")),(xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:double("1.7976931348623157E308")),(xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:double("1.7976931348623157E308")),(xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:double("-1.7976931348623157E308")),(xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:float("0")),(xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:float("0")),(xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:float("3.4028235E38")),(xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:float("3.4028235E38")),(xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:float("-3.4028235E38")),(xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:long("-92233720368547758")),(xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:long("-92233720368547758")),(xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:long("-47175562203048468")),(xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:long("-47175562203048468")),(xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:long("92233720368547758")),(xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:long("92233720368547758")),(xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:long("-92233720368547758")),(xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:long("-92233720368547758")),(xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:long("-92233720368547758")),(xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:long("-92233720368547758")),(xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedShort("44633")),(xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedShort("44633")),(xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedShort("65535")),(xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedShort("65535")),(xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedShort("0")),(xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:negativeInteger("-297014075999096793")),(xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:negativeInteger("-297014075999096793")),(xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:negativeInteger("-1")),(xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:negativeInteger("-1")),(xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:negativeInteger("-999999999999999999")),(xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:positiveInteger("52704602390610033")),(xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:positiveInteger("52704602390610033")),(xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:positiveInteger("999999999999999999")),(xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:positiveInteger("999999999999999999")),(xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:positiveInteger("1")),(xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedLong("130747108607674654")),(xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedLong("130747108607674654")),(xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedLong("184467440737095516")),(xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedLong("184467440737095516")),(xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:unsignedLong("0")),(xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonPositiveInteger("-475688437271870490")),(xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonPositiveInteger("-475688437271870490")),(xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonPositiveInteger("0")),(xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonPositiveInteger("0")),(xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonPositiveInteger("-999999999999999999")),(xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonNegativeInteger("303884545991464527")),(xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonNegativeInteger("303884545991464527")),(xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonNegativeInteger("999999999999999999")),(xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonNegativeInteger("999999999999999999")),(xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:nonNegativeInteger("0")),(xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:short("-32768")),(xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:short("-32768")),(xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:short("-5324")),(xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:short("-5324")),(xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:short("32767")),(xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:short("32767")),(xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:short("-32768")),(xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:short("-32768")),(xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal((xs:short("-32768")),(xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal((xs:short("-32768")),(xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( (1,2) , (2,1))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( (1,2) , (2,1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( (1,2) , (1,2))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( (1,2) , (1,2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:string("A") , "A")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:string("A") , "A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:string("A") , "a")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:string("A") , "a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:string("A") , ("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:string("A") , ("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:string("") , (""))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:string("") , (""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( () , ())</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( () , ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( (()) , ())</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( (()) , ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( ( ) , ())</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( ( ) , ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(xs:string("abc"), xs:string("cba"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(xs:string("abc"), xs:string("cba"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:anyURI("www.example.com") , "www.example.com")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:anyURI("www.example.com") , "www.example.com")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:anyURI("www.example.com") , xs:string("www.example.com"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:anyURI("www.example.com") , xs:string("www.example.com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:integer(1) , xs:decimal(1.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:integer(1) , xs:decimal(1.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:integer(1) , xs:integer(-1))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:integer(1) , xs:integer(-1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:integer(1) , xs:float(1.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:integer(1) , xs:float(1.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:integer(1) , xs:double(1.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:integer(1) , xs:double(1.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:decimal(1.01) , xs:float(1.01))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:decimal(1.01) , xs:float(1.01))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:decimal(1.01) , xs:double(1.01))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:decimal(1.01) , xs:double(1.01))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:float(1.01) , xs:double(1.01))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:float(1.01) , xs:double(1.01))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:float("INF") , xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:float("INF") , xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:float("-INF") , xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:float("-INF") , xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:float("NaN") , xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:float("NaN") , xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:boolean("1") , xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:boolean("1") , xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:boolean("true") , xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:boolean("true") , xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:boolean("true") , true())</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:boolean("true") , true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:boolean("0") , xs:boolean("false"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:boolean("0") , xs:boolean("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:boolean("false") , false())</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:boolean("false") , false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:date("1993-03-31") , "1993-03-31")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:date("1993-03-31") , "1993-03-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( xs:date("1993-03-31") , xs:string("1993-03-31"))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( xs:date("1993-03-31") , xs:string("1993-03-31"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(xs:dateTime("1972-12-31T00:00:00"), "1972-12-31T00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(xs:dateTime("1972-12-31T00:00:00"), "1972-12-31T00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(xs:time("12:30:00"), "12:30:00")</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(xs:time("12:30:00"), "12:30:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal()</x:label>
      <x:variable name="expr" as="xs:string">deep-equal()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a string")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a string", "a string", ())</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a string", "a string", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((), ()) eq true()</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((), ()) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:float("NaN"), xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:float("NaN"), xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:double("NaN"), xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:double("NaN"), xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:float("NaN"), xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:float("NaN"), xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:double("NaN"), xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:double("NaN"), xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(xs:float("NaN"), xs:float(0)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(xs:float("NaN"), xs:float(0)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(xs:float(0), xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(xs:float(0), xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(xs:double(0), xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(xs:double(0), xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(xs:double("NaN"), xs:double(0)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(xs:double("NaN"), xs:double(0)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(xs:decimal("1"), xs:anyURI("example.com")))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(xs:decimal("1"), xs:anyURI("example.com")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(QName("example.com", "ncname"), 3e2))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(QName("example.com", "ncname"), 3e2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 2, xs:anyURI("example.com")), (1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 2, xs:anyURI("example.com")), (1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, xs:decimal("2.2"), 3), (1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, xs:decimal("2.2"), 3), (1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((true(), 2, 3), (1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((true(), 2, 3), (1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 2, 3), (1, 2, QName("example.com", "ncname"))))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 2, 3), (1, 2, QName("example.com", "ncname"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 2, 3), (1, xs:hexBinary("FF"), 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 2, 3), (1, xs:hexBinary("FF"), 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 2, 3), (xs:base64Binary("FFFF"), 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 2, 3), (xs:base64Binary("FFFF"), 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, xs:base64Binary("FFFF")), (1, 2, xs:base64Binary("FFFF")))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, xs:base64Binary("FFFF")), (1, 2, xs:base64Binary("FFFF")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 1, 1), (1, 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 1, 1), (1, 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 3), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 3), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 3, 1), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 3, 1), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((3, 1, 1), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((3, 1, 1), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (3, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (3, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (1, 3, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (1, 3, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (1, 1, 3)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (1, 1, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of(20, 20), (1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of(20, 20), (1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of((20, 40), 20), (1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of((20, 40), 20), (1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of((20, 20), 20), (1, 2))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of((20, 20), 20), (1, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of((20, 40, 20), 20), (1, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of((20, 40, 20), 20), (1, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 1, "str"), (1, 1, "str"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 1, "str"), (1, 1, "str"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, "str", 1), (1, "str", 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, "str", 1), (1, "str", 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(("str", 1, 1), ("str", 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(("str", 1, 1), ("str", 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 1, ()), (1, 1, ()))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 1, ()), (1, 1, ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, (), 1), (1, (), 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, (), 1), (1, (), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(((), 1, 1), ((), 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(((), 1, 1), ((), 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, ()), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, ()), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, (), 1), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, (), 1), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(((), 1, 1), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(((), 1, 1), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (1, 1, ())))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (1, 1, ())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (1, (), 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (1, (), 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), ((), 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), ((), 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), (1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), (1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((), (1, 1, 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((), (1, 1, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal((1, 1, 1), ()))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal((1, 1, 1), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((), reverse(0 to -5))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((), reverse(0 to -5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((), 0 to -5)</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((), 0 to -5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(reverse(0 to -5), ())</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(reverse(0 to -5), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(0 to -5, ())</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(0 to -5, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(("a", "A"), ("A", "a"), "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(("a", "A"), ("A", "a"), "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(("a", "A"), ("A", "b"), "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(("a", "A"), ("A", "b"), "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(deep-equal(current-time(), current-date()))</x:label>
      <x:variable name="expr" as="xs:string">not(deep-equal(current-time(), current-date()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((current-time(), current-time(), current-time()), (current-time(), current-time()))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((current-time(), current-time(), current-time()), (current-time(), current-time()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal()</x:label>
      <x:variable name="expr" as="xs:string">deep-equal()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal("a", xs:NCName("a"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal("a", xs:NCName("a"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:dateTime('2012-05-30T12:00:00'), xs:dateTime('2012-05-30T12:00:00Z') - implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:dateTime('2012-05-30T12:00:00'), xs:dateTime('2012-05-30T12:00:00Z') - implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(xs:gMonth("--12+03:00"), xs:gMonth("--12")) eq (implicit-timezone() eq xs:dayTimeDuration("PT3H"))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(xs:gMonth("--12+03:00"), xs:gMonth("--12")) eq (implicit-timezone() eq xs:dayTimeDuration("PT3H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((xs:untypedAtomic("a"), xs:untypedAtomic("P1Y"), 2.0), (xs:untypedAtomic("a"), xs:yearMonthDuration("P12M"), xs:untypedAtomic(" 2")))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((xs:untypedAtomic("a"), xs:untypedAtomic("P1Y"), 2.0), (xs:untypedAtomic("a"), xs:yearMonthDuration("P12M"), xs:untypedAtomic(" 2")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/default-collation.xml">
    <x:scenario>
      <x:label>fn:default-collation("An Argument")</x:label>
      <x:variable name="expr" as="xs:string">fn:default-collation("An Argument")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:default-collation()</x:label>
      <x:variable name="expr" as="xs:string">fn:default-collation()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>default-collation(.)</x:label>
      <x:variable name="expr" as="xs:string">default-collation(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>default-collation(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">default-collation(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>default-collation() eq "http://www.w3.org/2005/xpath-functions/collation/codepoint"</x:label>
      <x:variable name="expr" as="xs:string">default-collation() eq "http://www.w3.org/2005/xpath-functions/collation/codepoint"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:default-collation())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:default-collation())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:default-collation())</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:default-collation())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/distinct-values.xml">
    <x:scenario>
      <x:label>fn:distinct-values((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((1, 2))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((1, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( 1, (1), ((1)) ))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( 1, (1), ((1)) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( 1, 1.0e0))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( 1, 1.0e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( xs:integer(1), 1))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( xs:integer(1), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( 0e0, -0, 0, 1 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( 0e0, -0, 0, 1 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( "cat", 'CAT' ))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( "cat", 'CAT' ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( xs:string("hello"), "hello"))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( xs:string("hello"), "hello"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( xs:string(""), "", ''))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( xs:string(""), "", ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((1, true(), true(), ()))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((1, true(), true(), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal('1.2'), xs:decimal('1.2000000000000001')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal('1.2'), xs:decimal('1.2000000000000001')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal('1.2'), '1.2'))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal('1.2'), '1.2'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal('1.2'), xs:float('1.2')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal('1.2'), xs:float('1.2')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:decimal('1.2'), xs:double('1.2')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:decimal('1.2'), xs:double('1.2')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('NaN'), 'NaN'))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('NaN'), 'NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('INF'), 'INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('INF'), 'INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('-INF'), '-INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('-INF'), '-INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('INF'), xs:float('INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('INF'), xs:float('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('-INF'), xs:float('INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('-INF'), xs:float('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('NaN'), xs:float('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('NaN'), xs:float('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('NaN'), xs:float('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('NaN'), xs:float('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('NaN'), xs:double('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('NaN'), xs:double('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('INF'), xs:double('INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('INF'), xs:double('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:float('-INF'), xs:double('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:float('-INF'), xs:double('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double('-INF'), xs:double('INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double('-INF'), xs:double('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double('NaN'), xs:double('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double('NaN'), xs:double('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:double('NaN'), xs:double('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:double('NaN'), xs:double('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(("NaN", "-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(("NaN", "-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(("-INF", "INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(("-INF", "INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:boolean('true'), true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:boolean('true'), true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:boolean('true'), xs:boolean('1')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:boolean('true'), xs:boolean('1')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:boolean('false'), xs:boolean('0')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:boolean('false'), xs:boolean('0')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(( true(), false(), () ))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(( true(), false(), () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values((
          xs:integer(1),
          xs:gDay("---15"),
          xs:gDay("---10"), 
          xs:decimal(1)
         )))</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values((
          xs:integer(1),
          xs:gDay("---15"),
          xs:gDay("---10"), 
          xs:decimal(1)
         )))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values()</x:label>
      <x:variable name="expr" as="xs:string">distinct-values()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(distinct-values((1, 2, 3), "http://www.example.com/COLLATION/NOT/SUPPORTED"), (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(distinct-values((1, 2, 3), "http://www.example.com/COLLATION/NOT/SUPPORTED"), (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">distinct-values("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">distinct-values("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(distinct-values(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(distinct-values(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values((1, 1))</x:label>
      <x:variable name="expr" as="xs:string">distinct-values((1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values((-3, -3))</x:label>
      <x:variable name="expr" as="xs:string">distinct-values((-3, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values((1, 2.0, 3, 2))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values((1, 2.0, 3, 2))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(distinct-values((1, 2.0, 3, 2)), (1, 2.0, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(distinct-values((1, 2.0, 3, 2)), (1, 2.0, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(distinct-values((1, 2, 3, 1)))</x:label>
      <x:variable name="expr" as="xs:string">exists(distinct-values((1, 2, 3, 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty(distinct-values((1, 1))))</x:label>
      <x:variable name="expr" as="xs:string">not(empty(distinct-values((1, 1))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values((1, 2, 2, current-time()))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values((1, 2, 2, current-time()))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values(())) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values(())) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values(current-time())) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values(current-time())) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values(("1", "2", "3"), "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values(("1", "2", "3"), "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values((1 to 300, 100 to 400, 29, 145, 20 to 50, for $x in (30 to 40) return xs:string($x), "foo", "bar"))</x:label>
      <x:variable name="expr" as="xs:string">distinct-values((1 to 300, 100 to 400, 29, 145, 20 to 50, for $x in (30 to 40) return xs:string($x), "foo", "bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(distinct-values((xs:integer("3"), xs:float("3"), xs:float("NaN"), xs:double("3"), xs:double("NaN"), xs:decimal("3"), xs:float("3"))))</x:label>
      <x:variable name="expr" as="xs:string">count(distinct-values((xs:integer("3"), xs:float("3"), xs:float("NaN"), xs:double("3"), xs:double("NaN"), xs:decimal("3"), xs:float("3"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>distinct-values(
              (xs:dateTime("2008-01-01T13:00:00"),
               adjust-dateTime-to-timezone(xs:dateTime("2008-01-01T13:00:00"))))</x:label>
      <x:variable name="expr" as="xs:string">distinct-values(
              (xs:dateTime("2008-01-01T13:00:00"),
               adjust-dateTime-to-timezone(xs:dateTime("2008-01-01T13:00:00"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 65 to 75 return distinct-values(1 to 10,codepoints-to-string($x to $x+10))</x:label>
      <x:variable name="expr" as="xs:string">for $x in 65 to 75 return distinct-values(1 to 10,codepoints-to-string($x to $x+10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/doc-available.xml">
    <x:scenario>
      <x:label>fn:doc-available("http://example.com","string 2")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available("http://example.com","string 2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available(xs:integer(2))</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available(xs:integer(2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available(document-uri(/))</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available(document-uri(/))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available("file:///a/b/c/wefdobqciyvdsoihnfcpinads.xml")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available("file:///a/b/c/wefdobqciyvdsoihnfcpinads.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available(())</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available("../prod/ModuleImport/module1-lib.xq")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available("../prod/ModuleImport/module1-lib.xq")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available( () )</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available( () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc-available( 'collection1' )</x:label>
      <x:variable name="expr" as="xs:string">fn:doc-available( 'collection1' )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/doc.xml">
    <x:scenario>
      <x:label>fn:doc("http:\\invalid&gt;URI\someURI")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc("http:\\invalid&gt;URI\someURI")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc("argument1","argument2")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc("argument1","argument2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc("thisfileshouldnotexists.xml")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc("thisfileshouldnotexists.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc(())</x:label>
      <x:variable name="expr" as="xs:string">fn:doc(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri) is fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri) is fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($works) is fn:doc($staff)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($works) is fn:doc($staff)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)//day/string()</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)//day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:nilled(fn:doc($uri)))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:nilled(fn:doc($uri)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:node-name(fn:doc($uri)))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:node-name(fn:doc($uri)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc("%gg")</x:label>
      <x:variable name="expr" as="xs:string">fn:doc("%gg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:doc($uri) is fn:doc($uri))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:doc($uri) is fn:doc($uri))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:doc($uri) is fn:doc($uri)) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(fn:doc($uri) is fn:doc($uri)) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:doc($uri) is fn:doc($uri)) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(fn:doc($uri) is fn:doc($uri)) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:doc($uri) is fn:doc($uri)) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(fn:doc($uri) is fn:doc($uri)) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:doc($uri) is fn:doc($uri)) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(fn:doc($uri) is fn:doc($uri)) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">fn:doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name(fn:doc($uri)/*)</x:label>
      <x:variable name="expr" as="xs:string">local-name(fn:doc($uri)/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name(fn:doc($uri)/*)</x:label>
      <x:variable name="expr" as="xs:string">local-name(fn:doc($uri)/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc(':/')</x:label>
      <x:variable name="expr" as="xs:string">doc(':/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(string(fn:doc($uri))), normalize-space(string(exactly-one(fn:doc($uri)/*)))</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(string(fn:doc($uri))), normalize-space(string(exactly-one(fn:doc($uri)/*)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc($uri)</x:label>
      <x:variable name="expr" as="xs:string">doc($uri)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc('id/badxml.xml')</x:label>
      <x:variable name="expr" as="xs:string">doc('id/badxml.xml')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(doc($uri)//text())</x:label>
      <x:variable name="expr" as="xs:string">count(doc($uri)//text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:doc(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:doc(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:doc(xs:untypedAtomic("file:///example.com/does/not/exist/xqts-testing.xml"))</x:label>
      <x:variable name="expr" as="xs:string">fn:doc(xs:untypedAtomic("file:///example.com/does/not/exist/xqts-testing.xml"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("/example.com/example.org/does/not/exist/doesNotExist/works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("\example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("\example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("C:\example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:label>
      <x:variable name="expr" as="xs:string">doc("C:\example.com\example.org\does\not\exist\doesNotExist\works-mod.xml")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("")</x:label>
      <x:variable name="expr" as="xs:string">doc("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>doc("")</x:label>
      <x:variable name="expr" as="xs:string">doc("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/document-uri.xml">
    <x:scenario>
      <x:label>fn:contains(fn:document-uri(fn:doc($uri)),$uri) or (fn:document-uri(fn:doc($uri)) = "")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(fn:document-uri(fn:doc($uri)),$uri) or (fn:document-uri(fn:doc($uri)) = "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:document-uri(/works[1]/employee[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:document-uri(/works[1]/employee[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:document-uri(/works[1]/employee[1]/@name))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:document-uri(/works[1]/employee[1]/@name))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join((fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String"),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join((fn:string(fn:contains(fn:document-uri(fn:doc($uri)),$uri))," A String"),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"e")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"e")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"t")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(fn:string(fn:contains(fn:document-uri(/),"works-mod")),"t")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-uri((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">document-uri((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(document-uri(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(document-uri(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/element-with-id.xml">
    <x:scenario>
      <x:label>id('alpha beta iota kappa')/local-name(), "|", element-with-id('alpha beta iota kappa')/local-name()</x:label>
      <x:variable name="expr" as="xs:string">id('alpha beta iota kappa')/local-name(), "|", element-with-id('alpha beta iota kappa')/local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id('lambda mu')/local-name(), "|", element-with-id('lambda mu')/local-name()</x:label>
      <x:variable name="expr" as="xs:string">id('lambda mu')/local-name(), "|", element-with-id('lambda mu')/local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id('nu')/local-name(), "|", element-with-id('nu')/local-name()</x:label>
      <x:variable name="expr" as="xs:string">id('nu')/local-name(), "|", element-with-id('nu')/local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id('xi')/local-name(), "|", element-with-id('xi')/local-name(), "|", count(id('ping')), "|", count(element-with-id('ping'))</x:label>
      <x:variable name="expr" as="xs:string">id('xi')/local-name(), "|", element-with-id('xi')/local-name(), "|", count(id('ping')), "|", count(element-with-id('ping'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id('omicron')/local-name(), "|",  element-with-id('omicron')/local-name(), "|", count(id('853')), "|", count(element-with-id('853'))</x:label>
      <x:variable name="expr" as="xs:string">id('omicron')/local-name(), "|",  element-with-id('omicron')/local-name(), "|", count(id('853')), "|", count(element-with-id('853'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/empty.xml">
    <x:scenario>
      <x:label>fn:empty((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">empty(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty()</x:label>
      <x:variable name="expr" as="xs:string">empty()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty("string"))</x:label>
      <x:variable name="expr" as="xs:string">not(empty("string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty((1, (), "string")))</x:label>
      <x:variable name="expr" as="xs:string">not(empty((1, (), "string")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty((1, "string")))</x:label>
      <x:variable name="expr" as="xs:string">not(empty((1, "string")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty( ((), 1, "string") ))</x:label>
      <x:variable name="expr" as="xs:string">not(empty( ((), 1, "string") ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(())</x:label>
      <x:variable name="expr" as="xs:string">empty(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty( ((), (), ()) )</x:label>
      <x:variable name="expr" as="xs:string">empty( ((), (), ()) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(exists(remove(remove((current-time(), 1), 1), 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(exists(remove(remove((current-time(), 1), 1), 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $x in (1 to 10)[. mod 2 = 0] return "blah")</x:label>
      <x:variable name="expr" as="xs:string">empty(for $x in (1 to 10)[. mod 2 = 0] return "blah")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(empty(for $x in (1 to 10)[. mod 2 = 0] return "blah"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(empty(for $x in (1 to 10)[. mod 2 = 0] return "blah"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $x in (1 to 10)[. mod 2 = 0] return true())</x:label>
      <x:variable name="expr" as="xs:string">empty(for $x in (1 to 10)[. mod 2 = 0] return true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $x in (1 to 10)[. mod 2 = 0] return floor($x))</x:label>
      <x:variable name="expr" as="xs:string">empty(for $x in (1 to 10)[. mod 2 = 0] return floor($x))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/encode-for-uri.xml">
    <x:scenario>
      <x:label>fn:encode-for-uri ("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</x:label>
      <x:variable name="expr" as="xs:string">fn:encode-for-uri ("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri("~bébé")</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri("~bébé")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri("100% organic")</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri("100% organic")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri('')</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri('')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri(())</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri(12)</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri('',())</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri('',())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples#example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples#example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples-example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples-example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples_example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples_example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples.example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples.example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples!example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples!example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples~example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples~example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples*example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples*example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples'example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples'example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples(example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples(example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples)example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples)example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples0123456789example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples0123456789example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("examples/example"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("examples/example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("http:examples"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("http:examples"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:encode-for-uri("http%20examples"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:encode-for-uri("http%20examples"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri()</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri("http://example.com/", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri("http://example.com/", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>encode-for-uri(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">encode-for-uri(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("http://www.example.com/", encode-for-uri("~bébé")) eq "http://www.example.com/~b%C3%A9b%C3%A9"</x:label>
      <x:variable name="expr" as="xs:string">concat("http://www.example.com/", encode-for-uri("~bébé")) eq "http://www.example.com/~b%C3%A9b%C3%A9"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("http://www.example.com/", encode-for-uri("100% organic")) eq "http://www.example.com/100%25%20organic"</x:label>
      <x:variable name="expr" as="xs:string">concat("http://www.example.com/", encode-for-uri("100% organic")) eq "http://www.example.com/100%25%20organic"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(encode-for-uri(("some string", current-time())[1] treat as xs:string))</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(encode-for-uri(("some string", current-time())[1] treat as xs:string))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/ends-with.xml">
    <x:scenario>
      <x:label>fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:ends-with("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:ends-with("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:ends-with("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:ends-with("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with()</x:label>
      <x:variable name="expr" as="xs:string">ends-with()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with(())</x:label>
      <x:variable name="expr" as="xs:string">ends-with(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">ends-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">ends-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">ends-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with("tattoo", "tattoo")</x:label>
      <x:variable name="expr" as="xs:string">ends-with("tattoo", "tattoo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(ends-with("tattoo", "atto"))</x:label>
      <x:variable name="expr" as="xs:string">not(ends-with("tattoo", "atto"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(ends-with("tattoo", "atto"))</x:label>
      <x:variable name="expr" as="xs:string">not(ends-with("tattoo", "atto"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ends-with((), ())</x:label>
      <x:variable name="expr" as="xs:string">ends-with((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(ends-with ((), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">not(ends-with ((), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:ends-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:ends-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/error.xml">
    <x:scenario>
      <x:label>fn:error()</x:label>
      <x:variable name="expr" as="xs:string">fn:error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.example.com/HR', 'myerr:toohighsal'), 'Does not apply because salary is too high')</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.example.com/HR', 'myerr:toohighsal'), 'Does not apply because salary is too high')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error('Wrong Argument Type')</x:label>
      <x:variable name="expr" as="xs:string">fn:error('Wrong Argument Type')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOCH0004'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOCH0004'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error((), 'err:FOER0000')</x:label>
      <x:variable name="expr" as="xs:string">fn:error((), 'err:FOER0000')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error((), 'err:FOER0000','error raised by this test by setting first argument to empty sequence')</x:label>
      <x:variable name="expr" as="xs:string">fn:error((), 'err:FOER0000','error raised by this test by setting first argument to empty sequence')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FODT0001'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FODT0001'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FORG0009'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FORG0009'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOTY0012'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOTY0012'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SENR0001'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SENR0001'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0004'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0004'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0009'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0009'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0010'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0010'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0016'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SEPM0016'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0003'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0003'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0005'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0005'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0006'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0006'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0008'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0008'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0012'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0012'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0014'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SERE0014'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SESU0007'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SESU0007'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SESU0011'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:SESU0011'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPDY0002'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPDY0002'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPST0010'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPST0010'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPST0080'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPST0080'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPTY0018'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XPTY0018'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0027'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0027'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0061'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0061'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0084'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQDY0084'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0009'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0009'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0012'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0012'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0013'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0013'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0016'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0016'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0035'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0035'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0036'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0036'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0046'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0046'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0047'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0047'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0048'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0048'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0054'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0054'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0055'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0055'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0057'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0057'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0058'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0058'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0060'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0060'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0073'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0073'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0075'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0075'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0076'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0076'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0079'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0079'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0087'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQST0087'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQTY0030'))</x:label>
      <x:variable name="expr" as="xs:string">fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:XQTY0030'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(true()) then true() else error()</x:label>
      <x:variable name="expr" as="xs:string">if(true()) then true() else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(true()) then true() else error(QName("", "local"), "description")</x:label>
      <x:variable name="expr" as="xs:string">if(true()) then true() else error(QName("", "local"), "description")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error(QName("", "local"), "description", "object", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">error(QName("", "local"), "description", "object", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error(QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))</x:label>
      <x:variable name="expr" as="xs:string">error(QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error((), "description")</x:label>
      <x:variable name="expr" as="xs:string">error((), "description")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then error((), "description") else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then error((), "description") else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error()</x:label>
      <x:variable name="expr" as="xs:string">error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error(QName("", "XPDY6666"), "description", "error object")</x:label>
      <x:variable name="expr" as="xs:string">error(QName("", "XPDY6666"), "description", "error object")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one((true(), error()))</x:label>
      <x:variable name="expr" as="xs:string">exactly-one((true(), error()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, error())[2]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, error())[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error(QName("", "FOO"), "DESCRIPTION")</x:label>
      <x:variable name="expr" as="xs:string">error(QName("", "FOO"), "DESCRIPTION")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() + fn:error())</x:label>
      <x:variable name="expr" as="xs:string">empty(() + fn:error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error() + ())</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error() + ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() eq fn:error())</x:label>
      <x:variable name="expr" as="xs:string">empty(() eq fn:error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error() eq ())</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error() eq ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error() = ()</x:label>
      <x:variable name="expr" as="xs:string">fn:error() = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = fn:error()</x:label>
      <x:variable name="expr" as="xs:string">() = fn:error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error() is ())</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error() is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() is fn:error())</x:label>
      <x:variable name="expr" as="xs:string">empty(() is fn:error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error() and false()</x:label>
      <x:variable name="expr" as="xs:string">fn:error() and false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() and fn:error()</x:label>
      <x:variable name="expr" as="xs:string">false() and fn:error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error() or true()</x:label>
      <x:variable name="expr" as="xs:string">fn:error() or true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() or fn:error()</x:label>
      <x:variable name="expr" as="xs:string">true() or fn:error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in fn:error() return true()</x:label>
      <x:variable name="expr" as="xs:string">for $x in fn:error() return true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (fn:error()) then true() else true()</x:label>
      <x:variable name="expr" as="xs:string">if (fn:error()) then true() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in fn:error() satisfies false()</x:label>
      <x:variable name="expr" as="xs:string">some $x in fn:error() satisfies false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in fn:error() satisfies true()</x:label>
      <x:variable name="expr" as="xs:string">every $x in fn:error() satisfies true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:error() instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:error() instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error()[2])</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error()[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error()[false()])</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error()[false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1 div 0)[false()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1 div 0)[false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty( if (current-date() lt xs:date('2009-01-01')) then fn:error() else ())</x:label>
      <x:variable name="expr" as="xs:string">empty( if (current-date() lt xs:date('2009-01-01')) then fn:error() else ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty( if (current-date() lt xs:date('2009-01-01')) then () else fn:error())</x:label>
      <x:variable name="expr" as="xs:string">empty( if (current-date() lt xs:date('2009-01-01')) then () else fn:error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:remove( fn:error(), 1))</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:remove( fn:error(), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:subsequence( fn:error(), 2, 2))</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:subsequence( fn:error(), 2, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error() except fn:error() )</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error() except fn:error() )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:error() intersect fn:error() )</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:error() intersect fn:error() )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty( fn:zero-or-one(fn:error()) )</x:label>
      <x:variable name="expr" as="xs:string">empty( fn:zero-or-one(fn:error()) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty( fn:error() treat as empty-sequence() )</x:label>
      <x:variable name="expr" as="xs:string">empty( fn:error() treat as empty-sequence() )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/escape-html-uri.xml">
    <x:scenario>
      <x:label>escape-html-uri("http://www.example.com/00/Weather/CA/Los Angeles#ocean")</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri("http://www.example.com/00/Weather/CA/Los Angeles#ocean")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~bébé');")</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~bébé');")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri('')</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri('')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri(())</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri(12)</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri('',())</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri('',())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("abcdedfghijklmnopqrstuvwxyz")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("abcdedfghijklmnopqrstuvwxyz")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("ABCDEFGHIJKLMNOPQRSTUVWXYZ")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("ABCDEFGHIJKLMNOPQRSTUVWXYZ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("a0123456789")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("a0123456789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example!example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example!example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example#example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example#example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example$example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example$example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example'example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example'example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example(example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example(example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example)example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example)example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example*example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example*example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example+example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example+example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example,example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example,example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example-example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example-example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example.example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example.example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example/example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example/example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example;example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example;example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example:example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example:example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example@example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example@example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("exampleé€example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("exampleé€example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri("example€example")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri("example€example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri()</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri("http://example.com/", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri("http://example.com/", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri("http://www.example.com/00/Weather/CA/Los Angeles#ocean") eq "http://www.example.com/00/Weather/CA/Los Angeles#ocean"</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri("http://www.example.com/00/Weather/CA/Los Angeles#ocean") eq "http://www.example.com/00/Weather/CA/Los Angeles#ocean"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>escape-html-uri("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~bébé');") eq "javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~b%C3%A9b%C3%A9');"</x:label>
      <x:variable name="expr" as="xs:string">escape-html-uri("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~bébé');") eq "javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~b%C3%A9b%C3%A9');"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(iri-to-uri(("example.com", current-time())[1] treat as xs:string))</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(iri-to-uri(("example.com", current-time())[1] treat as xs:string))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-html-uri(codepoints-to-string((9, 65, 128)))</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-html-uri(codepoints-to-string((9, 65, 128)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/exactly-one.xml">
    <x:scenario>
      <x:label>fn:exactly-one(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exactly-one((1,2))</x:label>
      <x:variable name="expr" as="xs:string">fn:exactly-one((1,2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one()</x:label>
      <x:variable name="expr" as="xs:string">exactly-one()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one( (1, 2, 3) )</x:label>
      <x:variable name="expr" as="xs:string">exactly-one( (1, 2, 3) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one("one") eq "one"</x:label>
      <x:variable name="expr" as="xs:string">exactly-one("one") eq "one"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(exactly-one( "one" )) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(exactly-one( "one" )) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(error())</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one((true(), error()))</x:label>
      <x:variable name="expr" as="xs:string">exactly-one((true(), error()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(( error(), true()))</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(( error(), true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one( () )</x:label>
      <x:variable name="expr" as="xs:string">exactly-one( () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-more(1)</x:label>
      <x:variable name="expr" as="xs:string">zero-or-more(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/exists.xml">
    <x:scenario>
      <x:label>fn:exists((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">exists(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists()</x:label>
      <x:variable name="expr" as="xs:string">exists()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(exists(()))</x:label>
      <x:variable name="expr" as="xs:string">not(exists(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(1)</x:label>
      <x:variable name="expr" as="xs:string">exists(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists((1))</x:label>
      <x:variable name="expr" as="xs:string">exists((1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists((1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">exists((1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(exists(()))</x:label>
      <x:variable name="expr" as="xs:string">not(exists(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(exists( ((), (), (), ()) ))</x:label>
      <x:variable name="expr" as="xs:string">not(exists( ((), (), (), ()) ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(reverse((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">exists(reverse((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-dateTime(current-dateTime()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-dateTime(current-dateTime()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-date(current-date()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-date(current-date()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(timezone-from-time(current-time()))</x:label>
      <x:variable name="expr" as="xs:string">exists(timezone-from-time(current-time()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(remove(current-time(), 1))</x:label>
      <x:variable name="expr" as="xs:string">empty(remove(current-time(), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty(remove((current-time(), 1), 1)))</x:label>
      <x:variable name="expr" as="xs:string">not(empty(remove((current-time(), 1), 1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(for $x in (1 to 10)[. mod 2 = 0] return "blah")</x:label>
      <x:variable name="expr" as="xs:string">exists(for $x in (1 to 10)[. mod 2 = 0] return "blah")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(for $x in (1 to 10)[. mod 2 = 0] return true())</x:label>
      <x:variable name="expr" as="xs:string">exists(for $x in (1 to 10)[. mod 2 = 0] return true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(for $x in (1 to 10)[. mod 2 = 0] return floor($x))</x:label>
      <x:variable name="expr" as="xs:string">exists(for $x in (1 to 10)[. mod 2 = 0] return floor($x))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/false.xml">
    <x:scenario>
      <x:label>fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:false())</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() eq fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() eq fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() ne fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() ne fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() lt fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() lt fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() le fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() le fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() gt fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() gt fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() ge fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() ge fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() = fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() = fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() != fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() != fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() &lt; fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() &lt; fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() &lt;= fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() &lt;= fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() &gt; fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() &gt; fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:false() &gt;= fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:false() &gt;= fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(fn:false())</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:false())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:string(fn:false()),xs:string(fn:false()))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:string(fn:false()),xs:string(fn:false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string(fn:false()),xs:string(fn:false()))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string(fn:false()),xs:string(fn:false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string(fn:false()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string(fn:false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false(1)</x:label>
      <x:variable name="expr" as="xs:string">false(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() eq false()</x:label>
      <x:variable name="expr" as="xs:string">false() eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false())</x:label>
      <x:variable name="expr" as="xs:string">not(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/floor.xml">
    <x:scenario>
      <x:label>fn:floor(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:floor(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:floor(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor()</x:label>
      <x:variable name="expr" as="xs:string">floor()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">floor(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(floor(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(floor(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(10.5) eq 10</x:label>
      <x:variable name="expr" as="xs:string">floor(10.5) eq 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-10.5) eq -11</x:label>
      <x:variable name="expr" as="xs:string">floor(-10.5) eq -11</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor("a string")</x:label>
      <x:variable name="expr" as="xs:string">floor("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:unsignedShort(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:unsignedShort(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:unsignedShort(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:unsignedShort(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:unsignedLong(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:unsignedLong(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:unsignedInt(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:unsignedInt(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:unsignedByte(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:unsignedByte(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:positiveInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:positiveInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:nonPositiveInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:nonPositiveInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:nonNegativeInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:nonNegativeInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:negativeInteger(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:negativeInteger(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:long(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:long(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:int(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:int(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:short(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:short(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:byte(.)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:byte(.)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((floor($x)) instance of xs:integer) then "integer" 
           else if ((floor($x)) instance of xs:decimal) then "decimal" 
           else if ((floor($x)) instance of xs:float) then "float"
           else if ((floor($x)) instance of xs:double) then "double" 
           else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((floor($x)) instance of xs:integer) then "integer" 
           else if ((floor($x)) instance of xs:decimal) then "decimal" 
           else if ((floor($x)) instance of xs:float) then "float"
           else if ((floor($x)) instance of xs:double) then "double" 
           else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(12.5)</x:label>
      <x:variable name="expr" as="xs:string">floor(12.5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(12.9)</x:label>
      <x:variable name="expr" as="xs:string">floor(12.9)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(0.000000001)</x:label>
      <x:variable name="expr" as="xs:string">floor(0.000000001)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(0.0)</x:label>
      <x:variable name="expr" as="xs:string">floor(0.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-0.1)</x:label>
      <x:variable name="expr" as="xs:string">floor(-0.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-12345678.567890)</x:label>
      <x:variable name="expr" as="xs:string">floor(-12345678.567890)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-1234567891234567.2)</x:label>
      <x:variable name="expr" as="xs:string">floor(-1234567891234567.2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(12.5e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(12.5e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(12.9e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(12.9e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(0.000000001e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(0.000000001e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(0.0e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(0.0e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-0.1e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(-0.1e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-12345678.567890e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(-12345678.567890e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(-1234567891234567.2e0)</x:label>
      <x:variable name="expr" as="xs:string">floor(-1234567891234567.2e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:double('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:double('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:double('INF'))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:double('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:double('-INF'))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:double('-INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:double('-0'))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:double('-0'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(12.5e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(12.5e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(12.9e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(12.9e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(0.000000001e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(0.000000001e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(0.0e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(0.0e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(-0.1e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(-0.1e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(-12345678.567890e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(-12345678.567890e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(-1234567.2e0))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(-1234567.2e0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(xs:float('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(xs:float('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(xs:float('INF')))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(xs:float('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(xs:float('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(xs:float('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(xs:float(xs:float('-0')))</x:label>
      <x:variable name="expr" as="xs:string">floor(xs:float(xs:float('-0')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/format-number.xml">
    <x:scenario>
      <x:label>format-number('foo','#############')</x:label>
      <x:variable name="expr" as="xs:string">format-number('foo','#############')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>format-number('foo','#############')</x:label>
      <x:variable name="expr" as="xs:string">format-number('foo','#############')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((
                format-number('NaN','###','foo:decimal1'),
                format-number(-13.2,'###.0','foo:decimal1'),
                format-number('NaN','###','baz:decimal1'),
                format-number(-13.2,'###.0','baz:decimal1')), '|')</x:label>
      <x:variable name="expr" as="xs:string">string-join((
                format-number('NaN','###','foo:decimal1'),
                format-number(-13.2,'###.0','foo:decimal1'),
                format-number('NaN','###','baz:decimal1'),
                format-number(-13.2,'###.0','baz:decimal1')), '|')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat(format-number('NaN','###','decimal2'), '|',
                      format-number(3.2,'###.0','decimal2'))</x:label>
      <x:variable name="expr" as="xs:string">concat(format-number('NaN','###','decimal2'), '|',
                      format-number(3.2,'###.0','decimal2'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/generate-id.xml">
    <x:scenario>
      <x:label>generate-id((//namespace::*)[1])</x:label>
      <x:variable name="expr" as="xs:string">generate-id((//namespace::*)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>let $nodes := //*/(@* | namespace::*) 
            return count($nodes) eq count(distinct-values($nodes/generate-id()))</x:label>
      <x:variable name="expr" as="xs:string">let $nodes := //*/(@* | namespace::*) 
            return count($nodes) eq count(distinct-values($nodes/generate-id()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>generate-id(//*) eq generate-id(/*)</x:label>
      <x:variable name="expr" as="xs:string">generate-id(//*) eq generate-id(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/has-children.xml">
    <x:scenario>
      <x:label>/root/namespace::fots/fn:has-children()</x:label>
      <x:variable name="expr" as="xs:string">/root/namespace::fots/fn:has-children()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:has-children( /root/namespace::fots )</x:label>
      <x:variable name="expr" as="xs:string">fn:has-children( /root/namespace::fots )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/hours-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1996-04-07T01:40:52"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1996-04-07T01:40:52"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("2030-12-31T23:59:59"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("2030-12-31T23:59:59"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1999-05-31T08:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1999-05-31T08:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T21:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T21:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1999-12-31T12:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1999-12-31T12:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:hours-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:hours-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1999-05-31T00:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1999-05-31T00:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1999-05-31T23:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1999-05-31T23:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) * fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) * fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) div fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) div fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) idiv fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) idiv fn:hours-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) mod fn:hours-from-dateTime(xs:dateTime("1970-01-01T03:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) mod fn:hours-from-dateTime(xs:dateTime("1970-01-01T03:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ge fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ge fn:hours-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">hours-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">hours-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(hours-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(hours-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-dateTime(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">hours-from-dateTime(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 8</x:label>
      <x:variable name="expr" as="xs:string">hours-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/hours-from-duration.xml">
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P3DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P3DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P3DT12H32M12S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P3DT12H32M12S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("PT123H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("PT123H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("-P3DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("-P3DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:hours-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:hours-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P01DT01H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P01DT01H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:hours-from-duration(xs:dayTimeDuration("P23DT10H")),fn:hours-from-duration(xs:dayTimeDuration("P21DT08H"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:hours-from-duration(xs:dayTimeDuration("P23DT10H")),fn:hours-from-duration(xs:dayTimeDuration("P21DT08H"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P21DT10H")) + fn:hours-from-duration(xs:dayTimeDuration("P22DT20H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P21DT10H")) + fn:hours-from-duration(xs:dayTimeDuration("P22DT20H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P30DT10H")) - fn:hours-from-duration(xs:dayTimeDuration("P10DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P30DT10H")) - fn:hours-from-duration(xs:dayTimeDuration("P10DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P20DT05H")) * fn:hours-from-duration(xs:dayTimeDuration("P03DT08H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P20DT05H")) * fn:hours-from-duration(xs:dayTimeDuration("P03DT08H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P20DT10H")) div fn:hours-from-duration(xs:dayTimeDuration("P05DT05H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P20DT10H")) div fn:hours-from-duration(xs:dayTimeDuration("P05DT05H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P25DT10H")) idiv fn:hours-from-duration(xs:dayTimeDuration("P05DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P25DT10H")) idiv fn:hours-from-duration(xs:dayTimeDuration("P05DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P10DT10H")) mod fn:hours-from-duration(xs:dayTimeDuration("P03DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P10DT10H")) mod fn:hours-from-duration(xs:dayTimeDuration("P03DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:hours-from-duration(xs:dayTimeDuration("P21DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:hours-from-duration(xs:dayTimeDuration("P21DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:hours-from-duration(xs:dayTimeDuration("P20DT02H"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:hours-from-duration(xs:dayTimeDuration("P20DT02H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P22DT09H")) eq fn:hours-from-duration(xs:dayTimeDuration("P22DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P22DT09H")) eq fn:hours-from-duration(xs:dayTimeDuration("P22DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P23DT07H")) ne fn:hours-from-duration(xs:dayTimeDuration("P12DT05H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P23DT07H")) ne fn:hours-from-duration(xs:dayTimeDuration("P12DT05H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P20DT03H")) le fn:hours-from-duration(xs:dayTimeDuration("P21DT01H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P20DT03H")) le fn:hours-from-duration(xs:dayTimeDuration("P21DT01H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:dayTimeDuration("P21DT07H")) ge fn:hours-from-duration(xs:dayTimeDuration("P20DT08H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:dayTimeDuration("P21DT07H")) ge fn:hours-from-duration(xs:dayTimeDuration("P20DT08H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(hours-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(hours-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 8</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -8</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -1</x:label>
      <x:variable name="expr" as="xs:string">hours-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-duration(xs:yearMonthDuration('P1Y'))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-duration(xs:yearMonthDuration('P1Y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/hours-from-time.xml">
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("08:03:35Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("08:03:35Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("11:23:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("11:23:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("21:23:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("21:23:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("01:23:00+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("01:23:00+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(fn:adjust-time-to-timezone(xs:time("01:23:00+05:00"), xs:dayTimeDuration("PT0H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(fn:adjust-time-to-timezone(xs:time("01:23:00+05:00"), xs:dayTimeDuration("PT0H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:hours-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:hours-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("00:20:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("00:20:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("23:20:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("23:20:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("02:00:00Z")) + fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("02:00:00Z")) + fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) - fn:hours-from-time(xs:time("09:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) - fn:hours-from-time(xs:time("09:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("02:00:00Z")) * fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("02:00:00Z")) * fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("22:00:00Z")) div fn:hours-from-time(xs:time("02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("22:00:00Z")) div fn:hours-from-time(xs:time("02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) idiv fn:hours-from-time(xs:time("02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) idiv fn:hours-from-time(xs:time("02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) mod fn:hours-from-time(xs:time("03:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) mod fn:hours-from-time(xs:time("03:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) eq fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) eq fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) ne fn:hours-from-time(xs:time("01:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) ne fn:hours-from-time(xs:time("01:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) le fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) le fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("10:00:00Z")) ge fn:hours-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("10:00:00Z")) ge fn:hours-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-time()</x:label>
      <x:variable name="expr" as="xs:string">hours-from-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-time((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">hours-from-time((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(hours-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(hours-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-time(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">hours-from-time(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>hours-from-time(xs:time("23:11:12.43")) eq 23</x:label>
      <x:variable name="expr" as="xs:string">hours-from-time(xs:time("23:11:12.43")) eq 23</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/id.xml">
    <x:scenario>
      <x:label>fn:id("argument 1", / ,"Argument 3")</x:label>
      <x:variable name="expr" as="xs:string">fn:id("argument 1", / ,"Argument 3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 5)[fn:id("argument1")]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 5)[fn:id("argument1")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("argument1", "A")</x:label>
      <x:variable name="expr" as="xs:string">fn:id("argument1", "A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id1", /IDS[1])/string(@anId)</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1", /IDS[1])/string(@anId)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:id("nomatchingid", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:id("nomatchingid", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id2 id2", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id2 id2", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id1 id2", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 id2", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id1 nomatching", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 nomatching", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:id("nomatching1 nomatching2", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:id("nomatching1 nomatching2", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("", /IDS[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:id("", /IDS[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(fn:substring("1id3",2), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:substring("1id3",2), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id4", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id4", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("p1:id5", /IDS[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:id("p1:id5", /IDS[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id1 id1", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 id1", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id("id1 ID1", /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id("id1 ID1", /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(fn:lower-case("ID1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:lower-case("ID1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(fn:upper-case("id5"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:upper-case("id5"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(fn:concat("i","d1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:concat("i","d1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(xs:string("id1"), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(xs:string("id1"), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(fn:string-join(("id","1"),""), /IDS[1])/name()</x:label>
      <x:variable name="expr" as="xs:string">fn:id(fn:string-join(("id","1"),""), /IDS[1])/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 5)[ fn:id("argument1",.)]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 5)[ fn:id("argument1",.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id((), ())</x:label>
      <x:variable name="expr" as="xs:string">id((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[id("ncname", .)]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[id("ncname", .)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[id("ncname")]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[id("ncname")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in id(("short", "positiveInteger")) return $i/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $i in id(("short", "positiveInteger")) return $i/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id(("short"), //xs:element/@name[. = "positiveInteger"])/@name</x:label>
      <x:variable name="expr" as="xs:string">id(("short"), //xs:element/@name[. = "positiveInteger"])/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>id((".", "short", "123"), //xs:element/@name[. = "positiveInteger"])/@name</x:label>
      <x:variable name="expr" as="xs:string">id((".", "short", "123"), //xs:element/@name[. = "positiveInteger"])/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(//b/@ref)/data(exactly-one(@*))</x:label>
      <x:variable name="expr" as="xs:string">fn:id(//b/@ref)/data(exactly-one(@*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in id(("short positiveInteger")) return $i/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $i in id(("short positiveInteger")) return $i/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:id(string-join(reverse(//b/@ref), '	'))/data(exactly-one(@*))</x:label>
      <x:variable name="expr" as="xs:string">fn:id(string-join(reverse(//b/@ref), '	'))/data(exactly-one(@*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/idref.xml">
    <x:scenario>
      <x:label>fn:idref("argument 1", / ,"Argument 3")</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("argument 1", / ,"Argument 3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[fn:idref("argument1")]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[fn:idref("argument1")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("argument1", "A")</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("argument1", "A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("id1",/IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("id1",/IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("nomatchingid", /IDS[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("nomatchingid", /IDS[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("id4", /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("id4", /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(("id1", "nomatching"), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(("id1", "nomatching"), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:idref("nomatching1 nomatching2", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:idref("nomatching1 nomatching2", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:idref("", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:idref("", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:node-name(fn:idref("id2", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:node-name(fn:idref("id2", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:idref("id1", /IDS[1])) is (fn:idref("id1", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">(fn:idref("id1", /IDS[1])) is (fn:idref("id1", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:idref("id1", /IDS[1])) is (fn:idref("id2", /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">(fn:idref("id1", /IDS[1])) is (fn:idref("id2", /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:idref(("id1","id1"), /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">count(fn:idref(("id1","id1"), /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(fn:idref(("id1","ID1"), /IDS[1]))</x:label>
      <x:variable name="expr" as="xs:string">count(fn:idref(("id1","ID1"), /IDS[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(fn:lower-case("ID1"), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(fn:lower-case("ID1"), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(fn:upper-case("id5"), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(fn:upper-case("id5"), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(fn:concat("i","d1"), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(fn:concat("i","d1"), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(xs:string("id1"), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(xs:string("id1"), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref(fn:string-join(("id","1"),""), /IDS[1])/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref(fn:string-join(("id","1"),""), /IDS[1])/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("argument1",.)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("argument1",.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:idref("id1")/name(..)</x:label>
      <x:variable name="expr" as="xs:string">fn:idref("id1")/name(..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>idref((), ())</x:label>
      <x:variable name="expr" as="xs:string">idref((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[idref("ncname", .)]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[idref("ncname", .)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[idref("ncname")]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[idref("ncname")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/implicit-timezone.xml">
    <x:scenario>
      <x:label>fn:implicit-timezone("Argument 1")</x:label>
      <x:variable name="expr" as="xs:string">fn:implicit-timezone("Argument 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">fn:implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() + fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() + fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() - fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() - fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:implicit-timezone() * xs:double(2)</x:label>
      <x:variable name="expr" as="xs:string">fn:implicit-timezone() * xs:double(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() * (0 div 0E0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() * (0 div 0E0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() * 0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() * 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() * -0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() * -0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() div xs:double(2))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() div xs:double(2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() div ( 0 div 0E0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() div ( 0 div 0E0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() div 0 )</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() div 0 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() div -0 )</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() div -0 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(implicit-timezone() + xs:dayTimeDuration('PT1S')) div (implicit-timezone() + xs:dayTimeDuration('PT1S'))</x:label>
      <x:variable name="expr" as="xs:string">(implicit-timezone() + xs:dayTimeDuration('PT1S')) div (implicit-timezone() + xs:dayTimeDuration('PT1S'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:implicit-timezone() div xs:dayTimeDuration("P0DT60M00S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:implicit-timezone() div xs:dayTimeDuration("P0DT60M00S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("05:00:00") + fn:implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:time("05:00:00") + fn:implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("05:00:00") - fn:implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:time("05:00:00") - fn:implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-30") - fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-30") - fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-30") + fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-30") + fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2000-10-30T11:12:00") - fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2000-10-30T11:12:00") - fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2000-10-30T11:12:00") + fn:implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2000-10-30T11:12:00") + fn:implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:adjust-date-to-timezone(xs:date("2000-10-30"),fn:implicit-timezone()))</x:label>
      <x:variable name="expr" as="xs:string">(fn:adjust-date-to-timezone(xs:date("2000-10-30"),fn:implicit-timezone()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:adjust-time-to-timezone(xs:time("10:00:00"),fn:implicit-timezone()))</x:label>
      <x:variable name="expr" as="xs:string">(fn:adjust-time-to-timezone(xs:time("10:00:00"),fn:implicit-timezone()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"),fn:implicit-timezone()))</x:label>
      <x:variable name="expr" as="xs:string">(fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"),fn:implicit-timezone()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>implicit-timezone() ge xs:dayTimeDuration('-PT14H') and implicit-timezone() le xs:dayTimeDuration('PT14H')</x:label>
      <x:variable name="expr" as="xs:string">implicit-timezone() ge xs:dayTimeDuration('-PT14H') and implicit-timezone() le xs:dayTimeDuration('PT14H')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>implicit-timezone("WRONG PARAM")</x:label>
      <x:variable name="expr" as="xs:string">implicit-timezone("WRONG PARAM")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration(implicit-timezone()) le 0 or seconds-from-duration(implicit-timezone()) gt 0</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration(implicit-timezone()) le 0 or seconds-from-duration(implicit-timezone()) gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(seconds-from-duration(implicit-timezone()))</x:label>
      <x:variable name="expr" as="xs:string">exists(seconds-from-duration(implicit-timezone()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/in-scope-prefixes.xml">
    <x:scenario>
      <x:label>fn:in-scope-prefixes(200)</x:label>
      <x:variable name="expr" as="xs:string">fn:in-scope-prefixes(200)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(/*)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes((//*)[19])</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes((//*)[19])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(/)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(/)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(/*)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(/*)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(/*/p)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(/*/p)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(//*:outer)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(//*:outer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(//*:inner)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(//*:inner)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(//*:magpie)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(//*:magpie)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes(//*:magpie)</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes(//*:magpie)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes()</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>in-scope-prefixes("string", "nodetest", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">in-scope-prefixes("string", "nodetest", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/index-of.xml">
    <x:scenario>
      <x:label>fn:index-of ((10, 20, 30, 30, 20, 10), 20)</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of ((10, 20, 30, 30, 20, 10), 20)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of ((10, 20, 30, 40), 35)</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of ((10, 20, 30, 40), 35)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of (("a", "sport", "and", "a", "pastime"), "a")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of (("a", "sport", "and", "a", "pastime"), "a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of(("sport", "", "and", "", "", "pastime"), "")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of(("sport", "", "and", "", "", "pastime"), "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of(("sport"), "")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of(("sport"), "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((),fn:exactly-one(xs:untypedAtomic('')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((),fn:exactly-one(xs:untypedAtomic('')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:float('NaN')), fn:exactly-one(xs:float('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:float('NaN')), fn:exactly-one(xs:float('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:double('NaN')), fn:exactly-one(xs:double('NaN')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:double('NaN')), fn:exactly-one(xs:double('NaN')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:double('INF')), fn:exactly-one(xs:double('INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:double('INF')), fn:exactly-one(xs:double('INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:double('-INF')), fn:exactly-one(xs:double('-INF')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:double('-INF')), fn:exactly-one(xs:double('-INF')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:decimal('9.99999999999999999999999999')), fn:exactly-one(xs:decimal('9.99999999999999999999999999')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:decimal('9.99999999999999999999999999')), fn:exactly-one(xs:decimal('9.99999999999999999999999999')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:decimal('9.99999999999999999999999999')), fn:exactly-one(xs:decimal('9.9999999999999999999999999')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:decimal('9.99999999999999999999999999')), fn:exactly-one(xs:decimal('9.9999999999999999999999999')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:positiveInteger('1'),xs:positiveInteger('2')), fn:exactly-one(xs:positiveInteger('2')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:positiveInteger('1'),xs:positiveInteger('2')), fn:exactly-one(xs:positiveInteger('2')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((xs:negativeInteger('-2'), xs:negativeInteger('-1')), fn:exactly-one(xs:negativeInteger('-1')))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((xs:negativeInteger('-2'), xs:negativeInteger('-1')), fn:exactly-one(xs:negativeInteger('-1')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((1, (1,2,3)),1)</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((1, (1,2,3)),1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of(((1),(1), (2,1), (0,1)),1)</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of(((1),(1), (2,1), (0,1)),1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((/bib/book/publisher), "Addison-Wesley")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((/bib/book/publisher), "Addison-Wesley")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((/bib/book/publisher), /bib/book[1]/publisher[1]/text() cast as xs:string)</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((/bib/book/publisher), /bib/book[1]/publisher[1]/text() cast as xs:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of(("sport", "", "and", "", "", "pastime"), "")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of(("sport", "", "and", "", "", "pastime"), "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of( ("", 1, ""), "")</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of( ("", 1, ""), "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:index-of((1,2,3,4))</x:label>
      <x:variable name="expr" as="xs:string">fn:index-of((1,2,3,4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of()</x:label>
      <x:variable name="expr" as="xs:string">index-of()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(1)</x:label>
      <x:variable name="expr" as="xs:string">index-of(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of((1, 2, 3), 1, ())</x:label>
      <x:variable name="expr" as="xs:string">index-of((1, 2, 3), 1, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">index-of("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">index-of("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">index-of("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(xs:double("NaN"), xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(xs:double("NaN"), xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(xs:float("NaN"), xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(xs:float("NaN"), xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(xs:float("NaN"), xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(xs:float("NaN"), xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(xs:double("NaN"), xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(xs:double("NaN"), xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(4, "4"))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(4, "4"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(4, 4)</x:label>
      <x:variable name="expr" as="xs:string">index-of(4, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of((), 4))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of((), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(4, 4)</x:label>
      <x:variable name="expr" as="xs:string">index-of(4, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3, 4, 5, 6), index-of((4, 4, 4, 4, 4, 4), 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3, 4, 5, 6), index-of((4, 4, 4, 4, 4, 4), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of(xs:anyURI("example.com/"), xs:hexBinary("FF")))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of(xs:anyURI("example.com/"), xs:hexBinary("FF")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(xs:untypedAtomic("example.com/"), xs:anyURI("example.com/"))</x:label>
      <x:variable name="expr" as="xs:string">index-of(xs:untypedAtomic("example.com/"), xs:anyURI("example.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of((1, 2, "three", 5, 5, 6), 5), (4, 5))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of((1, 2, "three", 5, 5, 6), 5), (4, 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(index-of((10, 20, 30, 40), 35))</x:label>
      <x:variable name="expr" as="xs:string">empty(index-of((10, 20, 30, 40), 35))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of((10, 20, 30, 30, 20, 10), 20), (2, 5))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of((10, 20, 30, 30, 20, 10), 20), (2, 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(index-of(("a", "sport", "and", "a", "pastime"), "a"), (1, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(index-of(("a", "sport", "and", "a", "pastime"), "a"), (1, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(index-of((1, 2, 3, 2, 1), 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(index-of((1, 2, 3, 2, 1), 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(index-of((1, 2, 3, 2, 1), 1)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(index-of((1, 2, 3, 2, 1), 1)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(index-of((1, 2, 3, 2, 1), 3)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(index-of((1, 2, 3, 2, 1), 3)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(index-of((1, 2, 3, 2, 1), 4)) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(index-of((1, 2, 3, 2, 1), 4)) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(1 to 5,4)</x:label>
      <x:variable name="expr" as="xs:string">index-of(1 to 5,4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(exactly-one((1 to 10)[. div 5 = 1]),5)</x:label>
      <x:variable name="expr" as="xs:string">index-of(exactly-one((1 to 10)[. div 5 = 1]),5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(index-of((1 to 10)[. mod 2 = 0],4))</x:label>
      <x:variable name="expr" as="xs:string">boolean(index-of((1 to 10)[. mod 2 = 0],4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(index-of((1 to 10)[. mod 2 = 0],5))</x:label>
      <x:variable name="expr" as="xs:string">boolean(index-of((1 to 10)[. mod 2 = 0],5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of((1 to 10,(1 to 10)[. mod 2 = 0]),4)</x:label>
      <x:variable name="expr" as="xs:string">index-of((1 to 10,(1 to 10)[. mod 2 = 0]),4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>index-of(1 to 10,(1 to 10)[. div 2 = 0][1])</x:label>
      <x:variable name="expr" as="xs:string">index-of(1 to 10,(1 to 10)[. div 2 = 0][1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/innermost.xml">
    <x:scenario>
      <x:label>fn:innermost( //*/namespace::* )</x:label>
      <x:variable name="expr" as="xs:string">fn:innermost( //*/namespace::* )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:innermost( //*/namespace::* )[position() le 2] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:innermost( //*/namespace::* )[position() le 2] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:innermost( //*/namespace::* )[position() = (7 to 9)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:innermost( //*/namespace::* )[position() = (7 to 9)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:innermost( //*/namespace::* )[position() = (16 to 19)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:innermost( //*/namespace::* )[position() = (16 to 19)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:innermost( //*/namespace::* )[position() = (66 to 69)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:innermost( //*/namespace::* )[position() = (66 to 69)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( fn:innermost( //*/namespace::* ),
                           //*/namespace::* )</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( fn:innermost( //*/namespace::* ),
                           //*/namespace::* )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>innermost(parse-xml('&lt;a&gt;&lt;b/&gt;&lt;/a&gt;')//*)!name()</x:label>
      <x:variable name="expr" as="xs:string">innermost(parse-xml('&lt;a&gt;&lt;b/&gt;&lt;/a&gt;')//*)!name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/insert-before.xml">
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),1, "z")</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),1, "z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),0, ())</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),0, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, ())</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:string(" "))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:string(" "))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:anyURI("www.example.com"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:anyURI("www.example.com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:integer("100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:integer("100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:decimal("1.1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:decimal("1.1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:float("1.1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:float("1.1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:boolean("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:boolean("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:boolean("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:boolean("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),2, xs:boolean("false"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),2, xs:boolean("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),4, xs:date("1993-03-31"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),4, xs:date("1993-03-31"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),4, xs:dateTime("1972-12-31T00:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),4, xs:dateTime("1972-12-31T00:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:insert-before( ("a", "b", "c"),4, xs:time("12:30:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:insert-before( ("a", "b", "c"),4, xs:time("12:30:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before()</x:label>
      <x:variable name="expr" as="xs:string">insert-before()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before("wrong params", 2)</x:label>
      <x:variable name="expr" as="xs:string">insert-before("wrong params", 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before("wrong params", 2, 3, 4)</x:label>
      <x:variable name="expr" as="xs:string">insert-before("wrong params", 2, 3, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((), (), "a string")</x:label>
      <x:variable name="expr" as="xs:string">insert-before((), (), "a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((), -31, "a string") eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">insert-before((), -31, "a string") eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((1, 2, 3), 1, (4, 5, 6))) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((), 1, 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">insert-before((), 1, 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((), 1, "a string") eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">insert-before((), 1, "a string") eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((), 1, (1, 2, 3))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((), 1, (1, 2, 3))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((), 30, 7) eq 7</x:label>
      <x:variable name="expr" as="xs:string">insert-before((), 30, 7) eq 7</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((1, 2, 3, 4), 30, ())) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((1, 2, 3, 4), 30, ())) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before(9, 30, ()) eq 9</x:label>
      <x:variable name="expr" as="xs:string">insert-before(9, 30, ()) eq 9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((1, 2, 3, 4), 1, ())) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((1, 2, 3, 4), 1, ())) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((1, 2, 3), 30, (4, 5, 6))) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((), 30, (1, 2, 3))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((), 30, (1, 2, 3))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(insert-before((error(), 1), 1, (1, "two", 3))) &gt; 1</x:label>
      <x:variable name="expr" as="xs:string">count(insert-before((error(), 1), 1, (1, "two", 3))) &gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before((1, current-time(), 3), 1, (4, 5, 6))[last()] treat as xs:integer) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(insert-before((1, current-time(), 3), 1, (4, 5, 6))[last()] treat as xs:integer) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last()] treat as xs:integer) eq 6</x:label>
      <x:variable name="expr" as="xs:string">(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last()] treat as xs:integer) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last() - 3] treat as xs:integer) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(insert-before((1, current-time(), 3), 10, (4, 5, 6))[last() - 3] treat as xs:integer) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(insert-before((1, current-time(), 3), 10, ())[last()] treat as xs:integer) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(insert-before((1, current-time(), 3), 10, ())[last()] treat as xs:integer) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(insert-before((1, current-time(), 3), 0, (4, 5, 6))[last() - 10])</x:label>
      <x:variable name="expr" as="xs:string">empty(insert-before((1, current-time(), 3), 0, (4, 5, 6))[last() - 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before(1 to 10,5,20 to 30)</x:label>
      <x:variable name="expr" as="xs:string">insert-before(1 to 10,5,20 to 30)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>insert-before((1 to 10,(20 to 30)[. mod 2 = 0],30 to 40),12,"blah")</x:label>
      <x:variable name="expr" as="xs:string">insert-before((1 to 10,(20 to 30)[. mod 2 = 0],30 to 40),12,"blah")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/iri-to-uri.xml">
    <x:scenario>
      <x:label>iri-to-uri("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri("http://www.example.com/~bébé")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("http://www.example.com/~bébé")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri('')</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri('')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(())</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(12)</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri('',())</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri('',())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example0123456789")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example0123456789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example#example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example#example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example-example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example-example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example_example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example_example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example.example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example.example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example!example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example!example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example~example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example~example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example*example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example*example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example'example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example'example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example(example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example(example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example)example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example)example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example;example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example;example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example/example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example/example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example?example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example?example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example:example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example:example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example@example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example@example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example&amp;amp;example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example&amp;amp;example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example=example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example=example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example+example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example+example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example$example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example$example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example,example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example,example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example[example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example[example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example]example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example]example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example%example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example%example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:iri-to-uri("example example")</x:label>
      <x:variable name="expr" as="xs:string">fn:iri-to-uri("example example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri()</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri("http://example.com/", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("http://example.com/", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(iri-to-uri(("somestring", current-time())[1])) eq "somestring"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(iri-to-uri(("somestring", current-time())[1])) eq "somestring"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri()</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri("a string", "a string")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("a string", "a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(1)</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(("a string", "a string"))</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(("a string", "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(xs:anyURI("a string"))</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(xs:anyURI("a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(xs:untypedAtomic("a string"))</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(xs:untypedAtomic("a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri("&lt;&gt; ""{}|\^`")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("&lt;&gt; ""{}|\^`")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri("
")</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri("
")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(codepoints-to-string(32 to 294))</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(codepoints-to-string(32 to 294))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>iri-to-uri(codepoints-to-string(15000 to 16000))</x:label>
      <x:variable name="expr" as="xs:string">iri-to-uri(codepoints-to-string(15000 to 16000))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/json-to-xml.xml">
    <x:scenario>
      <x:label>fn:json-to-xml('[1]', map{'validate':true()}) instance of document-node(schema-element(j:array))</x:label>
      <x:variable name="expr" as="xs:string">fn:json-to-xml('[1]', map{'validate':true()}) instance of document-node(schema-element(j:array))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}',
            map{'validate':true()}))
         instance of document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))</x:label>
      <x:variable name="expr" as="xs:string">(fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}',
            map{'validate':true()}))
         instance of document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}', 
            map{'validate':true(), 'escape':true()})) instance of 
         document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))</x:label>
      <x:variable name="expr" as="xs:string">(fn:json-to-xml('{"a":3, "b":true, "c":null, "d":[], "e":[1E2, ""], "f":{"1":true, "2":false}, "g\n":"h\n"}', 
            map{'validate':true(), 'escape':true()})) instance of 
         document-node(schema-element(Q{http://www.w3.org/2005/xpath-functions}map))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/lang.xml">
    <x:scenario>
      <x:label>fn:lang(xs:string("en"),/root[1]/time[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:lang(xs:string("en"),/root[1]/time[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang(xs:string("EN"),./root[1]/time[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:lang(xs:string("EN"),./root[1]/time[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang(xs:string("eN"),./root[1]/time[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:lang(xs:string("eN"),./root[1]/time[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:lang((), ./langs[1]/para[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:lang((), ./langs[1]/para[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[1] return $x/fn:lang("en")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[1] return $x/fn:lang("en")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/div[1]/para return $x/fn:lang("en")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/div[1]/para return $x/fn:lang("en")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[2] return $x/fn:lang("EN")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[2] return $x/fn:lang("EN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[2] return $x/fn:lang("En")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[2] return $x/fn:lang("En")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[2] return $x/fn:lang("eN")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[2] return $x/fn:lang("eN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[2] return $x/fn:lang("en")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[2] return $x/fn:lang("en")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("en-us")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("en-us")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("EN")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("EN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("En")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("En")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("eN")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("eN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("en")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("en")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("en-us")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("en-us")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1[fn:lang("en-us")]</x:label>
      <x:variable name="expr" as="xs:string">1[fn:lang("en-us")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[3] return $x/fn:lang("us-us")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[3] return $x/fn:lang("us-us")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /langs/para[2] return $x/fn:lang("fr")</x:label>
      <x:variable name="expr" as="xs:string">for $x in /langs/para[2] return $x/fn:lang("fr")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("en",fn:exactly-one(/langs/para[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("en",fn:exactly-one(/langs/para[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("fr",fn:exactly-one(/langs/para[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("fr",fn:exactly-one(/langs/para[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("en",fn:exactly-one(/langs/para[3]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("en",fn:exactly-one(/langs/para[3]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("en",fn:exactly-one(/langs/para[2]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("en",fn:exactly-one(/langs/para[2]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("en",.)</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("en",.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-DE",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-DE",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("DE-de",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("DE-de",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-DE-1996",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-DE-1996",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-DE-1998",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-DE-1998",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-D",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-D",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-DE-",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-DE-",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lang("de-DE-1996-x",fn:exactly-one(/langs/para[4]))</x:label>
      <x:variable name="expr" as="xs:string">fn:lang("de-DE-1996-x",fn:exactly-one(/langs/para[4]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lang()</x:label>
      <x:variable name="expr" as="xs:string">lang()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then lang("en", .) else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then lang("en", .) else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then lang("en") else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then lang("en") else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lang("en", 2)</x:label>
      <x:variable name="expr" as="xs:string">lang("en", 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/last.xml">
    <x:scenario>
      <x:label>for $h in (/works) return $h//employee[last()]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h//employee[last()]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>last()</x:label>
      <x:variable name="expr" as="xs:string">last()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[last() = 1]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[last() = 1]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = last()]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = last()]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[last() = position()]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[last() = position()]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[last()] &lt;&lt; $h/employee[last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[last()] &lt;&lt; $h/employee[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[last()] is $h/employee[last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[last()] is $h/employee[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[last() = last()]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[last() = last()]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h//employee[@name="Jane Doe 13"][last() = 1]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h//employee[@name="Jane Doe 13"][last() = 1]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h//employee[last() = 13][@name = "Jane Doe 13"]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h//employee[last() = 13][@name = "Jane Doe 13"]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]/overtime) return $h/day[not(position() = 1)]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]/overtime) return $h/day[not(position() = 1)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]/overtime) return $h/*[position() = position()]/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]/overtime) return $h/*[position() = position()]/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (2 + 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (2 + 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (5 - 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (5 - 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (3 * 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (3 * 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (6 div 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (6 div 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (6 idiv 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (6 idiv 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return ($h/overtime[position() and fn:true()]/*/string())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return ($h/overtime[position() and fn:true()]/*/string())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() and fn:false()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() and fn:false()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() or fn:true()]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() or fn:true()]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() or fn:false()]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() or fn:false()]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 12]/overtime/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 12]/overtime/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 5 to last()]/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 5 to last()]/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>last()</x:label>
      <x:variable name="expr" as="xs:string">last()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works/employee/*/last()</x:label>
      <x:variable name="expr" as="xs:string">/works/employee/*/last()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>last(1)</x:label>
      <x:variable name="expr" as="xs:string">last(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[if(1) then 1 else last()]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[if(1) then 1 else last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3)[count((last(), last())) eq 2], (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3)[count((last(), last())) eq 2], (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3)[last() eq last()], (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3)[last() eq last()], (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, current-time())[last() - 1] treat as xs:integer eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, current-time())[last() - 1] treat as xs:integer eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time())[last() + 1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time())[last() + 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() = 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() = 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 = last()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 = last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() eq 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() eq 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 eq last()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 eq last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() != 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() != 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() ne 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() ne 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 != last()], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 != last()], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 ne last()], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 ne last()], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() lt 1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() lt 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() &lt; 1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() &lt; 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() le 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() le 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() &lt;= 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [last() &lt;= 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt; 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt; 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt; 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt; 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() gt 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() gt 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt;= 1], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() &gt;= 1], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() ge 1], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [last() ge 1], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 2] treat as xs:integer eq 4</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 2] treat as xs:integer eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 1] treat as xs:integer eq 5</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 1] treat as xs:integer eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, current-time(), 4, 5, 6)[last()] treat as xs:integer eq 6</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, current-time(), 4, 5, 6)[last()] treat as xs:integer eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 0] treat as xs:integer eq 6</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, current-time(), 4, 5, 6)[last() - 0] treat as xs:integer eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 6)[last()] eq 6</x:label>
      <x:variable name="expr" as="xs:string">(1 to 6)[last()] eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-20 to -5)[last() - 3]</x:label>
      <x:variable name="expr" as="xs:string">(-20 to -5)[last() - 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/local-name-from-QName.xml">
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrQN))))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrQN))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/derivQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/derivQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrDerivQN))))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrDerivQN))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrDerivQN)))) instance of xs:NCName ?</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(/root[1]/@attrDerivQN)))) instance of xs:NCName ?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(())</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(((),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(((),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName("")</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(/root/elemQN)</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(/root/elemQN)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-Qname((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-Qname((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-qname((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-qname((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:localnamefromQName((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:localnamefromQName((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(xs:integer("100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(xs:integer("100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(xs:time("12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(xs:time("12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(data((/root/elemQN)[1])))))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string(data((/root/elemQN)[1])))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName( if( true() ) then fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName( if( true() ) then fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName( if( false() ) then fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName( if( false() ) then fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/QNameXSD", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(node-name((//@*)[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(node-name((//@*)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">local-name-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name-from-QName(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">local-name-from-QName(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(local-name-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(local-name-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name-from-QName( QName("example.com/", "pre:lname")) eq "lname"</x:label>
      <x:variable name="expr" as="xs:string">local-name-from-QName( QName("example.com/", "pre:lname")) eq "lname"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/local-name.xml">
    <x:scenario>
      <x:label>fn:local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 100)[fn:local-name()]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[fn:local-name()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name(/*, /*)</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name(/*, /*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name(())</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name((//text())[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name((//text())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:local-name(/))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:local-name(/))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name(/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name((//@*:attr)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name((//@*:attr)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:local-name(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:local-name(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:local-name(./works[1]/employee[1]))</x:label>
      <x:variable name="expr" as="xs:string">(fn:local-name(./works[1]/employee[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:local-name(./works[1]/employee[1]/@name))</x:label>
      <x:variable name="expr" as="xs:string">(fn:local-name(./works[1]/employee[1]/@name))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:local-name(.))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:local-name(.))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:local-name(./works[1]/nonexistent[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:local-name(./works[1]/nonexistent[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in ./works[1]/employee[2] return
         fn:string-length(fn:local-name($h/child::text()[last()]))</x:label>
      <x:variable name="expr" as="xs:string">for $h in ./works[1]/employee[2] return
         fn:string-length(fn:local-name($h/child::text()[last()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:upper-case(fn:local-name($h))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:upper-case(fn:local-name($h))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:lower-case(fn:local-name($h))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:lower-case(fn:local-name($h))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:local-name($h/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:local-name($h/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:local-name($h/descendant::empnum[position() =
         1])</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:local-name($h/descendant::empnum[position() =
         1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return
         fn:local-name($h/descendant-or-self::empnum[position() = 1])</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return
         fn:local-name($h/descendant-or-self::empnum[position() = 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:substring(fn:local-name($h),2)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:substring(fn:local-name($h),2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return fn:concat(fn:local-name($h),"A String")</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return fn:concat(fn:local-name($h),"A String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:local-name($h/self::employee)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:local-name($h/self::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:count(fn:local-name($h/self::div))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:count(fn:local-name($h/self::div))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]/@name) return fn:local-name($h/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]/@name) return fn:local-name($h/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:local-name(./works[1]/employee[2]/@name))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:local-name(./works[1]/employee[2]/@name))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((fn:local-name(./works[1]/employee[1]),fn:local-name(./works[1]/employee[2])),
         ' ')</x:label>
      <x:variable name="expr" as="xs:string">string-join((fn:local-name(./works[1]/employee[1]),fn:local-name(./works[1]/employee[2])),
         ' ')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(((fn:local-name(/works[1]/employee[1]),fn:local-name(/works[1]/employee[2]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(((fn:local-name(/works[1]/employee[1]),fn:local-name(/works[1]/employee[2]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name(/*)</x:label>
      <x:variable name="expr" as="xs:string">name(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//*:Start)[1]/@*)</x:label>
      <x:variable name="expr" as="xs:string">name((//*:Start)[1]/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//@xml:*)[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//@xml:*)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//processing-instruction())[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//processing-instruction())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//*[.='1983'])[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//*[.='1983'])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//comment())[1]) = ''</x:label>
      <x:variable name="expr" as="xs:string">name((//comment())[1]) = ''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//text())[1]) = ''</x:label>
      <x:variable name="expr" as="xs:string">name((//text())[1]) = ''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">local-name((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then local-name() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then local-name() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">local-name(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>local-name(/works/employee[1]/@name)</x:label>
      <x:variable name="expr" as="xs:string">local-name(/works/employee[1]/@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/lower-case.xml">
    <x:scenario>
      <x:label>fn:lower-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("ABc!D")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("ABc!D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:lower-case(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:lower-case(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("12345")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("12345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("12345abcd")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("12345abcd")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("ABCD")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("ABCD")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("abcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("abcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("ABCDEabcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("ABCDEabcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:lower-case(""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:lower-case(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(upper-case("AbcDH"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(upper-case("AbcDH"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("*****")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("*****")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(lower-case("zzzzz"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(lower-case("zzzzz"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:lower-case("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:lower-case("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:lower-case("abcde"), fn:lower-case("fghi"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:lower-case("abcde"), fn:lower-case("fghi"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:lower-case("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:lower-case("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("%$#@!")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("%$#@!")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("lower-case")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("lower-case")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case("abc") and fn:lower-case("abc")</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case("abc") and fn:lower-case("abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(160 to 256)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(160 to 256)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(880 to 1023)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(880 to 1023)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(459)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(459)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(304)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:lower-case(fn:codepoints-to-string(304)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lower-case()</x:label>
      <x:variable name="expr" as="xs:string">lower-case()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lower-case("string", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">lower-case("string", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lower-case(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">lower-case(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>upper-case("abCd0") eq "ABCD0"</x:label>
      <x:variable name="expr" as="xs:string">upper-case("abCd0") eq "ABCD0"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/matches.re.xml">
    <x:scenario>
      <x:label>let $d := codepoints-to-string(13) return (
        matches($d||$d||'a'||$d||$d||'b'||$d||$d,          '^\r\ra\r\rb\r\r$'),
        matches($d||$d||'a'||$d||$d||'b'||$d||$d,          '^\r+a\r+b\r+$'),
        matches($d||$d||'b'||$d||$d||'a'||$d||$d,          '^\r\ra\r\rb\r\r$'),
        matches($d||$d||'a'||$d||$d||'b'||$d||'
',     '^\r\ra\r\rb\r\r$'))</x:label>
      <x:variable name="expr" as="xs:string">let $d := codepoints-to-string(13) return (
        matches($d||$d||'a'||$d||$d||'b'||$d||$d,          '^\r\ra\r\rb\r\r$'),
        matches($d||$d||'a'||$d||$d||'b'||$d||$d,          '^\r+a\r+b\r+$'),
        matches($d||$d||'b'||$d||$d||'a'||$d||$d,          '^\r\ra\r\rb\r\r$'),
        matches($d||$d||'a'||$d||$d||'b'||$d||'
',     '^\r\ra\r\rb\r\r$'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>let $d := codepoints-to-string(13) return (
        matches('a'||$d||'
b', '^(?:a\r\nb)$'), matches('ab', '^(?:a\r\nb)$'))</x:label>
      <x:variable name="expr" as="xs:string">let $d := codepoints-to-string(13) return (
        matches('a'||$d||'
b', '^(?:a\r\nb)$'), matches('ab', '^(?:a\r\nb)$'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>let $d := codepoints-to-string(13) return (
         (every $s in tokenize('
'||$d||'a
'||$d||'b', ',') satisfies (matches($s, '^(?:\n\ra\n\rb)$'))) and
         (every $s in tokenize('', ',') satisfies not(matches($s, '^(?:\n\ra\n\rb)$'))))</x:label>
      <x:variable name="expr" as="xs:string">let $d := codepoints-to-string(13) return (
         (every $s in tokenize('
'||$d||'a
'||$d||'b', ',') satisfies (matches($s, '^(?:\n\ra\n\rb)$'))) and
         (every $s in tokenize('', ',') satisfies not(matches($s, '^(?:\n\ra\n\rb)$'))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/matches.xml">
    <x:scenario>
      <x:label>fn:matches("This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra", "bra", "p")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra", "bra", "p")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("#abc#1", "^(#)abc[\1]1$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("#abc#1", "^(#)abc[\1]1$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("#abc#1", "^(#)abc\2$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("#abc#1", "^(#)abc\2$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("#abc#1", "^((#)abc\1)$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("#abc#1", "^((#)abc\1)$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abcdefghijklmnopq", "(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)((m)(n)(o)(p)(q)\13)$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abcdefghijklmnopq", "(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)((m)(n)(o)(p)(q)\13)$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra", "bra")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra", "bra")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra", "^a.*a$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra", "^a.*a$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra", "^bra")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra", "^bra")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:matches("abracadabra", "^bra"),fn:matches("abracadabra", "^bra", ""))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:matches("abracadabra", "^bra"),fn:matches("abracadabra", "^bra", ""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:matches("()", "^bra"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:matches("()", "^bra"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra^abracadabra", "\^")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra^abracadabra", "\^")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra?abracadabra", "\?")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra?abracadabra", "\?")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra*abracadabra", "\*")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra*abracadabra", "\*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra+abracadabra", "\+")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra+abracadabra", "\+")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra{abracadabra", "\{")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra{abracadabra", "\{")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra}abracadabra", "\}")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra}abracadabra", "\}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra(abracadabra", "\(")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra(abracadabra", "\(")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra)abracadabra", "\)")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra)abracadabra", "\)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra[abracadabra", "\[")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra[abracadabra", "\[")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra]abracadabra", "\]")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra]abracadabra", "\]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra-abracadabra", "\-")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra-abracadabra", "\-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra.abracadabra", "\.")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra.abracadabra", "\.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra|abracadabra", "\|")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra|abracadabra", "\|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra\abracadabra", "\\")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra\abracadabra", "\\")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra	abracadabra", "\t")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra	abracadabra", "\t")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra
abracadabra", "\n")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra
abracadabra", "\n")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabraabracadabra", "aa{1}")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabraabracadabra", "aa{1}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabraabracadabraabracadabra", "aa{1,}")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabraabracadabraabracadabra", "aa{1,}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabraabracadabraabracadabra", "aa{1,2}")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabraabracadabraabracadabra", "aa{1,2}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra", "**%%")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra", "**%%")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('abcd', codepoints-to-string(10), 'defg', codepoints-to-string(10)), "^$", "m")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('abcd', codepoints-to-string(10), 'defg', codepoints-to-string(10)), "^$", "m")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("
abcd
defg
", "^$", "m")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("
abcd
defg
", "^$", "m")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abcd

defg
", "^$", "m")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abcd

defg
", "^$", "m")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("#abc#1", "^(#)abc\11$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("#abc#1", "^(#)abc\11$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("#abcdefghijklmnopq#1", "^(#)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)\11$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("#abcdefghijklmnopq#1", "^(#)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)\11$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('aA', '(a)\99')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('aA', '(a)\99')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghijj', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)\10')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghijj', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)\10')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghijk', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k\11)')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghijk', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k\11)')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghijj', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j\10)')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghijj', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j\10)')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghii', '(a)(b)(c)(d)(e)(f)(g)(h)(i\9)')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghii', '(a)(b)(c)(d)(e)(f)(g)(h)(i\9)')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('aa', '(a\1)')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('aa', '(a\1)')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(10)), 'Mary$')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(10)), 'Mary$')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(10)), 'Mary$', 's')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(10)), 'Mary$', 's')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(10), 'Jones'), 'Mary.Jones')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(10), 'Jones'), 'Mary.Jones')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(10), 'Jones'), 'Mary.Jones', 's')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(10), 'Jones'), 'Mary.Jones', 's')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 's')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 's')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(concat('abcd', codepoints-to-string(10), 'defg', codepoints-to-string(10)), "g$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(concat('abcd', codepoints-to-string(10), 'defg', codepoints-to-string(10)), "g$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra-abracadabra.", "\.")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra-abracadabra.", "\.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("abracadabra-abracadabra-3", "(124|864|377|3)")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("abracadabra-abracadabra-3", "(124|864|377|3)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("ab()cd()ef()gh", "^(ab)([()]*)(cd)([)(]*)ef\4gh$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("ab()cd()ef()gh", "^(ab)([()]*)(cd)([)(]*)ef\4gh$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("aaababaaabaa", "^(a*b?a*){3,3}$")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("aaababaaabaa", "^(a*b?a*){3,3}$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("A", "([A-Z])\1*")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("A", "([A-Z])\1*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("kZ", "(^|:)?Z")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("kZ", "(^|:)?Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('abc', 'ABC', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('abc', 'ABC', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('abZ', '[A-Z]*', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('abZ', '[A-Z]*', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('abZ', '[a-z]*', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('abZ', '[a-z]*', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(codepoints-to-string(8490), '[A-Z]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches(codepoints-to-string(8490), '[A-Z]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(codepoints-to-string(8490), '[a-z]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches(codepoints-to-string(8490), '[a-z]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(codepoints-to-string(8490), 'K', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches(codepoints-to-string(8490), 'K', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(codepoints-to-string(8490), 'k', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches(codepoints-to-string(8490), 'k', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('x', '[A-Z-[OI]]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('x', '[A-Z-[OI]]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('X', '[A-Z-[OI]]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('X', '[A-Z-[OI]]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('O', '[A-Z-[OI]]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('O', '[A-Z-[OI]]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('i', '[A-Z-[OI]]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('i', '[A-Z-[OI]]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('Q', '[^Q]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('Q', '[^Q]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('q', '[^Q]', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('q', '[^Q]', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('m', '\p{Lu}', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('m', '\p{Lu}', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('m', '\P{Lu}', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('m', '\P{Lu}', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", ())</x:label>
      <x:variable name="expr" as="xs:string">matches("input", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input")</x:label>
      <x:variable name="expr" as="xs:string">matches("input")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", "pattern", ())</x:label>
      <x:variable name="expr" as="xs:string">matches("input", "pattern", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", "pattern", "", ())</x:label>
      <x:variable name="expr" as="xs:string">matches("input", "pattern", "", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", "pattern", " ")</x:label>
      <x:variable name="expr" as="xs:string">matches("input", "pattern", " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", "pattern", "X")</x:label>
      <x:variable name="expr" as="xs:string">matches("input", "pattern", "X")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "hello\ sworld", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "hello\ sworld", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", " hello[ ]world", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", " hello[ ]world", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "hello[ ]world ", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "hello[ ]world ", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "he ll o[ ]worl d", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "he ll o[ ]worl d", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "\p{ IsBasicLatin}+", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "\p{ IsBasicLatin}+", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "\p{ I s B a s i c L a t i n }+", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "\p{ I s B a s i c L a t i n }+", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("hello world", "\p{ IsBasicLatin}+")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("hello world", "\p{ IsBasicLatin}+")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("h", "(.)\3")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("h", "(.)\3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("h", "(.)\2")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("h", "(.)\2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("input", "\3")</x:label>
      <x:variable name="expr" as="xs:string">matches("input", "\3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abcd", "(asd)[\1]")</x:label>
      <x:variable name="expr" as="xs:string">matches("abcd", "(asd)[\1]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abcd", "(asd)[asd\1]")</x:label>
      <x:variable name="expr" as="xs:string">matches("abcd", "(asd)[asd\1]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abcd", "(asd)[asd\0]")</x:label>
      <x:variable name="expr" as="xs:string">matches("abcd", "(asd)[asd\0]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abcd", "1[asd\0]")</x:label>
      <x:variable name="expr" as="xs:string">matches("abcd", "1[asd\0]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("a", "a[^b]"), fn:matches("a ", "a[^b]")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("a", "a[^b]"), fn:matches("a ", "a[^b]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("input", "[0-9-.]*/")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("input", "[0-9-.]*/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches("input", "[0-9-.]*/")</x:label>
      <x:variable name="expr" as="xs:string">fn:matches("input", "[0-9-.]*/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('aA', '(a)\1', 'i')</x:label>
      <x:variable name="expr" as="xs:string">matches('aA', '(a)\1', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '[^]')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '[^]')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '[a-\b]')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '[a-\b]')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghijkabcdefghijk', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)\1\2\3\4\5\6\7\8\9\10\11')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghijkabcdefghijk', '(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)\1\2\3\4\5\6\7\8\9\10\11')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('aaa', 'a{99999999999999999999999999}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('aaa', 'a{99999999999999999999999999}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('a', '[a--]')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('a', '[a--]')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('	', '[\t]')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('	', '[\t]')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('-abba-', '[-ab]+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('-abba-', '[-ab]+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{L')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{L')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{M')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{M')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{N')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{N')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{P')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{P')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Z')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Z')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{S')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{S')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{C')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{C')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{L}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{L}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{M}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{M}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{N}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{N}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{P}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{P}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Z}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Z}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{S}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{S}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{C}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{C}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Lu}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Lu}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Me}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Me}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{No}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{No}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Pf}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Pf}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Zs}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Zs}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Sk}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Sk}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Cc}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Cc}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{La}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{La}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Ma}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Ma}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Na}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Na}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Pa}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Pa}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Za}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Za}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Sa}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Sa}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', '\P{Ca}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', '\P{Ca}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('foo', 'a()b')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('foo', 'a()b')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('&amp;#x10000;', '&amp;#x10000;')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('&amp;#x10000;', '&amp;#x10000;')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('aaa', 'a{2147483647}')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('aaa', 'a{2147483647}')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abcdefghiabcdefghia0a1', '(a)(b)(c)(d)(e)(f)(g)(h)(i)\1\2\3\4\5\6\7\8\9\10\11')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abcdefghiabcdefghia0a1', '(a)(b)(c)(d)(e)(f)(g)(h)(i)\1\2\3\4\5\6\7\8\9\10\11')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abc', '\S+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abc', '\S+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('&#xD; 	', '\S+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('&#xD; 	', '\S+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('a_:', '\i+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('a_:', '\i+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('1.0', '\i+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('1.0', '\i+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('1.0', '\I+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('1.0', '\I+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('a_:', '\I+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('a_:', '\I+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abc', '\c+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abc', '\c+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches(' 	&#xD;', '\c+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches(' 	&#xD;', '\c+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('&amp;#x20;&amp;#x9;&amp;#xD;', '\C+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('&amp;#x20;&amp;#x9;&amp;#xD;', '\C+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('abc', '\C+')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('abc', '\C+')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('Mum', '([md])[aeiou]\1', 'i')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('Mum', '([md])[aeiou]\1', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('&amp;#x10000;&amp;#x10000;', '(&amp;#x10000;)\1')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('&amp;#x10000;&amp;#x10000;', '(&amp;#x10000;)\1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('&amp;#x10000;&amp;#x10001;', '(&amp;#x10000;)\1')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('&amp;#x10000;&amp;#x10001;', '(&amp;#x10000;)\1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:matches('Mud', '([md])[aeiou]\1', 'i')</x:label>
      <x:variable name="expr" as="xs:string">fn:matches('Mud', '([md])[aeiou]\1', 'i')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/max.xml">
    <x:scenario>
      <x:label>fn:max((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("-2147483648"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-2147483648"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("-1873914410"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-1873914410"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("2147483647"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("2147483647"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("-2147483648"),xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-2147483648"),xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:int("-2147483648"),xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:int("-2147483648"),xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("0"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("0"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("-3.4028235E38"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("-3.4028235E38"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-32768"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-32768"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-5324"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-5324"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("32767"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("32767"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-32768"),xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-32768"),xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:short("-32768"),xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:short("-32768"),xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max()</x:label>
      <x:variable name="expr" as="xs:string">max()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">max("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(max(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(max(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, 3, 3, 3, 3, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">max((3, 3, 3, 3, 3, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, 1, 1, 1, 1, 1)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">max((3, 1, 1, 1, 1, 1)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, 1, 1, 1, 1, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">max((1, 1, 1, 1, 1, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, 1, 5, 1, 1, 3)) eq 5</x:label>
      <x:variable name="expr" as="xs:string">max((3, 1, 5, 1, 1, 3)) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, -5.0, 5, 1, -3, 3)) eq 5</x:label>
      <x:variable name="expr" as="xs:string">max((3, -5.0, 5, 1, -3, 3)) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max(xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:untypedAtomic("3")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">max(xs:untypedAtomic("3")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:untypedAtomic("3"), 1, 2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((xs:untypedAtomic("3"), 1, 2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, xs:float(2), xs:untypedAtomic("3"))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">max((1, xs:float(2), xs:untypedAtomic("3"))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, xs:float(2), xs:untypedAtomic("3"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((1, xs:float(2), xs:untypedAtomic("3"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, xs:float(2), xs:decimal(3))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">max((1, xs:float(2), xs:decimal(3))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, xs:untypedAtomic("3"), xs:float(2))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((1, xs:untypedAtomic("3"), xs:float(2))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((1, xs:untypedAtomic("NaN"), xs:float(2)))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((1, xs:untypedAtomic("NaN"), xs:float(2)))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2)))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2)))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float("NaN"), 1, 1, 2, xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float("NaN"), 1, 1, 2, xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:double("NaN"), 1, 1, 2, xs:float("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((xs:double("NaN"), 1, 1, 2, xs:float("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float("NaN"), 1, "a string"))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float("NaN"), 1, "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a string", 1, xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">max(("a string", 1, xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float("NaN"), 1, xs:untypedAtomic("one")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float("NaN"), 1, xs:untypedAtomic("one")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:untypedAtomic("one"), 1, xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:untypedAtomic("one"), 1, xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((xs:double("NaN"), xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((xs:double("NaN"), xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((xs:float("NaN"), xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((xs:float("NaN"), xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((3, xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((3, xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((3, xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((3, xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((3, xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, xs:float("NaN"))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">max((3, xs:float("NaN"))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max(xs:float("NaN"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max(xs:float("NaN"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(max(xs:double("NaN"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(max(xs:double("NaN"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:untypedAtomic("three"))</x:label>
      <x:variable name="expr" as="xs:string">max(xs:untypedAtomic("three"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:untypedAtomic("3"), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:untypedAtomic("3"), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a string", xs:untypedAtomic("3")))</x:label>
      <x:variable name="expr" as="xs:string">max(("a string", xs:untypedAtomic("3")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(QName("example.com/", "ncname"))</x:label>
      <x:variable name="expr" as="xs:string">max(QName("example.com/", "ncname"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:anyURI("example.com/")) eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">max(xs:anyURI("example.com/")) eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("example.com/"), xs:anyURI("example.com/"))) eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("example.com/"), xs:anyURI("example.com/"))) eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a string")) eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">max(("a string")) eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a string", QName("example.com/", "ncname")))</x:label>
      <x:variable name="expr" as="xs:string">max(("a string", QName("example.com/", "ncname")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5, 5.0e0)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">max((5, 5.0e0)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5, 5.0e0)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((5, 5.0e0)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5, 3.0e0)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((5, 3.0e0)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5.0e0, 5)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((5.0e0, 5)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, 5.0e0)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((3, 5.0e0)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5.0e0, 3)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">max((5.0e0, 3)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1, 1, 1, 1, 1.0)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">max((1, 1, 1, 1, 1.0)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1.0, 1, 1, 1, 1)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">max((1.0, 1, 1, 1, 1)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((1.0, 1, 1.0, 1, 1)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">max((1.0, 1, 1.0, 1, 1)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5.0e0, 5)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">max((5.0e0, 5)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3, 5.0e0)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">max((3, 5.0e0)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5.0e0, 3)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">max((5.0e0, 3)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((current-date(), xs:date("1999-01-01"))) eq current-date()</x:label>
      <x:variable name="expr" as="xs:string">max((current-date(), xs:date("1999-01-01"))) eq current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3,4,5)) eq 5</x:label>
      <x:variable name="expr" as="xs:string">max((3,4,5)) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((5, 5.0e0)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">max((5, 5.0e0)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((3,4, "Zero"))</x:label>
      <x:variable name="expr" as="xs:string">max((3,4, "Zero"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a", "b", "c")) eq "c"</x:label>
      <x:variable name="expr" as="xs:string">max(("a", "b", "c")) eq "c"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("http://example.com/A"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("http://example.com/A"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("http://example.com/B"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("http://example.com/B"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("http://example.com/8"), xs:anyURI("http://example.com/4"))) eq xs:anyURI("http://example.com/8")</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("http://example.com/8"), xs:anyURI("http://example.com/4"))) eq xs:anyURI("http://example.com/8")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("str1", "str2"), "http://example.com/UNSUPPORTED_COLLATION")</x:label>
      <x:variable name="expr" as="xs:string">max(("str1", "str2"), "http://example.com/UNSUPPORTED_COLLATION")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("str1", "str2"), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ())</x:label>
      <x:variable name="expr" as="xs:string">max(("str1", "str2"), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:anyURI("str1"), "max://example.com/UNSUPPORTED_COLLATION")</x:label>
      <x:variable name="expr" as="xs:string">max(xs:anyURI("str1"), "max://example.com/UNSUPPORTED_COLLATION")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:unsignedShort("1")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">max(xs:unsignedShort("1")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((3,4,"Zero"))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((3,4,"Zero"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((xs:integer(5000000000),xs:double(3e0)))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((xs:integer(5000000000),xs:double(3e0)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">max((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:label>
      <x:variable name="expr" as="xs:string">max(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">max((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:label>
      <x:variable name="expr" as="xs:string">max(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(xs:duration("P1Y1M1D"))</x:label>
      <x:variable name="expr" as="xs:string">max(xs:duration("P1Y1M1D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max(("a", "b", "c", "d"))</x:label>
      <x:variable name="expr" as="xs:string">max(("a", "b", "c", "d"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:date('1066-10-02'), xs:date('1588-08-08'), xs:date('2011-06-29')))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:date('1066-10-02'), xs:date('1588-08-08'), xs:date('2011-06-29')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:NCName('c'), xs:ID('b'), xs:token('a')))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:NCName('c'), xs:ID('b'), xs:token('a')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:positiveInteger(123), xs:unsignedShort(124)))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:positiveInteger(123), xs:unsignedShort(124)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("http://c.com"), "http://b.com"))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("http://c.com"), "http://b.com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:anyURI("http://a.com"), xs:anyURI("http://b.com")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:anyURI("http://a.com"), xs:anyURI("http://b.com")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:token("zither"), xs:anyURI("http://b.com")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:token("zither"), xs:anyURI("http://b.com")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (max(for $x in 1 to 10 return $x mod 9 = 0)) then true() else false()</x:label>
      <x:variable name="expr" as="xs:string">if (max(for $x in 1 to 10 return $x mod 9 = 0)) then true() else false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/min.xml">
    <x:scenario>
      <x:label>fn:min((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("-2147483648"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-2147483648"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("-1873914410"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-1873914410"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("2147483647"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("2147483647"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("-2147483648"),xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-2147483648"),xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:int("-2147483648"),xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:int("-2147483648"),xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("0"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("0"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("-3.4028235E38"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("-3.4028235E38"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-47175562203048468"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-92233720368547758"),xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("999999999999999999"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:positiveInteger("1"),xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-32768"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-32768"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-5324"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-5324"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("32767"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("32767"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-32768"),xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-32768"),xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:short("-32768"),xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:short("-32768"),xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min()</x:label>
      <x:variable name="expr" as="xs:string">min()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">min("a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(min(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(min(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, 3, 3, 3, 3, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">min((3, 3, 3, 3, 3, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, 1, 1, 1, 1, 1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">min((3, 1, 1, 1, 1, 1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((1, 1, 1, 1, 1, 3)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">min((1, 1, 1, 1, 1, 3)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, 1, 5, 1, 1, 3)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">min((3, 1, 5, 1, 1, 3)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, -5.0, 5, 1, -3, 3)) eq -5.0</x:label>
      <x:variable name="expr" as="xs:string">min((3, -5.0, 5, 1, -3, 3)) eq -5.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min(xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:untypedAtomic("3")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">min(xs:untypedAtomic("3")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:untypedAtomic("1"), 3, 2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((xs:untypedAtomic("1"), 3, 2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, xs:float(2), xs:untypedAtomic("1"))) eq 1</x:label>
      <x:variable name="expr" as="xs:string">min((3, xs:float(2), xs:untypedAtomic("1"))) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, xs:float(2), xs:untypedAtomic("1"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((3, xs:float(2), xs:untypedAtomic("1"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((1, xs:float(2), xs:decimal(3))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">min((1, xs:float(2), xs:decimal(3))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, xs:untypedAtomic("1"), xs:float(2))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((3, xs:untypedAtomic("1"), xs:float(2))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((1, xs:untypedAtomic("NaN"), xs:float(2)))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((1, xs:untypedAtomic("NaN"), xs:float(2)))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2)))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((xs:float("NaN"), xs:untypedAtomic("3"), xs:float(2)))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:float("NaN"), xs:untypedAtomic("3"), xs:double(2))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((xs:float("NaN"), xs:untypedAtomic("3"), xs:double(2))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:float("NaN"), 1, 1, 2, xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((xs:float("NaN"), 1, 1, 2, xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:double("NaN"), 1, 1, 2, xs:float("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((xs:double("NaN"), 1, 1, 2, xs:float("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:float("NaN"), 1, "a string"))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:float("NaN"), 1, "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a string", 1, xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">min(("a string", 1, xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:float("NaN"), 1, xs:untypedAtomic("one")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:float("NaN"), 1, xs:untypedAtomic("one")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>max((xs:untypedAtomic("one"), 1, xs:float("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">max((xs:untypedAtomic("one"), 1, xs:float("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((xs:double("NaN"), xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((xs:double("NaN"), xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((xs:float("NaN"), xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((xs:float("NaN"), xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((3, xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((3, xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((3, xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((3, xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((3, xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, xs:float("NaN"))) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">min((3, xs:float("NaN"))) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((xs:float(-3), xs:untypedAtomic("3"), xs:double("NaN"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min(xs:float("NaN"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min(xs:float("NaN"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(min(xs:double("NaN"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(min(xs:double("NaN"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:untypedAtomic("three"))</x:label>
      <x:variable name="expr" as="xs:string">min(xs:untypedAtomic("three"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:untypedAtomic("3"), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:untypedAtomic("3"), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a string", xs:untypedAtomic("3")))</x:label>
      <x:variable name="expr" as="xs:string">min(("a string", xs:untypedAtomic("3")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(QName("example.com/", "ncname"))</x:label>
      <x:variable name="expr" as="xs:string">min(QName("example.com/", "ncname"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:anyURI("example.com/")) eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">min(xs:anyURI("example.com/")) eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("example.com/"), xs:anyURI("example.com/"))) eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("example.com/"), xs:anyURI("example.com/"))) eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a string")) eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">min(("a string")) eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a string", QName("example.com/", "ncname")))</x:label>
      <x:variable name="expr" as="xs:string">min(("a string", QName("example.com/", "ncname")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5, 5.0e0)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">min((5, 5.0e0)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5.0e0, 5)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">min((5.0e0, 5)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, 5.0e0)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">min((3, 5.0e0)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5.0e0, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">min((5.0e0, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:date("2005-01-01"), xs:date("2001-01-01"))) eq xs:date("2001-01-01")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:date("2005-01-01"), xs:date("2001-01-01"))) eq xs:date("2001-01-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3,4,5)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">min((3,4,5)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5, 5.0e0)) eq 5.0e0</x:label>
      <x:variable name="expr" as="xs:string">min((5, 5.0e0)) eq 5.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3,4, "Zero"))</x:label>
      <x:variable name="expr" as="xs:string">min((3,4, "Zero"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:float(0.0E0), xs:float(-0.0E0))) eq xs:float("-0")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:float(0.0E0), xs:float(-0.0E0))) eq xs:float("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("http://example.com/A"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("http://example.com/A"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("http://example.com/B"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("http://example.com/B"), xs:anyURI("http://example.com/A"))) eq xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("http://example.com/8"), xs:anyURI("http://example.com/4"))) eq xs:anyURI("http://example.com/4")</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("http://example.com/8"), xs:anyURI("http://example.com/4"))) eq xs:anyURI("http://example.com/4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("str1", "str2"), "http://example.com/UNSUPPORTED_COLLATION")</x:label>
      <x:variable name="expr" as="xs:string">min(("str1", "str2"), "http://example.com/UNSUPPORTED_COLLATION")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:anyURI("str1"), "http://example.com/UNSUPPORTED_COLLATION")</x:label>
      <x:variable name="expr" as="xs:string">min(xs:anyURI("str1"), "http://example.com/UNSUPPORTED_COLLATION")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("str1", "str2"), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ())</x:label>
      <x:variable name="expr" as="xs:string">min(("str1", "str2"), "http://www.w3.org/2005/xpath-functions/collation/codepoint", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5, 5.0e0)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((5, 5.0e0)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5.0e0, 5)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((5.0e0, 5)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((3, 5.0e0)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((3, 5.0e0)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((5.0e0, 3)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">min((5.0e0, 3)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((1, 1, 1, 1, 1.0)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">min((1, 1, 1, 1, 1.0)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((1.0, 1, 1, 1, 1)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">min((1.0, 1, 1, 1, 1)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((1.0, 1, 1.0, 1, 1)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">min((1.0, 1, 1.0, 1, 1)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a", "b", "c")) eq "a"</x:label>
      <x:variable name="expr" as="xs:string">min(("a", "b", "c")) eq "a"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:unsignedShort("1")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">min(xs:unsignedShort("1")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((3,4,"Zero"))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((3,4,"Zero"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((xs:integer(5000000),xs:double(3e8)))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((xs:integer(5000000),xs:double(3e8)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">min((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT2H"))) instance of xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:label>
      <x:variable name="expr" as="xs:string">min(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">min((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:label>
      <x:variable name="expr" as="xs:string">min(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(xs:duration("P1Y1M1D"))</x:label>
      <x:variable name="expr" as="xs:string">min(xs:duration("P1Y1M1D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min(("a", "b", "c", "d"))</x:label>
      <x:variable name="expr" as="xs:string">min(("a", "b", "c", "d"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:date('1066-10-02'), xs:date('1588-08-08'), xs:date('2011-06-29')))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:date('1066-10-02'), xs:date('1588-08-08'), xs:date('2011-06-29')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:NCName('a'), xs:ID('b'), xs:token('c')))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:NCName('a'), xs:ID('b'), xs:token('c')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:positiveInteger(123), xs:unsignedShort(124)))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:positiveInteger(123), xs:unsignedShort(124)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("http://a.com"), "http://b.com"))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("http://a.com"), "http://b.com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:anyURI("http://a.com"), xs:anyURI("http://b.com")))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:anyURI("http://a.com"), xs:anyURI("http://b.com")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>min((xs:token("http"), xs:anyURI("http://b.com")))</x:label>
      <x:variable name="expr" as="xs:string">min((xs:token("http"), xs:anyURI("http://b.com")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/minutes-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:30:00+05:30"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:30:00+05:30"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00")) lt fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00")) lt fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00")) le fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00")) le fn:minutes-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:minutes-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:minutes-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T20:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-05-31T20:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T23:59:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1999-05-31T23:59:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:02:00Z")) * fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:03:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:02:00Z")) * fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:03:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:10:00Z")) div fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:05:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:10:00Z")) div fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:05:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) idiv fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:05:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) idiv fn:minutes-from-dateTime(xs:dateTime("1970-01-01T02:05:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) mod fn:minutes-from-dateTime(xs:dateTime("1970-01-01T03:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) mod fn:minutes-from-dateTime(xs:dateTime("1970-01-01T03:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) eq fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) eq fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) ne fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) ne fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) le fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) le fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) ge fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z")) ge fn:minutes-from-dateTime(xs:dateTime("1970-01-01T10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(minutes-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(minutes-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-dateTime(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-dateTime(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 23</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 23</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/minutes-from-duration.xml">
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P3DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P3DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("-P5DT12H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("-P5DT12H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P20DT20H20M")) lt fn:minutes-from-duration(xs:dayTimeDuration("P03DT02H10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P20DT20H20M")) lt fn:minutes-from-duration(xs:dayTimeDuration("P03DT02H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M")) le fn:minutes-from-duration(xs:dayTimeDuration("P22DT10H09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M")) le fn:minutes-from-duration(xs:dayTimeDuration("P22DT10H09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:minutes-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:minutes-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P01DT01H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P01DT01H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:minutes-from-duration(xs:dayTimeDuration("P23DT10H20M")),fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:minutes-from-duration(xs:dayTimeDuration("P23DT10H20M")),fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M")) + fn:minutes-from-duration(xs:dayTimeDuration("P22DT11H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M")) + fn:minutes-from-duration(xs:dayTimeDuration("P22DT11H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P30DT10H20M")) - fn:minutes-from-duration(xs:dayTimeDuration("P10DT09H10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P30DT10H20M")) - fn:minutes-from-duration(xs:dayTimeDuration("P10DT09H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P20DT09H04M")) * fn:minutes-from-duration(xs:dayTimeDuration("P03DT10H10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P20DT09H04M")) * fn:minutes-from-duration(xs:dayTimeDuration("P03DT10H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P20DT10H10M")) div fn:minutes-from-duration(xs:dayTimeDuration("P05DT05H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P20DT10H10M")) div fn:minutes-from-duration(xs:dayTimeDuration("P05DT05H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P25DT10H20M")) idiv fn:minutes-from-duration(xs:dayTimeDuration("P05DT02H04M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P25DT10H20M")) idiv fn:minutes-from-duration(xs:dayTimeDuration("P05DT02H04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P10DT10H20M")) mod fn:minutes-from-duration(xs:dayTimeDuration("P03DT03H03M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P10DT10H20M")) mod fn:minutes-from-duration(xs:dayTimeDuration("P03DT03H03M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:minutes-from-duration(xs:dayTimeDuration("P20DT03H20M"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:minutes-from-duration(xs:dayTimeDuration("P20DT03H20M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P22DT10H10M")) eq fn:minutes-from-duration(xs:dayTimeDuration("P22DT09H10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P22DT10H10M")) eq fn:minutes-from-duration(xs:dayTimeDuration("P22DT09H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P23DT08H20M")) ne fn:minutes-from-duration(xs:dayTimeDuration("P12DT05H22M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P23DT08H20M")) ne fn:minutes-from-duration(xs:dayTimeDuration("P12DT05H22M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P20DT03H09M")) le fn:minutes-from-duration(xs:dayTimeDuration("P21DT15H21M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P20DT03H09M")) le fn:minutes-from-duration(xs:dayTimeDuration("P21DT15H21M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P21DT07H12M")) ge fn:minutes-from-duration(xs:dayTimeDuration("P20DT01H13M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P21DT07H12M")) ge fn:minutes-from-duration(xs:dayTimeDuration("P20DT01H13M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H65M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:dayTimeDuration("P21DT10H65M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(minutes-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(minutes-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -2</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -23</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -23</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-duration(xs:yearMonthDuration('P1Y'))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-duration(xs:yearMonthDuration('P1Y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/minutes-from-time.xml">
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("08:03:35Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("08:03:35Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("13:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("13:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("21:23:00Z")) lt fn:minutes-from-time(xs:time("21:24:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("21:23:00Z")) lt fn:minutes-from-time(xs:time("21:24:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("01:23:00Z")) gt fn:minutes-from-time(xs:time("01:23:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("01:23:00Z")) gt fn:minutes-from-time(xs:time("01:23:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:minutes-from-time(xs:time("01:10:00Z")), fn:minutes-from-time(xs:time("01:20:00Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:minutes-from-time(xs:time("01:10:00Z")), fn:minutes-from-time(xs:time("01:20:00Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:minutes-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:minutes-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("00:59:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("00:59:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(fn:minutes-from-time(xs:time("23:20:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(fn:minutes-from-time(xs:time("23:20:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("02:00:00Z")) + fn:minutes-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("02:00:00Z")) + fn:minutes-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:10:00Z")) - fn:minutes-from-time(xs:time("09:02:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:10:00Z")) - fn:minutes-from-time(xs:time("09:02:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("02:02:00Z")) * fn:minutes-from-time(xs:time("10:08:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("02:02:00Z")) * fn:minutes-from-time(xs:time("10:08:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("22:33:00Z")) div fn:minutes-from-time(xs:time("02:11:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("22:33:00Z")) div fn:minutes-from-time(xs:time("02:11:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:12:00Z")) idiv fn:minutes-from-time(xs:time("02:02:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:12:00Z")) idiv fn:minutes-from-time(xs:time("02:02:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:10:00Z")) mod fn:minutes-from-time(xs:time("03:03:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:10:00Z")) mod fn:minutes-from-time(xs:time("03:03:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:minutes-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:minutes-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:minutes-from-time(xs:time("10:10:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:minutes-from-time(xs:time("10:10:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:02:00Z")) eq fn:minutes-from-time(xs:time("10:02:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:02:00Z")) eq fn:minutes-from-time(xs:time("10:02:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:00:00Z")) ne fn:minutes-from-time(xs:time("01:01:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:00:00Z")) ne fn:minutes-from-time(xs:time("01:01:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:00:00Z")) le fn:minutes-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:00:00Z")) le fn:minutes-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:minutes-from-time(xs:time("10:03:00Z")) ge fn:minutes-from-time(xs:time("10:04:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:minutes-from-time(xs:time("10:03:00Z")) ge fn:minutes-from-time(xs:time("10:04:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-time()</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-time((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-time((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(minutes-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(minutes-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-time(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-time(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>minutes-from-time(xs:time("23:11:12.43")) eq 11</x:label>
      <x:variable name="expr" as="xs:string">minutes-from-time(xs:time("23:11:12.43")) eq 11</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/month-from-date.xml">
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1983-11-17Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1983-11-17Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("2030-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("2030-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1999-05-31-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1999-05-31-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("2000-01-01+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("2000-01-01+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1999-12-31Z")) lt fn:month-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1999-12-31Z")) lt fn:month-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1999-12-31Z")) le fn:month-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1999-12-31Z")) le fn:month-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:month-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:month-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) + fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) + fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) - fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) - fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) * fn:month-from-date(xs:date("0002-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) * fn:month-from-date(xs:date("0002-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) div fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) div fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) idiv fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) idiv fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) mod fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) mod fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) eq fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) eq fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) ne fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) ne fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) le fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) le fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01Z")) ge fn:month-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01Z")) ge fn:month-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-date()</x:label>
      <x:variable name="expr" as="xs:string">month-from-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-date((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">month-from-date((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(month-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(month-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-date(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">month-from-date(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-date(xs:date("2000-02-03")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">month-from-date(xs:date("2000-02-03")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/month-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1999-12-31T19:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1999-12-31T19:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), xs:dayTimeDuration("PT0H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:month-from-dateTime(xs:dateTime("1996-12-31T12:00:00Z")),fn:month-from-dateTime(xs:dateTime("2000-10-31T12:00:00Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:month-from-dateTime(xs:dateTime("1996-12-31T12:00:00Z")),fn:month-from-dateTime(xs:dateTime("2000-10-31T12:00:00Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:month-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:month-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("-1999-01-31T00:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("-1999-01-31T00:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("0001-12-31T23:20:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("0001-12-31T23:20:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-02-01T00:00:00Z")) - fn:month-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-02-01T00:00:00Z")) - fn:month-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-03-01T02:00:00Z")) * fn:month-from-dateTime(xs:dateTime("0002-02-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-03-01T02:00:00Z")) * fn:month-from-dateTime(xs:dateTime("0002-02-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1000-10-01T02:00:00Z")) div fn:month-from-dateTime(xs:dateTime("0050-05-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1000-10-01T02:00:00Z")) div fn:month-from-dateTime(xs:dateTime("0050-05-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-01-12T10:00:00Z")) idiv fn:month-from-dateTime(xs:dateTime("1970-02-01T02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-01-12T10:00:00Z")) idiv fn:month-from-dateTime(xs:dateTime("1970-02-01T02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-10-01T10:00:00Z")) mod fn:month-from-dateTime(xs:dateTime("1970-03-01T03:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-10-01T10:00:00Z")) mod fn:month-from-dateTime(xs:dateTime("1970-03-01T03:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z")) le fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1970-02-01T10:00:00Z")) le fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z")) ge fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z")) ge fn:month-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">month-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">month-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(month-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(month-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-dateTime(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">month-from-dateTime(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>month-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">month-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/months-from-duration.xml">
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P0Y0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P0Y0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P1000Y6M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P1000Y6M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P2030Y12M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P2030Y12M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P20Y15M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P20Y15M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("-P20Y18M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("-P20Y18M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P20Y3M")) lt fn:months-from-duration(xs:yearMonthDuration("P21Y2M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P20Y3M")) lt fn:months-from-duration(xs:yearMonthDuration("P21Y2M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P21Y10M")) le fn:months-from-duration(xs:yearMonthDuration("P22Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P21Y10M")) le fn:months-from-duration(xs:yearMonthDuration("P22Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:months-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:months-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P01Y01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P01Y01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:months-from-duration(xs:yearMonthDuration("P23Y10M")),fn:months-from-duration(xs:yearMonthDuration("P21Y10M"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:months-from-duration(xs:yearMonthDuration("P23Y10M")),fn:months-from-duration(xs:yearMonthDuration("P21Y10M"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P21Y10M")) + fn:months-from-duration(xs:yearMonthDuration("P22Y11M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P21Y10M")) + fn:months-from-duration(xs:yearMonthDuration("P22Y11M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P30Y10M")) - fn:months-from-duration(xs:yearMonthDuration("P10Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P30Y10M")) - fn:months-from-duration(xs:yearMonthDuration("P10Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P20Y09M")) * fn:months-from-duration(xs:yearMonthDuration("P02Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P20Y09M")) * fn:months-from-duration(xs:yearMonthDuration("P02Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P20Y10M")) div fn:months-from-duration(xs:yearMonthDuration("P05Y05M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P20Y10M")) div fn:months-from-duration(xs:yearMonthDuration("P05Y05M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P25Y10M")) idiv fn:months-from-duration(xs:yearMonthDuration("P05Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P25Y10M")) idiv fn:months-from-duration(xs:yearMonthDuration("P05Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P10Y10M")) mod fn:months-from-duration(xs:yearMonthDuration("P03Y03M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P10Y10M")) mod fn:months-from-duration(xs:yearMonthDuration("P03Y03M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:months-from-duration(xs:yearMonthDuration("P21Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:months-from-duration(xs:yearMonthDuration("P21Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:months-from-duration(xs:yearMonthDuration("P25Y03M"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:months-from-duration(xs:yearMonthDuration("P25Y03M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P22Y10M")) eq fn:months-from-duration(xs:yearMonthDuration("P22Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P22Y10M")) eq fn:months-from-duration(xs:yearMonthDuration("P22Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P22Y10M")) ne fn:months-from-duration(xs:yearMonthDuration("P23Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P22Y10M")) ne fn:months-from-duration(xs:yearMonthDuration("P23Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P21Y01M")) le fn:months-from-duration(xs:yearMonthDuration("P21Y15M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P21Y01M")) le fn:months-from-duration(xs:yearMonthDuration("P21Y15M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:yearMonthDuration("P20Y09M")) ge fn:months-from-duration(xs:yearMonthDuration("P20Y01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:yearMonthDuration("P20Y09M")) ge fn:months-from-duration(xs:yearMonthDuration("P20Y01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(months-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(months-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration(xs:yearMonthDuration("P0003Y2M")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration(xs:yearMonthDuration("P0003Y2M")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration(xs:yearMonthDuration("-P0003Y2M")) eq -2</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration(xs:yearMonthDuration("-P0003Y2M")) eq -2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>months-from-duration(xs:duration("-P3Y4M4DT1H23M2.34S")) eq -4</x:label>
      <x:variable name="expr" as="xs:string">months-from-duration(xs:duration("-P3Y4M4DT1H23M2.34S")) eq -4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:months-from-duration(xs:dayTimeDuration('P1D'))</x:label>
      <x:variable name="expr" as="xs:string">fn:months-from-duration(xs:dayTimeDuration('P1D'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/name.xml">
    <x:scenario>
      <x:label>fn:string-length(fn:name(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:name(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:name(./works[1]/employee[1]))</x:label>
      <x:variable name="expr" as="xs:string">(fn:name(./works[1]/employee[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:name(./works[1]/employee[1]/@name))</x:label>
      <x:variable name="expr" as="xs:string">(fn:name(./works[1]/employee[1]/@name))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:name(.))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:name(.))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:name(./works[1]/nonexistent[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:name(./works[1]/nonexistent[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in ./works[1]/employee[2] return
         fn:string-length(fn:name($h/child::text()[last()]))</x:label>
      <x:variable name="expr" as="xs:string">for $h in ./works[1]/employee[2] return
         fn:string-length(fn:name($h/child::text()[last()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:name()</x:label>
      <x:variable name="expr" as="xs:string">fn:name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:upper-case(fn:name($h))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:upper-case(fn:name($h))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:lower-case(fn:name($h))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:lower-case(fn:name($h))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:name($h/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:name($h/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:name($h/descendant::empnum[position() =
         1])</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:name($h/descendant::empnum[position() =
         1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:name($h/descendant-or-self::empnum[position()
         = 1])</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:name($h/descendant-or-self::empnum[position()
         = 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:substring(fn:name($h),2)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:substring(fn:name($h),2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return fn:concat(fn:name($h),"A String")</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return fn:concat(fn:name($h),"A String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:name($h/self::employee)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:name($h/self::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (./works/employee[2]) return fn:count(fn:name($h/self::div))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (./works/employee[2]) return fn:count(fn:name($h/self::div))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]/@name) return fn:name($h/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]/@name) return fn:name($h/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:name(./works[1]/employee[2]/@name))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:name(./works[1]/employee[2]/@name))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:name(./works[1]/employee[1]),fn:name(./works[1]/employee[2]))</x:label>
      <x:variable name="expr" as="xs:string">(fn:name(./works[1]/employee[1]),fn:name(./works[1]/employee[2]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(((fn:name(/works[1]/employee[1]),fn:name(/works[1]/employee[2]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(((fn:name(/works[1]/employee[1]),fn:name(/works[1]/employee[2]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:name(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:name(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name(/*)</x:label>
      <x:variable name="expr" as="xs:string">name(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//*:Start)[1]/@*)</x:label>
      <x:variable name="expr" as="xs:string">name((//*:Start)[1]/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//@xml:*)[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//@xml:*)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//processing-instruction())[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//processing-instruction())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//*[.='1983'])[1])</x:label>
      <x:variable name="expr" as="xs:string">name((//*[.='1983'])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//comment())[1]) = ''</x:label>
      <x:variable name="expr" as="xs:string">name((//comment())[1]) = ''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((//text())[1]) = ''</x:label>
      <x:variable name="expr" as="xs:string">name((//text())[1]) = ''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">name((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then name() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then name() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">name(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/namespace-uri-for-prefix.xml">
    <x:scenario>
      <x:label>namespace-uri-for-prefix()</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-for-prefix()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-for-prefix("string", (), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-for-prefix("string", (), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/namespace-uri-from-QName.xml">
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/derivQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/derivQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrDerivQN)[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrDerivQN)[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(/root[1]/@attrDerivQN)))) instance of xs:anyURI ?</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(/root[1]/@attrDerivQN)))) instance of xs:anyURI ?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(())</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(((),()))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(((),()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName("")</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(/root/elemQN)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(/root/elemQN)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-qname((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-qname((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-Qname((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-Qname((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespaceURIfromQName((/root/elemQN)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:namespaceURIfromQName((/root/elemQN)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(xs:integer("100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(xs:integer("100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(xs:time("12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(xs:time("12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(data((/root/elemQN))[1]))))</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName(fn:QName("http://www.example.com/urn", exactly-one(xs:string(data((/root/elemQN))[1]))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName( if( true() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN[1])))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN))[1])) )</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName( if( true() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN[1])))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN))[1])) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri-from-QName( if( false() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri-from-QName( if( false() ) then fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/elemQN)[1]))) else fn:QName("http://www.example.com/urn", exactly-one(xs:string((/root/@attrQN)[1]))) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(namespace-uri-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(namespace-uri-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName( QName("example.com/", "pre:lname")) eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName( QName("example.com/", "pre:lname")) eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName( QName("example.com/", "pre:lname")) instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName( QName("example.com/", "pre:lname")) instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/namespace-uri.xml">
    <x:scenario>
      <x:label>fn:namespace-uri()</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(/*,"A Second Argument")</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/*,"A Second Argument")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 100)[fn:namespace-uri()]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[fn:namespace-uri()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(())</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri((//comment())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//comment())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri((//processing-instruction())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//processing-instruction())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri((//text())[1])</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((//text())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri(/*)</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(/works/employee[1]/@name)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works/employee[1]/@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(/works[1]/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works[1]/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(/works[1]/employee[1]/@name)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(/works[1]/employee[1]/@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:namespace-uri(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:namespace-uri(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then namespace-uri() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then namespace-uri() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri(()) eq xs:anyURI("")</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri(()) eq xs:anyURI("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/nilled.xml">
    <x:scenario>
      <x:label>fn:count(fn:nilled(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:nilled(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:nilled(/works[1]/employee[2]/child::text()[last()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:nilled(/works[1]/employee[2]/child::text()[last()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:nilled(/works[1]/employee[2])</x:label>
      <x:variable name="expr" as="xs:string">fn:nilled(/works[1]/employee[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nilled((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">nilled((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(nilled( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(nilled( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nilled(1)</x:label>
      <x:variable name="expr" as="xs:string">nilled(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/node-name.xml">
    <x:scenario>
      <x:label>fn:count(fn:node-name(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:node-name(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:node-name(/works[1]/employee[2]/child::text()[last()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:node-name(/works[1]/employee[2]/child::text()[last()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:local-name-from-QName(fn:node-name(/works[1]/employee[2]))</x:label>
      <x:variable name="expr" as="xs:string">fn:local-name-from-QName(fn:node-name(/works[1]/employee[2]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node-name((), "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">node-name((), "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(node-name(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(node-name(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node-name(/*, ())</x:label>
      <x:variable name="expr" as="xs:string">node-name(/*, ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node-name("string")</x:label>
      <x:variable name="expr" as="xs:string">node-name("string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node-name(/*) instance of xs:QName</x:label>
      <x:variable name="expr" as="xs:string">node-name(/*) instance of xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node-name(3.3)</x:label>
      <x:variable name="expr" as="xs:string">node-name(3.3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/normalize-space.xml">
    <x:scenario>
      <x:label>fn:normalize-space("This is a charac")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This is a charac")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This is a ch")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This is a ch")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This is a charac")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This is a charac")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(())</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//doc/normalize-space(zero-or-one(a[normalize-space() = 'Hello, How are you?']))</x:label>
      <x:variable name="expr" as="xs:string">//doc/normalize-space(zero-or-one(a[normalize-space() = 'Hello, How are you?']))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(" The wealthy curled darlings of our nation. ")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(" The wealthy curled darlings of our nation. ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space()</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This	text should contains no tabs")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This	text should contains no tabs")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This text should contains
no newline characters.")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This text should contains
no newline characters.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This	text	should	contains	no	tab	characters.")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This	text	should	contains	no	tab	characters.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This
text
should
contains
no
newline
characters.")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This
text
should
contains
no
newline
characters.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This text	should contains no tabs or
newline characters.")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This text	should contains no tabs or
newline characters.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("This	 text	 should	 contains
 no tabs or newline characters.")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("This	 text	 should	 contains
 no tabs or newline characters.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("    ")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("    ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(" ")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(" ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("	")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("	")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("		")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("		")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("
")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("
")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("&#xD;
&#xD;
")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("&#xD;
&#xD;
")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(" 	  	 ")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(" 	  	 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(" &#xD;  
 ")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(" &#xD;  
 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("	
")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("	
")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space("	12345")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space("	12345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(fn:string(" ABC "))</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(fn:string(" ABC "))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-space(fn:normalize-space(" ABC"))</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-space(fn:normalize-space(" ABC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/normalize-space()</x:label>
      <x:variable name="expr" as="xs:string">/*/normalize-space()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/normalize-space(.)</x:label>
      <x:variable name="expr" as="xs:string">/*/normalize-space(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date()[normalize-space()]</x:label>
      <x:variable name="expr" as="xs:string">current-date()[normalize-space()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date()[normalize-space(.)]</x:label>
      <x:variable name="expr" as="xs:string">current-date()[normalize-space(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space("a string", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">normalize-space("a string", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then normalize-space() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then normalize-space() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space("foo") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space("foo") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(" foo") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(" foo") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space("foo ") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space("foo ") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space("f o o ") eq "f o o"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space("f o o ") eq "f o o"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(" 143 1239 fhjkls ") eq "143 1239 fhjkls"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(" 143 1239 fhjkls ") eq "143 1239 fhjkls"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(normalize-space(("foo", current-time())[1])) eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(normalize-space(("foo", current-time())[1])) eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/normalize-unicode.xml">
    <x:scenario>
      <x:label>normalize-unicode('Nothing to normalize.')</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('Nothing to normalize.')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode(())</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('Ǻ', normalize-unicode('Ǻ'))</x:label>
      <x:variable name="expr" as="xs:string">matches('Ǻ', normalize-unicode('Ǻ'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('Å', normalize-unicode('Å'))</x:label>
      <x:variable name="expr" as="xs:string">matches('Å', normalize-unicode('Å'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches('Å', normalize-unicode('Å'))</x:label>
      <x:variable name="expr" as="xs:string">matches('Å', normalize-unicode('Å'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-unicode('Å') eq normalize-unicode('Å'))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-unicode('Å') eq normalize-unicode('Å'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode(12)</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode('','','')</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('','','')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode('Nothing to normalize.', 'NFC')</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('Nothing to normalize.', 'NFC')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode('Nothing to normalize.', 'nFc')</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('Nothing to normalize.', 'nFc')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode((), 'NFC')</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode((), 'NFC')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(normalize-unicode('Å', '') eq normalize-unicode('Å', ''))</x:label>
      <x:variable name="expr" as="xs:string">(normalize-unicode('Å', '') eq normalize-unicode('Å', ''))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode('',())</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('',())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode('',12)</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode('',12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:normalize-unicode("Å"," NFC "),fn:normalize-unicode("Å","NFC"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:normalize-unicode("Å"," NFC "),fn:normalize-unicode("Å","NFC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:normalize-unicode("è","chancesareyoudonotsupportthis123ifyoudowaoo")</x:label>
      <x:variable name="expr" as="xs:string">fn:normalize-unicode("è","chancesareyoudonotsupportthis123ifyoudowaoo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(fn:normalize-unicode("normalizedstring"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(fn:normalize-unicode("normalizedstring"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(fn:normalize-unicode("NORMALIZEDSTRING"))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(fn:normalize-unicode("NORMALIZEDSTRING"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:normalize-unicode("NORMALIZEDSTRING"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:normalize-unicode("NORMALIZEDSTRING"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:normalize-unicode("NORMALIZEDSTRING"),"another string")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:normalize-unicode("NORMALIZEDSTRING"),"another string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring(fn:normalize-unicode("NORMALIZEDSTRING"),5)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring(fn:normalize-unicode("NORMALIZEDSTRING"),5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(normalize-unicode('﷐'))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(normalize-unicode('﷐'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(fn:normalize-unicode('ê﷐ê﷐ê'))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(fn:normalize-unicode('ê﷐ê﷐ê'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(fn:normalize-unicode('e﷐̂'))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(fn:normalize-unicode('e﷐̂'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode()</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("a string", "NFC", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("a string", "NFC", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("a string", "example.com/notSupported/")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("a string", "example.com/notSupported/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo", "NFC") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo", "NFC") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo", "NFD") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo", "NFD") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo", "NFKD") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo", "NFKD") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo", "NFKC") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo", "NFKC") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("f oo", "") eq "f oo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("f oo", "") eq "f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("foo", "") eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("foo", "") eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("f oo") eq "f oo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("f oo") eq "f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("f oo", "NFC") eq "f oo"</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("f oo", "NFC") eq "f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode(("a string", error()), "NFC")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode(("a string", error()), "NFC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("blah","FULLY-NORMALIZED")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("blah","FULLY-NORMALIZED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("blah","FULLY-NORMALIZED")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("blah","FULLY-NORMALIZED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(normalize-unicode("blah","NFC"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(normalize-unicode("blah","NFC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(normalize-unicode("blah","ZZZ"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(normalize-unicode("blah","ZZZ"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode((),"NFC")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode((),"NFC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("","NFC")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("","NFC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode(codepoints-to-string(2494),"FULLY-NORMALIZED")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode(codepoints-to-string(2494),"FULLY-NORMALIZED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode(codepoints-to-string(2494),"FULLY-NORMALIZED")</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode(codepoints-to-string(2494),"FULLY-NORMALIZED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/not.xml">
    <x:scenario>
      <x:label>fn:not(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("fn:not()")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("fn:not()")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") and fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") and fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") or fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") or fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") eq fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") eq fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") ne fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") ne fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") lt fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") lt fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") le fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") le fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") gt fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") gt fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") ge fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") ge fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") = fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") = fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") != fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") != fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") &lt; fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") &lt; fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") &lt;= fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") &lt;= fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") &gt; fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") &gt; fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not("true") &gt;= fn:not("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not("true") &gt;= fn:not("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(fn:not("true"))</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(fn:not("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:not("true"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:not("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:string(fn:not("true")),xs:string(fn:not("true")))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:string(fn:not("true")),xs:string(fn:not("true")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string(fn:not("true")),xs:string(fn:not("true")))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string(fn:not("true")),xs:string(fn:not("true")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string(fn:not("true")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string(fn:not("true")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(//banana)</x:label>
      <x:variable name="expr" as="xs:string">not(//banana)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(//*)</x:label>
      <x:variable name="expr" as="xs:string">not(//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float('NaN'))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float('NaN'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("")</x:label>
      <x:variable name="expr" as="xs:string">not("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((true(), false()))</x:label>
      <x:variable name="expr" as="xs:string">not((true(), false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((23, /))</x:label>
      <x:variable name="expr" as="xs:string">not((23, /))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((/, 23))</x:label>
      <x:variable name="expr" as="xs:string">not((/, 23))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not()</x:label>
      <x:variable name="expr" as="xs:string">not()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1, 2, 3, 4, 5, 6)</x:label>
      <x:variable name="expr" as="xs:string">not(1, 2, 3, 4, 5, 6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false() and false())</x:label>
      <x:variable name="expr" as="xs:string">not(false() and false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(not(true()))</x:label>
      <x:variable name="expr" as="xs:string">not(not(true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false())</x:label>
      <x:variable name="expr" as="xs:string">not(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0)</x:label>
      <x:variable name="expr" as="xs:string">not(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(())</x:label>
      <x:variable name="expr" as="xs:string">not(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI(""))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(not(xs:anyURI("example.com/")))</x:label>
      <x:variable name="expr" as="xs:string">not(not(xs:anyURI("example.com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(fn:boolean((1, 2, 3, current-time())[1] treat as xs:integer)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">not(fn:boolean((1, 2, 3, current-time())[1] treat as xs:integer)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(())</x:label>
      <x:variable name="expr" as="xs:string">fn:not(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(current-date() &gt; xs:date("1997-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(current-date() &gt; xs:date("1997-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/number.xml">
    <x:scenario>
      <x:label>fn:number(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:integer("830993497117024304")) eq 830993497117024304</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:integer("830993497117024304")) eq 830993497117024304</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:decimal("617375191608514839")) eq 617375191608514839</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:decimal("617375191608514839")) eq 617375191608514839</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:float("-3.4028235E38")) eq -3.4028234663852885E38</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:float("-3.4028235E38")) eq -3.4028234663852885E38</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:long("-47175562203048468")) eq -47175562203048468</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:long("-47175562203048468")) eq -47175562203048468</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:negativeInteger("-297014075999096793")) eq -297014075999096793</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:negativeInteger("-297014075999096793")) eq -297014075999096793</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:positiveInteger("52704602390610033")) eq 52704602390610033</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:positiveInteger("52704602390610033")) eq 52704602390610033</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:unsignedLong("184467440737095516")) eq 1.8446744073709551E17</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:unsignedLong("184467440737095516")) eq 1.8446744073709551E17</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonNegativeInteger("303884545991464527")) eq 303884545991464527</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonNegativeInteger("303884545991464527")) eq 303884545991464527</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(())</x:label>
      <x:variable name="expr" as="xs:string">fn:number(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number("A String")</x:label>
      <x:variable name="expr" as="xs:string">fn:number("A String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number()</x:label>
      <x:variable name="expr" as="xs:string">fn:number()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:number(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number(true())</x:label>
      <x:variable name="expr" as="xs:string">number(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number(false())</x:label>
      <x:variable name="expr" as="xs:string">number(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number(implicit-timezone())</x:label>
      <x:variable name="expr" as="xs:string">number(implicit-timezone())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number("  -22e0  ")</x:label>
      <x:variable name="expr" as="xs:string">number("  -22e0  ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number("+22e0")</x:label>
      <x:variable name="expr" as="xs:string">number("+22e0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number(xs:untypedAtomic("1000"))</x:label>
      <x:variable name="expr" as="xs:string">number(xs:untypedAtomic("1000"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">number(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">fn:number(1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(fn:number("results in NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(fn:number("results in NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number("results in NaN") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number("results in NaN") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number(1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(1.1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number(1.1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:float(3)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:float(3)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:double(3)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:double(3)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number("NaN") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number("NaN") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(()) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:number(()) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(fn:number(()))</x:label>
      <x:variable name="expr" as="xs:string">not(fn:number(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(number(xs:anyURI("example.com/"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(number(xs:anyURI("example.com/"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(number(xs:anyURI("1"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(number(xs:anyURI("1"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(number("1")) eq "1"</x:label>
      <x:variable name="expr" as="xs:string">string(number("1")) eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(number(xs:gYear("2005"))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(number(xs:gYear("2005"))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3)[number()], (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3)[number()], (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1)[number()] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(1)[number()] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/one-or-more.xml">
    <x:scenario>
      <x:label>fn:one-or-more(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:one-or-more(())</x:label>
      <x:variable name="expr" as="xs:string">fn:one-or-more(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">one-or-more(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more()</x:label>
      <x:variable name="expr" as="xs:string">one-or-more()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more("one")</x:label>
      <x:variable name="expr" as="xs:string">one-or-more("one")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(one-or-more(("one", 2)))</x:label>
      <x:variable name="expr" as="xs:string">exists(one-or-more(("one", 2)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(one-or-more( "one" )) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(one-or-more( "one" )) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(one-or-more( (1, 2, 3, "four") )) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(one-or-more( (1, 2, 3, "four") )) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more(error())</x:label>
      <x:variable name="expr" as="xs:string">one-or-more(error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more( () )</x:label>
      <x:variable name="expr" as="xs:string">one-or-more( () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(one-or-more(string-to-codepoints("foo")))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(one-or-more(string-to-codepoints("foo")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(one-or-more(month-from-date(current-date()) to 0))</x:label>
      <x:variable name="expr" as="xs:string">boolean(one-or-more(month-from-date(current-date()) to 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(one-or-more((1 to 10)[. mod 2 = 0]))</x:label>
      <x:variable name="expr" as="xs:string">boolean(one-or-more((1 to 10)[. mod 2 = 0]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>one-or-more((1 to 10)[. div 2 = 0])</x:label>
      <x:variable name="expr" as="xs:string">one-or-more((1 to 10)[. div 2 = 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(one-or-more(for $x in (1 to 10)[. div 2 = 1] return true()))</x:label>
      <x:variable name="expr" as="xs:string">boolean(one-or-more(for $x in (1 to 10)[. div 2 = 1] return true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/outermost.xml">
    <x:scenario>
      <x:label>fn:outermost( //*/namespace::* )</x:label>
      <x:variable name="expr" as="xs:string">fn:outermost( //*/namespace::* )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:outermost( //*/namespace::* )[position() le 2] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:outermost( //*/namespace::* )[position() le 2] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:outermost( //*/namespace::* )[position() = (7 to 9)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:outermost( //*/namespace::* )[position() = (7 to 9)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:outermost( //*/namespace::* )[position() = (16 to 19)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:outermost( //*/namespace::* )[position() = (16 to 19)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:outermost( //*/namespace::* )[position() = (66 to 69)] ! local-name()</x:label>
      <x:variable name="expr" as="xs:string">fn:outermost( //*/namespace::* )[position() = (66 to 69)] ! local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal( fn:outermost( //*/namespace::* ),
                           //*/namespace::* )</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal( fn:outermost( //*/namespace::* ),
                           //*/namespace::* )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/path/pathdata.xml">
    <x:scenario>
      <x:label>fn:abs(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:decimal("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:decimal("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("-NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("-NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:string("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:string("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:string("hello"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:string("hello"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean(fn:true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean(fn:true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:boolean(fn:false()))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:boolean(fn:false()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:date("2002-10-09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:date("2002-10-09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:time("13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:time("13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:anyURI("www.examples.org"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:anyURI("www.examples.org"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs()</x:label>
      <x:variable name="expr" as="xs:string">abs()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">abs(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(abs(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(abs(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(10.5) eq 10.5</x:label>
      <x:variable name="expr" as="xs:string">abs(10.5) eq 10.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(-10.5) eq 10.5</x:label>
      <x:variable name="expr" as="xs:string">abs(-10.5) eq 10.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs("a string")</x:label>
      <x:variable name="expr" as="xs:string">abs("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:byte(-4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:byte(-4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedInt(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedInt(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedByte(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedByte(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger(4))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger(4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonPositiveInteger(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonPositiveInteger(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:negativeInteger(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:negativeInteger(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:long(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:long(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:int(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:int(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:short(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:short(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:byte(-4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:byte(-4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:nonNegativeInteger(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:nonNegativeInteger(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedLong(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedLong(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedInt(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedInt(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedShort(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedShort(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:unsignedByte(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:unsignedByte(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:positiveInteger(4)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:positiveInteger(4)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1.1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1.1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1e1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1e1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1.1) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1.1) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(1e1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(1e1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float(1)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float(1)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:integer(1)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:integer(1)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedShort(.)) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedShort(.)) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedLong(.)) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedLong(.)) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedInt(.)) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedInt(.)) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:unsignedByte(.)) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:unsignedByte(.)) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:positiveInteger(.)) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:positiveInteger(.)) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:nonPositiveInteger(.)) instance of
         xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:nonPositiveInteger(.)) instance of
         xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:nonNegativeInteger(.)) instance of
         xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:nonNegativeInteger(.)) instance of
         xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:negativeInteger(.)) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:negativeInteger(.)) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:long(.)) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:long(.)) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:int(.)) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:int(.)) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:short(.)) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:short(.)) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>abs(xs:byte(.)) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">abs(xs:byte(.)) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:abs(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">fn:abs(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((abs($x)) instance of xs:integer) then "integer" 
           else if ((abs($x)) instance of xs:decimal) then "decimal" 
           else if ((abs($x)) instance of xs:float) then "float"
           else if ((abs($x)) instance of xs:double) then "double" else error(), " ")</x:label>
      <x:variable name="expr" as="xs:string">string-join(for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) return 
           if ((abs($x)) instance of xs:integer) then "integer" 
           else if ((abs($x)) instance of xs:decimal) then "decimal" 
           else if ((abs($x)) instance of xs:float) then "float"
           else if ((abs($x)) instance of xs:double) then "double" else error(), " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/path.xml">
    <x:scenario>
      <x:label>fn:path((//namespace::xml)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:path((//namespace::xml)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:path((//namespace::xml)[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:path((//namespace::xml)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:path((//namespace::*[name()=''])[1])</x:label>
      <x:variable name="expr" as="xs:string">fn:path((//namespace::*[name()=''])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/position.xml">
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 1]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 1]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>position()</x:label>
      <x:variable name="expr" as="xs:string">position()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 13]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 13]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = last()]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = last()]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[last() = position()]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[last() = position()]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in 1 return for $h in (/works) return $h/employee[position() = $var]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $var in 1 return for $h in (/works) return $h/employee[position() = $var]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in "1" return for $h in (/works) return $h/employee[position() = xs:integer($var)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $var in "1" return for $h in (/works) return $h/employee[position() = xs:integer($var)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() = position()]/day/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() = position()]/day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[@name][position() = 1]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[@name][position() = 1]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 1][@name]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 1][@name]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]/overtime) return $h/day[not(position() = 1)]/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]/overtime) return $h/day[not(position() = 1)]/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]/overtime) return $h/*[position() = position()]/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]/overtime) return $h/*[position() = position()]/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (2 + 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (2 + 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (5 - 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (5 - 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (3 * 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (3 * 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (6 div 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (6 div 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = (6 idiv 2)]/string(@name)</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = (6 idiv 2)]/string(@name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return ($h/overtime[position() and fn:true()]/*/string())</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return ($h/overtime[position() and fn:true()]/*/string())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return ($h/overtime[position() and fn:false()])</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return ($h/overtime[position() and fn:false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() or fn:true()]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() or fn:true()]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]) return $h/overtime[position() or fn:false()]/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]) return $h/overtime[position() or fn:false()]/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[position() = 12]/overtime/*/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[position() = 12]/overtime/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>position()</x:label>
      <x:variable name="expr" as="xs:string">position()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works/employee/*/position()</x:label>
      <x:variable name="expr" as="xs:string">/works/employee/*/position()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>position(1)</x:label>
      <x:variable name="expr" as="xs:string">position(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[if(1) then 1 else position()]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[if(1) then 1 else position()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() = 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() = 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 = position()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 = position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() eq 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() eq 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 eq position()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [0 eq position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() != 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() != 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() ne 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() ne 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 != position()], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 != position()], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 ne position()], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [0 ne position()], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() lt 1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() lt 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() &lt; 1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() &lt; 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() le 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() le 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() &lt;= 0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time(), current-date(), 6, 7, 8) [position() &lt;= 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt; 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt; 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt; 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt; 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() gt 0], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() gt 0], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt;= 1], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() &gt;= 1], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() ge 1], (1, 2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal( (1, 2, 3, remove((current-time(), 4), 1)) [position() ge 1], (1, 2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (0, 1, current-time(), 4)[position() = 2] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1 eq (0, 1, current-time(), 4)[position() = 2] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (0, 1, current-time(), 4)[position() eq 2] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1 eq (0, 1, current-time(), 4)[position() eq 2] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (0, 1, current-time(), 4)[2 eq position()] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1 eq (0, 1, current-time(), 4)[2 eq position()] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (0, 1, current-time(), 4)[2 = position()] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1 eq (0, 1, current-time(), 4)[2 = position()] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 4), (1, 2, current-time(), 4)[position() != 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 4), (1, 2, current-time(), 4)[position() != 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 4), (1, 2, current-time(), 4)[position() ne 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 4), (1, 2, current-time(), 4)[position() ne 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 4), (1, 2, current-time(), 4)[3 ne position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 4), (1, 2, current-time(), 4)[3 ne position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 4), (1, 2, current-time(), 4)[3 != position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 4), (1, 2, current-time(), 4)[3 != position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() lt 4])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() lt 4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() &lt; 4])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() &lt; 4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[4 gt position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[4 gt position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[4 &gt; position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[4 &gt; position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() le 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() le 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() &lt;= 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[position() &lt;= 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[3 ge position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[3 ge position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3, current-time())[3 &gt;= position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3, current-time())[3 &gt;= position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[3 lt position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[3 lt position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[3 &lt; position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[3 &lt; position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() gt 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() gt 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() &gt; 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() &gt; 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[4 le position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[4 le position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[4 &lt;= position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[4 &lt;= position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() ge 4])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() ge 4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() &gt;= 4])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((4, 5), (1, 2, current-time(), 4, 5)[position() &gt;= 4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/prefix-from-QName.xml">
    <x:scenario>
      <x:label>fn:prefix-from-QName("arg1","arg2")</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName("arg1","arg2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(xs:integer(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:integer(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:prefix-from-QName(xs:QName("name")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:prefix-from-QName(xs:QName("name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string(fn:prefix-from-QName(xs:QName("name"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string(fn:prefix-from-QName(xs:QName("name"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:prefix-from-QName(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:prefix-from-QName(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(xs:QName("foo:bar"))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:QName("foo:bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(fn:prefix-from-QName(xs:QName("foo:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(fn:prefix-from-QName(xs:QName("foo:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:lower-case(fn:prefix-from-QName(xs:QName("FOO:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(fn:prefix-from-QName(xs:QName("FOO:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:prefix-from-QName(xs:QName("foo:bar")),":bar")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:prefix-from-QName(xs:QName("foo:bar")),":bar")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before(fn:prefix-from-QName(xs:QName("foo:bar")),"oo")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(fn:prefix-from-QName(xs:QName("foo:bar")),"oo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:prefix-from-QName(xs:QName("foo:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:prefix-from-QName(xs:QName("foo:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring(fn:prefix-from-QName(xs:QName("foo:bar")),2)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring(fn:prefix-from-QName(xs:QName("foo:bar")),2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join((fn:prefix-from-QName(xs:QName("foo:bar")),":bar"),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join((fn:prefix-from-QName(xs:QName("foo:bar")),":bar"),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(xs:QName("foo:bar"))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:QName("foo:bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(node-name((//@*)[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name((//@*)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:prefix-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix-from-QName(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(prefix-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(prefix-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix-from-QName( QName("example.com/", "pre:lname")) eq "pre"</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName( QName("example.com/", "pre:lname")) eq "pre"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/QName.xml">
    <x:scenario>
      <x:label>fn:QName("", "ht:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("", "ht:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName((), "ht:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName((), "ht:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "1person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "1person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "@person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "@person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "-person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "-person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "&lt;person&gt;")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "&lt;person&gt;")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", ":person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", ":person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person:")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", xs:integer("100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", xs:integer("100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName( xs:integer("100"), "person" )</x:label>
      <x:variable name="expr" as="xs:string">fn:QName( xs:integer("100"), "person" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName(20)</x:label>
      <x:variable name="expr" as="xs:string">xs:QName(20)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName()</x:label>
      <x:variable name="expr" as="xs:string">QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("http://www.example.com/")</x:label>
      <x:variable name="expr" as="xs:string">QName("http://www.example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("http://www.example.com/", "ncname", "error")</x:label>
      <x:variable name="expr" as="xs:string">QName("http://www.example.com/", "ncname", "error")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("http://www.w3.org/2005/xpath-functions", "prefix:local") eq xs:QName("fn:local")</x:label>
      <x:variable name="expr" as="xs:string">QName("http://www.w3.org/2005/xpath-functions", "prefix:local") eq xs:QName("fn:local")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("http://www.example.com/", "1asd:error")</x:label>
      <x:variable name="expr" as="xs:string">QName("http://www.example.com/", "1asd:error")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("", "error:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("", "error:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName((), "error:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName((), "error:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("my:qName", "http://example.com/MyErrorNS")</x:label>
      <x:variable name="expr" as="xs:string">QName("my:qName", "http://example.com/MyErrorNS")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("", "local") eq xs:QName("local")</x:label>
      <x:variable name="expr" as="xs:string">QName("", "local") eq xs:QName("local")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName((), "local") eq xs:QName("local")</x:label>
      <x:variable name="expr" as="xs:string">QName((), "local") eq xs:QName("local")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName((), ())</x:label>
      <x:variable name="expr" as="xs:string">fn:QName((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName('', ' ')</x:label>
      <x:variable name="expr" as="xs:string">fn:QName('', ' ')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/remove.xml">
    <x:scenario>
      <x:label>fn:remove ( ("a", "b", "c"), 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove ( ("a", "b", "c"), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove ( ("a", "b", "c"), 0)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove ( ("a", "b", "c"), 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove ( ("a", "b", "c", true()), 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove ( ("a", "b", "c", true()), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove ( (xs:string("xyz"), (), (), "a" , "b"), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove ( (xs:string("xyz"), (), (), "a" , "b"), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 10)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), -20)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:anyURI("www.example.com"), "a", (""), "b"), -20)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:integer("100"), xs:string("abc")), 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:integer("100"), xs:string("abc")), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com")),3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:decimal("1.01"), xs:integer("12"), xs:anyURI("www.example.com")),3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:float("1.01"), xs:string("a")), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:float("1.01"), xs:string("a")), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:float("NaN"), 100, (), 2), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:float("NaN"), 100, (), 2), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:float("-INF"), xs:decimal("2.34"), "abc"), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:float("-INF"), xs:decimal("2.34"), "abc"), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:double("1.34"), xs:float("INF"), true()), 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:double("1.34"), xs:float("INF"), true()), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:double("INF"), 2, 3), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:double("INF"), 2, 3), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:double("NaN"), "a", "b"), 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:double("NaN"), "a", "b"), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:boolean("1"), xs:double("-INF"), "s"), 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:boolean("1"), xs:double("-INF"), "s"), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:boolean("0")), 2 )</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:boolean("0")), 2 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a"),3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:boolean("true"), xs:date("1993-03-31"), 4, "a"),3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ,3)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:dateTime("1972-12-31T00:00:00"), xs:boolean("false"), (), (" ")) ,3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:remove( (xs:time("12:30:00"), xs:decimal("2.000003"), 2), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:remove( (xs:time("12:30:00"), xs:decimal("2.000003"), 2), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove()</x:label>
      <x:variable name="expr" as="xs:string">remove()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1, 2, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">remove(1, 2, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove((1, 2, 3), 0)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(remove((1, 2, 3), 0)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove((1, 2, 3), -4)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(remove((1, 2, 3), -4)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(remove((), 4))</x:label>
      <x:variable name="expr" as="xs:string">empty(remove((), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(("one", 2, 3), 1) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">remove(("one", 2, 3), 1) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1, "two", 3), 2) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">remove((1, "two", 3), 2) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1, 2, "three"), 3) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">remove((1, 2, "three"), 3) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove(("one", 2, 3), 1)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(remove(("one", 2, 3), 1)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove((1, "two", 3), 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(remove((1, "two", 3), 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove((1, 2, "three"), 3)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(remove((1, 2, "three"), 3)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((3.1, "four"), 1)</x:label>
      <x:variable name="expr" as="xs:string">remove((3.1, "four"), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(error(), 1)</x:label>
      <x:variable name="expr" as="xs:string">remove(error(), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((5, 1e0), 2) eq 5</x:label>
      <x:variable name="expr" as="xs:string">remove((5, 1e0), 2) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 eq remove((5, 1e0), 2)</x:label>
      <x:variable name="expr" as="xs:string">5 eq remove((5, 1e0), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2), (1, 2)[remove((true(), "a string"), 2)]) eq 0</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2), (1, 2)[remove((true(), "a string"), 2)]) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((4, xs:untypedAtomic("4")), 1) eq 4</x:label>
      <x:variable name="expr" as="xs:string">remove((4, xs:untypedAtomic("4")), 1) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 eq remove((4, xs:untypedAtomic("1")), 1)</x:label>
      <x:variable name="expr" as="xs:string">4 eq remove((4, xs:untypedAtomic("1")), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove(current-time(), 1)) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(remove(current-time(), 1)) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(remove(current-time(), 1))</x:label>
      <x:variable name="expr" as="xs:string">empty(remove(current-time(), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1, 2, 3, current-time()), 4)[last()]</x:label>
      <x:variable name="expr" as="xs:string">remove((1, 2, 3, current-time()), 4)[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1, 2, 3, current-time()), 4)[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">remove((1, 2, 3, current-time()), 4)[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1, 2, 3, current-time()), 9)[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">remove((1, 2, 3, current-time()), 9)[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(remove((1, 2, 3, current-time()), 9)[last() - 10])</x:label>
      <x:variable name="expr" as="xs:string">empty(remove((1, 2, 3, current-time()), 9)[last() - 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1 to 10, 1.0)</x:label>
      <x:variable name="expr" as="xs:string">remove(1 to 10, 1.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1 to 10, 1.0e0)</x:label>
      <x:variable name="expr" as="xs:string">remove(1 to 10, 1.0e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1 to 10, "1")</x:label>
      <x:variable name="expr" as="xs:string">remove(1 to 10, "1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1 to 10,exactly-one((1 to 10)[. div 2 = 2]))</x:label>
      <x:variable name="expr" as="xs:string">remove(1 to 10,exactly-one((1 to 10)[. div 2 = 2]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(1 to 10,4)</x:label>
      <x:variable name="expr" as="xs:string">remove(1 to 10,4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((1 to 10)[. mod 2 = 0],4)</x:label>
      <x:variable name="expr" as="xs:string">remove((1 to 10)[. mod 2 = 0],4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove(((1 to 10)[. mod 2 = 0],"blah",(1 to 10)[. mod 2 = 0]),4)</x:label>
      <x:variable name="expr" as="xs:string">remove(((1 to 10)[. mod 2 = 0],"blah",(1 to 10)[. mod 2 = 0]),4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/replace.xml">
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("This is a characte","This is a characte","This is a characte")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("This is a characte","This is a characte","This is a characte")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace(xs:string("This is a characte"),xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:replace(xs:string("This is a characte"),xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "bra", "*", "p")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "bra", "*", "p")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "bra", "\")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "bra", "\")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "bra", "$y")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "bra", "$y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "bra", "*")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "bra", "*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "a.*a", "*")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "a.*a", "*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "a.*?a", "*")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "a.*?a", "*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "a", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "a", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "a(.)", "a$1$1")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "a(.)", "a$1$1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", ".*?", "$1")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", ".*?", "$1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("AAAA", "A+", "b")</x:label>
      <x:variable name="expr" as="xs:string">replace("AAAA", "A+", "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("AAAA", "A+?", "b")</x:label>
      <x:variable name="expr" as="xs:string">replace("AAAA", "A+?", "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("darted", "^(.*?)d(.*)$", "$1c$2")</x:label>
      <x:variable name="expr" as="xs:string">replace("darted", "^(.*?)d(.*)$", "$1c$2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abcd", "(ab)|(a)", "[1=$1][2=$2]")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abcd", "(ab)|(a)", "[1=$1][2=$2]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:replace((), "bra", "*"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:replace((), "bra", "*"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abracadabra", "bra", "*", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abracadabra", "bra", "*", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra?abracadabra", "\?", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra?abracadabra", "\?", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra*abracadabra", "\*", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra*abracadabra", "\*", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra+abracadabra", "\+", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra+abracadabra", "\+", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra{abracadabra", "\{", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra{abracadabra", "\{", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra}abracadabra", "\}", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra}abracadabra", "\}", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra(abracadabra", "\(", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra(abracadabra", "\(", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra)abracadabra", "\)", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra)abracadabra", "\)", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra[abracadabra", "\[", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra[abracadabra", "\[", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra]abracadabra", "\]", "with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra]abracadabra", "\]", "with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra-abracadabra", "\-","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra-abracadabra", "\-","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra.abracadabra", "\.","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra.abracadabra", "\.","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra|abracadabra", "\|","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra|abracadabra", "\|","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra\abracadabra", "\\","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra\abracadabra", "\\","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra	abracadabra", "\t","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra	abracadabra", "\t","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra
abracadabra", "\n","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra
abracadabra", "\n","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabraabracadabra", "aa{1}","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabraabracadabra", "aa{1}","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabraabracadabraabracadabra", "aa{1,}","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabraabracadabraabracadabra", "aa{1,}","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabraabracadabraabracadabra", "aa{1,2}","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabraabracadabraabracadabra", "aa{1,2}","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra^abracadabra", "\^","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra^abracadabra", "\^","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "^a","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "^a","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "ww","with")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "ww","with")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "a", "\$")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "a", "\$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "(a)", "\$$1")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "(a)", "\$$1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "a", "\\")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "a", "\\")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "|$1$15|", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "|$1$15|", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "$1520", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "$1520", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "((((( ((((( (((((a)(b))))) ))))) )))))", "($14.$15.$16.$17)", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "((((( ((((( (((((a)(b))))) ))))) )))))", "($14.$15.$16.$17)", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 'Jacob Jones')</x:label>
      <x:variable name="expr" as="xs:string">fn:replace(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 'Jacob Jones')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 'Jacob Jones', 's')</x:label>
      <x:variable name="expr" as="xs:string">fn:replace(concat('Mary', codepoints-to-string(13), 'Jones'), 'Mary.Jones', 'Jacob Jones', 's')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("Now, let's SEND OUT for QUICHE!!", "[A-Z][A-Z]+", "$0$0")</x:label>
      <x:variable name="expr" as="xs:string">replace("Now, let's SEND OUT for QUICHE!!", "[A-Z][A-Z]+", "$0$0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("12-34", "^\d+(-(\d+))?$", "$2")</x:label>
      <x:variable name="expr" as="xs:string">replace("12-34", "^\d+(-(\d+))?$", "$2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('abc', '^.+?(b+)?$', '$1')</x:label>
      <x:variable name="expr" as="xs:string">replace('abc', '^.+?(b+)?$', '$1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('abcd', '^a(.).$|^a...$', '$1')</x:label>
      <x:variable name="expr" as="xs:string">replace('abcd', '^a(.).$|^a...$', '$1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "$1$1", "x")</x:label>
      <x:variable name="expr" as="xs:string">fn:replace("abracadabra", "((((( ((((( (((((a))))) ))))) )))))", "$1$1", "x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('abcdefghijk', '(a)|(b)|(c)|(d)|(e)|(f)|(g)|(h)|(i)|(j)', '$1')</x:label>
      <x:variable name="expr" as="xs:string">replace('abcdefghijk', '(a)|(b)|(c)|(d)|(e)|(f)|(g)|(h)|(i)|(j)', '$1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('10%', '^\d*\.?\d+', '')</x:label>
      <x:variable name="expr" as="xs:string">replace('10%', '^\d*\.?\d+', '')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('987654321A', '^(9)(8)(7)(6)(5)(4)(3)(2)(1)((A*?)|(.+))$', '$9$11$12')</x:label>
      <x:variable name="expr" as="xs:string">replace('987654321A', '^(9)(8)(7)(6)(5)(4)(3)(2)(1)((A*?)|(.+))$', '$9$11$12')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "pattern", "replacement", " ")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "pattern", "replacement", " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", (), "replacement")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", (), "replacement")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "pattern", ())</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "pattern", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "pattern", "replacement", "X")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "pattern", "replacement", "X")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "pattern", "replacement", "", ())</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "pattern", "replacement", "", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "in", "thisIsInvalid\")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "in", "thisIsInvalid\")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "(input)", "thisIsInvalid$")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "(input)", "thisIsInvalid$")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "in", "thisIsInvalid\ ")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "in", "thisIsInvalid\ ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("input", "in", "thisIsInvalid$ ")</x:label>
      <x:variable name="expr" as="xs:string">replace("input", "in", "thisIsInvalid$ ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("a a a ", "(a )", "replacment: \1")</x:label>
      <x:variable name="expr" as="xs:string">replace("a a a ", "(a )", "replacment: \1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("a a a ", "(a )", "replacment: \1")</x:label>
      <x:variable name="expr" as="xs:string">replace("a a a ", "(a )", "replacment: \1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abcd", "(a)\2(b)", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abcd", "(a)\2(b)", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abcd", "(asd)[\1]", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abcd", "(asd)[\1]", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abcd", "(asd)[asd\1]", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abcd", "(asd)[asd\1]", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abcd", "(asd)[asd\0]", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abcd", "(asd)[asd\0]", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abcd", "1[asd\0]", "")</x:label>
      <x:variable name="expr" as="xs:string">replace("abcd", "1[asd\0]", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(replace(if(exists((1 to 10)[. mod 2 = 0])) then "blah" else (),"a","e","m"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(replace(if(exists((1 to 10)[. mod 2 = 0])) then "blah" else (),"a","e","m"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("a","","b")</x:label>
      <x:variable name="expr" as="xs:string">replace("a","","b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c")</x:label>
      <x:variable name="expr" as="xs:string">replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c","m")</x:label>
      <x:variable name="expr" as="xs:string">replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c","m")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c","m")</x:label>
      <x:variable name="expr" as="xs:string">replace(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),","),"","c","m")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/resolve-QName.xml">
    <x:scenario>
      <x:label>namespace-uri-from-QName(resolve-QName("dt:integer", (//*:Close)[1]))</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(resolve-QName("dt:integer", (//*:Close)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName(resolve-QName("xml:space", (//*:Close)[1]))</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(resolve-QName("xml:space", (//*:Close)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName(resolve-QName("artist", (//*:artist)[1]))</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(resolve-QName("artist", (//*:artist)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName(resolve-QName("artist", (//*:Close)[1]))</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(resolve-QName("artist", (//*:Close)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-QName()</x:label>
      <x:variable name="expr" as="xs:string">resolve-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-QName("wrongparam")</x:label>
      <x:variable name="expr" as="xs:string">resolve-QName("wrongparam")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-QName("wrongparam", "takes a node", "wrong")</x:label>
      <x:variable name="expr" as="xs:string">resolve-QName("wrongparam", "takes a node", "wrong")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(resolve-QName((), "a string"))</x:label>
      <x:variable name="expr" as="xs:string">empty(resolve-QName((), "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/resolve-uri.xml">
    <x:scenario>
      <x:label>fn:count(fn:resolve-uri((),"BaseValue"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:resolve-uri((),"BaseValue"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:resolve-uri(":","http://www.example.com/")</x:label>
      <x:variable name="expr" as="xs:string">fn:resolve-uri(":","http://www.example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:resolve-uri("examples","http:%%")</x:label>
      <x:variable name="expr" as="xs:string">fn:resolve-uri("examples","http:%%")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("http://www.examples.com",""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("http://www.examples.com",""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples","http://www.examples.com/"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples","http://www.examples.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",xs:string("http://www.examples.com/")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",xs:string("http://www.examples.com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:string("examples"),fn:string("http://www.examples.com/")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:string("examples"),fn:string("http://www.examples.com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:upper-case("examples"),fn:upper-case("http://www.examples.com/")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:upper-case("examples"),fn:upper-case("http://www.examples.com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:lower-case("EXAMPLES"),fn:lower-case("HTTP://www.examples.com/")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:lower-case("EXAMPLES"),fn:lower-case("HTTP://www.examples.com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",fn:substring("1234http://www.examples.com/",5)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",fn:substring("1234http://www.examples.com/",5)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",fn:string-join(('http://www.example','.com/'),'')))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",fn:string-join(('http://www.example','.com/'),'')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",fn:concat("http://www.example",".com/")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",fn:concat("http://www.example",".com/")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",fn:substring-before("http://www.example.com/123","123")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",fn:substring-before("http://www.example.com/123","123")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("examples",fn:substring-after("123http://www.example.com/","123")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("examples",fn:substring-after("123http://www.example.com/","123")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:string("http://www.examples.com/"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:string("http://www.examples.com/"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:upper-case("http://www.examples.com"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:upper-case("http://www.examples.com"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:lower-case("http://www.examples.com"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:lower-case("http://www.examples.com"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:substring("123http://www.examples.com",4),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:substring("123http://www.examples.com",4),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:string-join(("http://www.examples",".com"),''),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:string-join(("http://www.examples",".com"),''),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:concat("http://www.examples",".com"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:concat("http://www.examples",".com"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:substring-before("http://www.example.com123","123"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:substring-before("http://www.example.com123","123"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri(fn:substring-after("123http://www.example.com","123"),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri(fn:substring-after("123http://www.example.com","123"),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:resolve-uri("a.html","b.html"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:resolve-uri("a.html","b.html"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(resolve-uri("http://www.example.com/a.html","b.html"))</x:label>
      <x:variable name="expr" as="xs:string">string(resolve-uri("http://www.example.com/a.html","b.html"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("b.html", "http://www.example.com/a.html#fragment")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("b.html", "http://www.example.com/a.html#fragment")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(resolve-uri("b.html", "http://www.example.com/a.html?foo=bar"))</x:label>
      <x:variable name="expr" as="xs:string">string(resolve-uri("b.html", "http://www.example.com/a.html?foo=bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(resolve-uri("urn:isbn:01234567890X", "http://www.example.com/"))</x:label>
      <x:variable name="expr" as="xs:string">string(resolve-uri("urn:isbn:01234567890X", "http://www.example.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("%C3%A0.html", "http://www.example.com/%C3%A7.html")
         = "http://www.example.com/%C3%A0.html"</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("%C3%A0.html", "http://www.example.com/%C3%A7.html")
         = "http://www.example.com/%C3%A0.html"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("this doc.html", "http://www.example.com/that doc.html")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("this doc.html", "http://www.example.com/that doc.html")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri()</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("http://www.example.com/", "relative/uri.ext", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("http://www.example.com/", "relative/uri.ext", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("relative/uri.ext", "http://www.example.com/") eq xs:anyURI("http://www.example.com/relative/uri.ext")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("relative/uri.ext", "http://www.example.com/") eq xs:anyURI("http://www.example.com/relative/uri.ext")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("", "http://www.example.com/") eq xs:anyURI("http://www.example.com/")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("", "http://www.example.com/") eq xs:anyURI("http://www.example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(resolve-uri((), "http://www.example.com/"))</x:label>
      <x:variable name="expr" as="xs:string">empty(resolve-uri((), "http://www.example.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>resolve-uri("http://www.example.com/absolute", "http://www.example.com/") eq xs:anyURI("http://www.example.com/absolute")</x:label>
      <x:variable name="expr" as="xs:string">resolve-uri("http://www.example.com/absolute", "http://www.example.com/") eq xs:anyURI("http://www.example.com/absolute")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(resolve-uri(string-join(for $x in 1 to 10 return "blah","z"),"http://localhost/"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(resolve-uri(string-join(for $x in 1 to 10 return "blah","z"),"http://localhost/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/reverse.xml">
    <x:scenario>
      <x:label>fn:reverse((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse(1 to 10)</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse(1 to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse(())</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(reverse(((//*:Open)[1])/ancestor-or-self::*/local-name()), '~')</x:label>
      <x:variable name="expr" as="xs:string">string-join(reverse(((//*:Open)[1])/ancestor-or-self::*/local-name()), '~')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse()</x:label>
      <x:variable name="expr" as="xs:string">reverse()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">reverse(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty(reverse((1))))</x:label>
      <x:variable name="expr" as="xs:string">not(empty(reverse((1))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(reverse(()))</x:label>
      <x:variable name="expr" as="xs:string">not(reverse(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(exists(reverse(())))</x:label>
      <x:variable name="expr" as="xs:string">not(exists(reverse(())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(reverse((1)))</x:label>
      <x:variable name="expr" as="xs:string">exists(reverse((1)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, current-time())[1])</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, current-time())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(reverse((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">exists(reverse((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">count(reverse((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">count(reverse((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((3, 2, 1), reverse(1 to 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((3, 2, 1), reverse(1 to 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((3, 2, 1), reverse((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((3, 2, 1), reverse((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1), reverse(((), (), 1, 2, (3, 4), (5), (6, (7, 8), 9), 10, (), 11, ())))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1), reverse(((), (), 1, 2, (3, 4), (5), (6, (7, 8), 9), 10, (), 11, ())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(error())</x:label>
      <x:variable name="expr" as="xs:string">reverse(error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, 2, 3))[last()] eq 1</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, 2, 3))[last()] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, 2, 3))[last() - 2]</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, 2, 3))[last() - 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, 2, 3))[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, 2, 3))[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((3, 2, 1), reverse((1, 2, 3))[true()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((3, 2, 1), reverse((1, 2, 3))[true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, 2, current-time(), 3))[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, 2, current-time(), 3))[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse((1, 2, current-time(), 3))[last() - 0]</x:label>
      <x:variable name="expr" as="xs:string">reverse((1, 2, current-time(), 3))[last() - 0]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse()</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/root.xml">
    <x:scenario>
      <x:label>fn:root()</x:label>
      <x:variable name="expr" as="xs:string">fn:root()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 100)[fn:root()]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[fn:root()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = (1, fn:root(1[. = 1]))</x:label>
      <x:variable name="expr" as="xs:string">1 = (1, fn:root(1[. = 1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(1 = fn:root(1[. = 1]))</x:label>
      <x:variable name="expr" as="xs:string">exists(1 = fn:root(1[. = 1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:root(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:root(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:root(fn:exactly-one(/langs[1]/para[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:root(fn:exactly-one(/langs[1]/para[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:root(/langs[1]/para[1]/@xml:lang)</x:label>
      <x:variable name="expr" as="xs:string">fn:root(/langs[1]/para[1]/@xml:lang)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:root(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:root(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>Root(2)</x:label>
      <x:variable name="expr" as="xs:string">Root(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>root(2)</x:label>
      <x:variable name="expr" as="xs:string">root(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(root(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(root(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/round-half-to-even.xml">
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even()</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1.1, 3, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1.1, 3, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(round-half-to-even(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(round-half-to-even(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(round-half-to-even((), 3))</x:label>
      <x:variable name="expr" as="xs:string">empty(round-half-to-even((), 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even("a string")</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1.0) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1.0) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(0.5) eq 0</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(0.5) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1.5) eq 2</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1.5) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(2.5) eq 2</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(2.5) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(3.567812E+3, 2) eq 3567.81E0</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(3.567812E+3, 2) eq 3567.81E0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4.7564E-3, 2) eq 0.0E0</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4.7564E-3, 2) eq 0.0E0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(35612.25, -2) eq 35600</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(35612.25, -2) eq 35600</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:double("-0"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:double("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:unsignedShort("0")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:unsignedShort("0")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:unsignedLong("0")) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:unsignedLong("0")) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:unsignedInt("0")) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:unsignedInt("0")) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:unsignedByte("0")) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:unsignedByte("0")) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:positiveInteger("1")) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:positiveInteger("1")) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:nonPositiveInteger("0")) instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:nonPositiveInteger("0")) instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:nonNegativeInteger("0")) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:nonNegativeInteger("0")) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:negativeInteger("-1")) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:negativeInteger("-1")) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:long("0")) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:long("0")) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:int("0")) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:int("0")) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:short("0")) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:short("0")) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:byte("0")) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:byte("0")) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round-half-to-even($x)) instance of xs:integer) then "integer" 
           else if ((round-half-to-even($x)) instance of xs:decimal) then "decimal" 
           else if ((round-half-to-even($x)) instance of xs:float) then "float"
           else if ((round-half-to-even($x)) instance of xs:double) then "double" 
           else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round-half-to-even($x)) instance of xs:integer) then "integer" 
           else if ((round-half-to-even($x)) instance of xs:decimal) then "decimal" 
           else if ((round-half-to-even($x)) instance of xs:float) then "float"
           else if ((round-half-to-even($x)) instance of xs:double) then "double" 
           else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round-half-to-even($x,1)) instance of xs:integer) then "integer" 
           else if ((round-half-to-even($x,1)) instance of xs:decimal) then "decimal" 
           else if ((round-half-to-even($x,1)) instance of xs:float) then "float"
           else if ((round-half-to-even($x,1)) instance of xs:double) then "double" 
           else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round-half-to-even($x,1)) instance of xs:integer) then "integer" 
           else if ((round-half-to-even($x,1)) instance of xs:decimal) then "decimal" 
           else if ((round-half-to-even($x,1)) instance of xs:float) then "float"
           else if ((round-half-to-even($x,1)) instance of xs:double) then "double" 
           else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1.234567, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1.234567, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(1.000005e0, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(1.000005e0, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('1.000005e0'), 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('1.000005e0'), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561.234567, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561.234567, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561.000005e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561.000005e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('4561.000005e0'), -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('4561.000005e0'), -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561234567, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561234567, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561.234567, 0)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561.234567, 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561.000005e0, 0)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561.000005e0, 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('4561.000005e0'), 0)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('4561.000005e0'), 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(4561234567, 0)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(4561234567, 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('0.05'), 1)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('0.05'), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('-0.05'), 1)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('-0.05'), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float('3.75'), 1)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float('3.75'), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(123.355, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(123.355, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(123.365, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(123.365, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(123.375, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(123.375, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(123.385, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(123.385, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-123.355, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-123.355, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-123.365, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-123.365, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-123.375, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-123.375, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-123.385, 2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-123.385, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12350.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12350.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12350.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12350.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12450.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12450.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12450.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12450.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12550.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12550.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12550.00, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12550.00, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12350, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12350, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12350, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12350, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12450, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12450, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12450, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12450, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12550, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12550, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12550, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12550, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12350e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12350e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12350e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12350e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12450e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12450e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12450e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12450e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(12550e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(12550e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(-12550e0, -2)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(-12550e0, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(3.567812E+3, 4294967296)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(3.567812E+3, 4294967296)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(12345, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(12345, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(12345, -2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(12345, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:short(12345), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:short(12345), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:short(12345), -2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:short(12345), -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(12345.6, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(12345.6, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(12345.6, -2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(12345.6, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:float(12345.6), 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:float(12345.6), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(xs:float(12345.6), -2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(xs:float(12345.6), -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(123456e-2, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(123456e-2, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(123456e-2, -2)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(123456e-2, -2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(3.567812, 4294967296)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(3.567812, 4294967296)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:round-half-to-even(5, 1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:round-half-to-even(5, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even(123456e-2, "two")</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even(123456e-2, "two")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/round.xml">
    <x:scenario>
      <x:label>fn:round(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round()</x:label>
      <x:variable name="expr" as="xs:string">round()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(round(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(round(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round(1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(1.1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round(1.1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:double(1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round(xs:double(1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:float(1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">round(xs:float(1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(2.4999) eq 2</x:label>
      <x:variable name="expr" as="xs:string">round(2.4999) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(-2.5) eq -2</x:label>
      <x:variable name="expr" as="xs:string">round(-2.5) eq -2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:unsignedShort(.)) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">round(xs:unsignedShort(.)) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:unsignedLong(.)) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">round(xs:unsignedLong(.)) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:unsignedInt(.)) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">round(xs:unsignedInt(.)) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:unsignedByte(.)) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">round(xs:unsignedByte(.)) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:positiveInteger(.)) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">round(xs:positiveInteger(.)) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:nonPositiveInteger(.)) instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">round(xs:nonPositiveInteger(.)) instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:nonNegativeInteger(.)) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">round(xs:nonNegativeInteger(.)) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:negativeInteger(.)) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">round(xs:negativeInteger(.)) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:long(.)) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">round(xs:long(.)) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:int(.)) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">round(xs:int(.)) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:short(.)) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">round(xs:short(.)) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:byte(.)) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">round(xs:byte(.)) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:double("-0"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:double("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round(xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">round(xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.01"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.01"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.01"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.01"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.04"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.04"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.04"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.04"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.04"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.04"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.04"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.04"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.05"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.05"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.05"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.05"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.05"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.05"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.05"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.05"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.06"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.06"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.06"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.06"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.06"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.06"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.06"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.06"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.09"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.09"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.11"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.11"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.11"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.11"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.14"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.14"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.14"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.14"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.14"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.14"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.14"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.14"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.15"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.15"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.15"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.15"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.15"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.15"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.15"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.15"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.16"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.16"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.16"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.16"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.16"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.16"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.16"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.16"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.19"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.19"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.19"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.19"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.19"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.19"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.19"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.19"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.10"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.10"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.10"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.10"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.10"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.10"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.10"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.10"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.41"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.41"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.41"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.41"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.41"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.41"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.41"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.41"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.44"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.44"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.44"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.44"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.44"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.44"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.44"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.44"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.45"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.45"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.45"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.45"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.45"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.45"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.45"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.45"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.46"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.46"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.46"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.46"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.46"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.46"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.46"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.46"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.49"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.49"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.49"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.49"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.49"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.49"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.49"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.49"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.40"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.40"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.40"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.40"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.40"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.40"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.40"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.40"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.51"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.51"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.51"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.51"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.51"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.51"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.51"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.51"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.54"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.54"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.54"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.54"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.54"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.54"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.54"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.54"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.55"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.55"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.55"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.55"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.55"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.55"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.55"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.55"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.56"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.56"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.56"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.56"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.56"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.56"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.56"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.56"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.59"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.59"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.59"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.59"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.59"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.59"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.59"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.59"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.50"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.50"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.50"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.50"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.50"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.50"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.50"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.50"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.61"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.61"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.61"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.61"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.61"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.61"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.61"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.61"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.64"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.64"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.64"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.64"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.64"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.64"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.64"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.64"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.65"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.65"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.65"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.65"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.65"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.65"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.65"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.65"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.66"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.66"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.66"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.66"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.66"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.66"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.66"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.66"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.69"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.69"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.69"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.69"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.69"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.69"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.69"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.69"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.60"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.60"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.60"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.60"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.60"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.60"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.60"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.60"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.91"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.91"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.91"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.91"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.91"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.91"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.91"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.91"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.94"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.94"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.94"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.94"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.94"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.94"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.94"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.94"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.95"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.95"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.95"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.95"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.95"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.95"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.95"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.95"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.96"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.96"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.96"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.96"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.96"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.96"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.96"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.96"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.99"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.99"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.99"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.99"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.99"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.99"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.99"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.99"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.90"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.90"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.90"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.90"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.90"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.90"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.90"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.90"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.101"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.101"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.101"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.101"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.101"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.101"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.101"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.101"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.104"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.104"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.104"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.104"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.104"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.104"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.104"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.104"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.105"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.105"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.105"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.105"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.105"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.105"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.105"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.105"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.106"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.106"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.106"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.106"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.106"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.106"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.106"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.106"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.109"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.109"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.109"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.109"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.109"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.109"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.109"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.109"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("0.100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("0.100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("0.100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("0.100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:float("-0.100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:float("-0.100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:double("-0.100"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:double("-0.100"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round($x)) instance of xs:integer) then "integer" 
           else if ((round($x)) instance of xs:decimal) then "decimal" 
           else if ((round($x)) instance of xs:float) then "float"
           else if ((round($x)) instance of xs:double) then "double" 
           else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round($x)) instance of xs:integer) then "integer" 
           else if ((round($x)) instance of xs:decimal) then "decimal" 
           else if ((round($x)) instance of xs:float) then "float"
           else if ((round($x)) instance of xs:double) then "double" 
           else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("12.1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("12.1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("12.7"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("12.7"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("12.5"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("12.5"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("-12.7"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("-12.7"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("-12.1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("-12.1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round(xs:decimal("-12.5"))</x:label>
      <x:variable name="expr" as="xs:string">fn:round(xs:decimal("-12.5"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/seconds-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:30:10Z")), fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:30:15Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:30:10Z")), fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:30:15Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00")) lt fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00")) lt fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00")) le fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00")) le fn:seconds-from-dateTime(xs:dateTime("1999-12-31T21:20:20-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:seconds-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:seconds-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1999-05-31T20:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1999-05-31T20:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1999-05-31T23:59:59-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1999-05-31T23:59:59-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:10Z")) + fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:00:11Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:10Z")) + fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:00:11Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:10Z")) - fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T00:00:10Z")) - fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:02:02Z")) * fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:03:03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:02:02Z")) * fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:03:03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:10:10Z")) div fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:05:05Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:10:10Z")) div fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:05:05Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) idiv fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:05:05Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) idiv fn:seconds-from-dateTime(xs:dateTime("1970-01-01T02:05:05Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) mod fn:seconds-from-dateTime(xs:dateTime("1970-01-01T03:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) mod fn:seconds-from-dateTime(xs:dateTime("1970-01-01T03:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) eq fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) eq fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) ne fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) ne fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) le fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) le fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) ge fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z")) ge fn:seconds-from-dateTime(xs:dateTime("1970-01-01T10:10:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(seconds-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(seconds-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-dateTime(()) instance of xs:decimal?</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-dateTime(()) instance of xs:decimal?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 12.43</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 12.43</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/seconds-from-duration.xml">
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P0DT0H0M0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P15DT11H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P31DT23H59M59S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P3DT10H12.5S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P3DT10H12.5S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("-PT256S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("-PT256S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P20DT20H20M10S")) lt fn:seconds-from-duration(xs:dayTimeDuration("P03DT02H10M20S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P20DT20H20M10S")) lt fn:seconds-from-duration(xs:dayTimeDuration("P03DT02H10M20S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M09S")) le fn:seconds-from-duration(xs:dayTimeDuration("P22DT10H09M31S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M09S")) le fn:seconds-from-duration(xs:dayTimeDuration("P22DT10H09M31S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:seconds-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:seconds-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P01DT01H01M01S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P01DT01H01M01S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:seconds-from-duration(xs:dayTimeDuration("P23DT10H20M30S")),fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M32S"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:seconds-from-duration(xs:dayTimeDuration("P23DT10H20M30S")),fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M32S"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M09S")) + fn:seconds-from-duration(xs:dayTimeDuration("P22DT11H30M21S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M09S")) + fn:seconds-from-duration(xs:dayTimeDuration("P22DT11H30M21S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P30DT10H20M10S")) - fn:seconds-from-duration(xs:dayTimeDuration("P10DT09H10M02S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P30DT10H20M10S")) - fn:seconds-from-duration(xs:dayTimeDuration("P10DT09H10M02S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P20DT09H04M20S")) * fn:seconds-from-duration(xs:dayTimeDuration("P03DT10H10M03S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P20DT09H04M20S")) * fn:seconds-from-duration(xs:dayTimeDuration("P03DT10H10M03S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P20DT10H10M30S")) div fn:seconds-from-duration(xs:dayTimeDuration("P05DT05H02M02S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P20DT10H10M30S")) div fn:seconds-from-duration(xs:dayTimeDuration("P05DT05H02M02S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P25DT10H20M40S")) idiv fn:seconds-from-duration(xs:dayTimeDuration("P05DT02H04M20S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P25DT10H20M40S")) idiv fn:seconds-from-duration(xs:dayTimeDuration("P05DT02H04M20S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P10DT10H20M10S")) mod fn:seconds-from-duration(xs:dayTimeDuration("P03DT03H03M03S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P10DT10H20M10S")) mod fn:seconds-from-duration(xs:dayTimeDuration("P03DT03H03M03S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M20S"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M20S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:seconds-from-duration(xs:dayTimeDuration("P20DT03H20M30S"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:seconds-from-duration(xs:dayTimeDuration("P20DT03H20M30S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P22DT10H10M01S")) eq fn:seconds-from-duration(xs:dayTimeDuration("P22DT09H10M01S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P22DT10H10M01S")) eq fn:seconds-from-duration(xs:dayTimeDuration("P22DT09H10M01S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P23DT08H20M02S")) ne fn:seconds-from-duration(xs:dayTimeDuration("P12DT05H22M03S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P23DT08H20M02S")) ne fn:seconds-from-duration(xs:dayTimeDuration("P12DT05H22M03S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P20DT03H09M20S")) le fn:seconds-from-duration(xs:dayTimeDuration("P21DT15H21M31S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P20DT03H09M20S")) le fn:seconds-from-duration(xs:dayTimeDuration("P21DT15H21M31S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P21DT07H12M59S")) ge fn:seconds-from-duration(xs:dayTimeDuration("P20DT01H13M01S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P21DT07H12M59S")) ge fn:seconds-from-duration(xs:dayTimeDuration("P20DT01H13M01S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:duration("P1Y2M3DT10H30M911S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:duration("P1Y2M3DT10H30M911S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M90S"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:dayTimeDuration("P21DT10H10M90S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(seconds-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(seconds-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration(()) instance of xs:decimal?</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration(()) instance of xs:decimal?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 1.03</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration(xs:dayTimeDuration("P3DT8H2M1.03S")) eq 1.03</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -1.03</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration(xs:dayTimeDuration("-P3DT8H2M1.03S")) eq -1.03</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -2.34</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-duration(xs:duration("-P3Y4M8DT1H23M2.34S")) eq -2.34</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-duration(xs:yearMonthDuration('P1Y'))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-duration(xs:yearMonthDuration('P1Y'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/seconds-from-time.xml">
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("08:03:35Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("08:03:35Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("13:20:10.5"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("13:20:10.5"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("21:23:04Z")) lt fn:seconds-from-time(xs:time("21:24:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("21:23:04Z")) lt fn:seconds-from-time(xs:time("21:24:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("01:23:02Z")) gt fn:seconds-from-time(xs:time("01:23:03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("01:23:02Z")) gt fn:seconds-from-time(xs:time("01:23:03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:seconds-from-time(xs:time("01:10:20Z")), fn:seconds-from-time(xs:time("01:20:30Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:seconds-from-time(xs:time("01:10:20Z")), fn:seconds-from-time(xs:time("01:20:30Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:seconds-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:seconds-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:hours-from-time(xs:time("00:59:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:hours-from-time(xs:time("00:59:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("23:20:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("23:20:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("02:00:00Z")) + fn:seconds-from-time(xs:time("10:00:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("02:00:00Z")) + fn:seconds-from-time(xs:time("10:00:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:10:10Z")) - fn:seconds-from-time(xs:time("09:02:07Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:10:10Z")) - fn:seconds-from-time(xs:time("09:02:07Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("02:02:03Z")) * fn:seconds-from-time(xs:time("10:08:09Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("02:02:03Z")) * fn:seconds-from-time(xs:time("10:08:09Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("22:33:10Z")) div fn:seconds-from-time(xs:time("02:11:02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("22:33:10Z")) div fn:seconds-from-time(xs:time("02:11:02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:12:15Z")) idiv fn:seconds-from-time(xs:time("02:02:03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:12:15Z")) idiv fn:seconds-from-time(xs:time("02:02:03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:10:20Z")) mod fn:seconds-from-time(xs:time("03:03:02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:10:20Z")) mod fn:seconds-from-time(xs:time("03:03:02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:seconds-from-time(xs:time("10:00:01Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:seconds-from-time(xs:time("10:00:01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:seconds-from-time(xs:time("10:10:01Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:seconds-from-time(xs:time("10:10:01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:02:01Z")) eq fn:seconds-from-time(xs:time("10:02:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:02:01Z")) eq fn:seconds-from-time(xs:time("10:02:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:00:01Z")) ne fn:seconds-from-time(xs:time("01:01:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:00:01Z")) ne fn:seconds-from-time(xs:time("01:01:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:00:00Z")) le fn:seconds-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:00:00Z")) le fn:seconds-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:seconds-from-time(xs:time("10:03:01Z")) ge fn:seconds-from-time(xs:time("10:04:02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:seconds-from-time(xs:time("10:03:01Z")) ge fn:seconds-from-time(xs:time("10:04:02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-time()</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-time((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-time((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(seconds-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(seconds-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-time(()) instance of xs:decimal?</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-time(()) instance of xs:decimal?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>seconds-from-time(xs:time("23:11:12.43")) eq 12.43</x:label>
      <x:variable name="expr" as="xs:string">seconds-from-time(xs:time("23:11:12.43")) eq 12.43</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/serialize.xml">
    <x:scenario>
      <x:label>serialize((//namespace::*)[1])</x:label>
      <x:variable name="expr" as="xs:string">serialize((//namespace::*)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/starts-with.xml">
    <x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:starts-with("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:starts-with("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:starts-with("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:starts-with("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with()</x:label>
      <x:variable name="expr" as="xs:string">starts-with()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with(())</x:label>
      <x:variable name="expr" as="xs:string">starts-with(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">starts-with((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("foo", "foo", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with("foo", "foo")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("foo", "foo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with("tattoo", "tat")</x:label>
      <x:variable name="expr" as="xs:string">starts-with("tattoo", "tat")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(starts-with("tattoo", "att"))</x:label>
      <x:variable name="expr" as="xs:string">not(starts-with("tattoo", "att"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with((), ())</x:label>
      <x:variable name="expr" as="xs:string">starts-with((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>starts-with("a string", ())</x:label>
      <x:variable name="expr" as="xs:string">starts-with("a string", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(starts-with("", "a string"))</x:label>
      <x:variable name="expr" as="xs:string">not(starts-with("", "a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:starts-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:starts-with('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/static-base-uri.xml">
    <x:scenario>
      <x:label>fn:static-base-uri("A argument")</x:label>
      <x:variable name="expr" as="xs:string">fn:static-base-uri("A argument")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>static-base-uri()</x:label>
      <x:variable name="expr" as="xs:string">static-base-uri()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>static-base-uri(.)</x:label>
      <x:variable name="expr" as="xs:string">static-base-uri(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>static-base-uri(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">static-base-uri(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(static-base-uri()) then true() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(static-base-uri()) then true() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/string-join.xml">
    <x:scenario>
      <x:label>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(xs:string("This is a characte"),xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(('Now', 'is', 'the', 'time', '...'), ' ')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(('Now', 'is', 'the', 'time', '...'), ' ')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join((), 'separator'))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join((), 'separator'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join((),""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join((),""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join("",""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join("",""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join("","A Character String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join("","A Character String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join((),"A Character String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join((),"A Character String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("AAAAABBBBBCCCCC"),"BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("AAAAABBBBBCCCCC"),"BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("AAAAABBBBB")," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("AAAAABBBBB")," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-join((" "),"AAAAABBBBB"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-join((" "),"AAAAABBBBB"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string-join((),"A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string-join((),"A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string-join(("A"),"B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string-join(("A"),"B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join((xs:string("A")),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join((xs:string("A")),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("A"),xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("A"),xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("A"),"a")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("A"),"a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("a"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("a"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join("string-join","string-join")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join("string-join","string-join")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join(("string-joinstring-join"),"string-join")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join(("string-joinstring-join"),"string-join")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join("12345","1234")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join("12345","1234")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-join("string-join","nioj-gnirts")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join("string-join","nioj-gnirts")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join("a string", "a string", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">string-join("a string", "a string", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(('Now', 'is', 'the', 'time', '...'), ' ') eq "Now is the time ..."</x:label>
      <x:variable name="expr" as="xs:string">string-join(('Now', 'is', 'the', 'time', '...'), ' ') eq "Now is the time ..."</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(("abc", "def"), "") eq "abcdef"</x:label>
      <x:variable name="expr" as="xs:string">string-join(("abc", "def"), "") eq "abcdef"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '') eq "Blow, blow, thou winter wind!"</x:label>
      <x:variable name="expr" as="xs:string">string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), '') eq "Blow, blow, thou winter wind!"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((), 'separator') eq ""</x:label>
      <x:variable name="expr" as="xs:string">string-join((), 'separator') eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join("a string", ())</x:label>
      <x:variable name="expr" as="xs:string">string-join("a string", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/string-length.xml">
    <x:scenario>
      <x:label>fn:string-length(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("Harp not on that string, madam; that is past.")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("Harp not on that string, madam; that is past.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(())</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("12345")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("12345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("12345abcd")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("12345abcd")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("ABCD")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("ABCD")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("abcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("abcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("ABCDEabcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("ABCDEabcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:string("AbcDH"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:string("AbcDH"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("*****")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("*****")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("zzzzz") + fn:string-length("zzzzz")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("zzzzz") + fn:string-length("zzzzz")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string-length("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string-length("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:string-length("abcde"), fn:string-length("fghi"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:string-length("abcde"), fn:string-length("fghi"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string-length("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string-length("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("%$#@!")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("%$#@!")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("string-length")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("string-length")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length("abc") and fn:string-length("abc")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length("abc") and fn:string-length("abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length()</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(.//employee/@name )</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(.//employee/@name )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("𐀂")</x:label>
      <x:variable name="expr" as="xs:string">string-length("𐀂")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/string-length()</x:label>
      <x:variable name="expr" as="xs:string">/*/string-length()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/string-length(.)</x:label>
      <x:variable name="expr" as="xs:string">/*/string-length(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 100)[string-length() = 3]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[string-length() = 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 100)[string-length(.) = 3]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 100)[string-length(.) = 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("a string", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">string-length("a string", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("ebv") eq 3</x:label>
      <x:variable name="expr" as="xs:string">string-length("ebv") eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("ebv") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">string-length("ebv") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length(()) eq 0</x:label>
      <x:variable name="expr" as="xs:string">string-length(()) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("") eq 0</x:label>
      <x:variable name="expr" as="xs:string">string-length("") eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length(()) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">string-length(()) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(false()) then string-length() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(false()) then string-length() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("Harp not on that string, madam; that is past.") eq 45</x:label>
      <x:variable name="expr" as="xs:string">string-length("Harp not on that string, madam; that is past.") eq 45</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/string-to-codepoints.xml">
    <x:scenario>
      <x:label>fn:string-to-codepoints(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints('bßڒき豈')</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints('bßڒき豈')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints("")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(())</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(12)</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints('abc','def')</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints('abc','def')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints('1')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints('a')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints('a')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints('1a')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints('1a')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints('#*^$')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints('#*^$')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints('string-to-codepoints')</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints('string-to-codepoints')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(xs:string("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(xs:string("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:lower-case("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:lower-case("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:string-to-codepoints("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:string-to-codepoints("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg(fn:string-to-codepoints("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg(fn:string-to-codepoints("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty(fn:string-to-codepoints("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty(fn:string-to-codepoints("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:empty(fn:string-to-codepoints(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:empty(fn:string-to-codepoints(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists(fn:string-to-codepoints(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists(fn:string-to-codepoints(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:exists(fn:string-to-codepoints("A String"))</x:label>
      <x:variable name="expr" as="xs:string">fn:exists(fn:string-to-codepoints("A String"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(fn:string-to-codepoints("𐀁𐀂"), (65537, 65538))</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(fn:string-to-codepoints("𐀁𐀂"), (65537, 65538))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints()</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("str", "INVALID")</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("str", "INVALID")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(string-to-codepoints(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(string-to-codepoints(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(string-to-codepoints(""))</x:label>
      <x:variable name="expr" as="xs:string">empty(string-to-codepoints(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(string-to-codepoints("123")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(string-to-codepoints("123")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(string-to-codepoints("")) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(string-to-codepoints("")) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(string-to-codepoints(""))</x:label>
      <x:variable name="expr" as="xs:string">empty(string-to-codepoints(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("e")</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("e")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(string-to-codepoints("ee"), (101, 101))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(string-to-codepoints("ee"), (101, 101))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(string-to-codepoints("eee"), (101, 101, 101))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(string-to-codepoints("eee"), (101, 101, 101))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(for $code in string-to-codepoints("example.com/") return string($code), "") eq "10112097109112108101469911110947"</x:label>
      <x:variable name="expr" as="xs:string">string-join(for $code in string-to-codepoints("example.com/") return string($code), "") eq "10112097109112108101469911110947"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(string-to-codepoints("Thérèse"), (84, 104, 233, 114, 232, 115, 101))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(string-to-codepoints("Thérèse"), (84, 104, 233, 114, 232, 115, 101))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string((87, 36, 56, 87, 102, 96)) eq "W$8Wf`"</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((87, 36, 56, 87, 102, 96)) eq "W$8Wf`"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[last()]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[0 + last()]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[0 + last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[last() - 0]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[last() - 0]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[0 + last()]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[0 + last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[last() - 2]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[last() - 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(string-to-codepoints("Thérèse")[last() - 7])</x:label>
      <x:variable name="expr" as="xs:string">empty(string-to-codepoints("Thérèse")[last() - 7])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("Thérèse")[last() - 6]</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("Thérèse")[last() - 6]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/string.xml">
    <x:scenario>
      <x:label>fn:string(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string()</x:label>
      <x:variable name="expr" as="xs:string">fn:string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(.)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(current-date())</x:label>
      <x:variable name="expr" as="xs:string">string(current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:time("24:00:00"))</x:label>
      <x:variable name="expr" as="xs:string">string(xs:time("24:00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(dateTime(xs:date("2011-06-29"), xs:time("24:00:00")))</x:label>
      <x:variable name="expr" as="xs:string">string(dateTime(xs:date("2011-06-29"), xs:time("24:00:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:duration("P24M"))</x:label>
      <x:variable name="expr" as="xs:string">string(xs:duration("P24M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(QName("http://www.w3.org/", "test:example"))</x:label>
      <x:variable name="expr" as="xs:string">string(QName("http://www.w3.org/", "test:example"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double('-INF')[string() = '-INF']</x:label>
      <x:variable name="expr" as="xs:string">xs:double('-INF')[string() = '-INF']</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/string()</x:label>
      <x:variable name="expr" as="xs:string">/*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//*:Open)[1])</x:label>
      <x:variable name="expr" as="xs:string">string((//*:Open)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//*:Start)[1]/@*)</x:label>
      <x:variable name="expr" as="xs:string">string((//*:Start)[1]/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//@xml:*)[1])</x:label>
      <x:variable name="expr" as="xs:string">string((//@xml:*)[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:label>
      <x:variable name="expr" as="xs:string">string((//namespace::*[.='http://www.w3.org/1999/xlink'])[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//processing-instruction())[1])</x:label>
      <x:variable name="expr" as="xs:string">string((//processing-instruction())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-space(string((//*:Price)[1]))</x:label>
      <x:variable name="expr" as="xs:string">normalize-space(string((//*:Price)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//comment())[1])</x:label>
      <x:variable name="expr" as="xs:string">string((//comment())[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string((//text())[normalize-space(.)][1])</x:label>
      <x:variable name="expr" as="xs:string">string((//text())[normalize-space(.)][1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">string(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(true()) then true() else string()</x:label>
      <x:variable name="expr" as="xs:string">if(true()) then true() else string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(1) eq "1"</x:label>
      <x:variable name="expr" as="xs:string">string(1) eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">string(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length(string(xs:string(current-time()))) gt 2</x:label>
      <x:variable name="expr" as="xs:string">string-length(string(xs:string(current-time()))) gt 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string( (1, 2) )</x:label>
      <x:variable name="expr" as="xs:string">string( (1, 2) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/subsequence.xml">
    <x:scenario>
      <x:label>fn:subsequence( ("a", "b", "c"), 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", "b", "c"), 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", "b", "c"), 3, 12)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", "b", "c"), 3, 12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:string(""),"b", "c"), 1, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:string(""),"b", "c"), 1, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:string("hello"),"b", "c"), 1, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:string("hello"),"b", "c"), 1, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:anyURI("www.example.com"),"b", "c"), 1, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:anyURI("www.example.com"),"b", "c"), 1, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", (), (), "b", "c"), 1, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", (), (), "b", "c"), 1, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:integer("100"), xs:integer("-100"), "b", "c"),2,4)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:integer("100"), xs:integer("-100"), "b", "c"),2,4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:decimal("-1.000000000001"), xs:integer("-100"), "b", "c"), 2,3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:decimal("-1.000000000001"), xs:integer("-100"), "b", "c"), 2,3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence( ("a", xs:float("INF"), "b", "c"),-2,3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence( ("a", xs:float("INF"), "b", "c"),-2,3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:float("-INF"), "b", "c"), 1,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:float("-INF"), "b", "c"), 1,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:float("NaN"), "b", "c"), 0, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:float("NaN"), "b", "c"), 0, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:float("1.01"), "b", "c"), 2,4)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:float("1.01"), "b", "c"), 2,4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:double("NaN"), "b", "c"), 2, 20)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:double("NaN"), "b", "c"), 2, 20)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:double("1.01"), "b", "c"), 2,3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:double("1.01"), "b", "c"), 2,3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:double("-INF"), "b", "c"), 2,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:double("-INF"), "b", "c"), 2,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:double("INF"), "b", "c"), 2, 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:double("INF"), "b", "c"), 2, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:boolean("1"), "b", "c"), 1,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:boolean("1"), "b", "c"), 1,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:boolean("0"), "b", "c"), 2,1)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:boolean("0"), "b", "c"), 2,1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:boolean("true"), "b", "c"), 1,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:boolean("true"), "b", "c"), 1,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:boolean("false"), "b", "c"), 1, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:boolean("false"), "b", "c"), 1, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:date("1993-03-31"), "b", "c"), 1,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:date("1993-03-31"), "b", "c"), 1,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:dateTime("1972-12-31T00:00:00"), "b", "c"), 0,2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:dateTime("1972-12-31T00:00:00"), "b", "c"), 0,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence ( ("a", xs:time("12:30:00"), "b", "c"), 1, 2)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence ( ("a", xs:time("12:30:00"), "b", "c"), 1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence (1 to 10, xs:double('-INF'), xs:double('INF'))</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence (1 to 10, xs:double('-INF'), xs:double('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence()</x:label>
      <x:variable name="expr" as="xs:string">subsequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(1, 1, 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(1, 1, 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((), 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((), 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2, 3), 2, -10))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2, 3), 2, -10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3, "four"), 4)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3, "four"), 4)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3, "four"), 4, 1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3, "four"), 4, 1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3.1, "four"), 4)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3.1, "four"), 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3.1, "four"), 4, 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3.1, "four"), 4, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3.1, "four"), 3, 1) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3.1, "four"), 3, 1) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3.1, "four"), 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3.1, "four"), 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2, 3, "four"), 4, -3))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2, 3, "four"), 4, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2, 3, "four"), -4, -3))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2, 3, "four"), -4, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3), 1, 1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3), 1, 1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3), 1, 1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3), 1, 1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3), 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3), 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3), 1, 1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3), 1, 1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3), 1, 3)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3), 1, 3)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3, "four"), 4)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3, "four"), 4)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 3, 1, 1)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 3, 1, 1)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2), 4))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((5, 6, 7, 8), 2, 1) eq 6</x:label>
      <x:variable name="expr" as="xs:string">subsequence((5, 6, 7, 8), 2, 1) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2), 2)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2), 2)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3, "four"), 2)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3, "four"), 2)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 3, "four"), 2, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 3, "four"), 2, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3.1, "four"), 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3.1, "four"), 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">1 eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq subsequence(("1", 2, 3.1, "four"), 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">1 eq subsequence(("1", 2, 3.1, "four"), 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("1", 2, 3.1, "four"), 1, 1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("1", 2, 3.1, "four"), 1, 1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(error(), 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(error(), 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((1, 2, 2, current-time()), 2, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((1, 2, 2, current-time()), 2, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(remove(current-time(), 1), 1, 1)) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(remove(current-time(), 1), 1, 1)) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(1, subsequence((1, 2, current-time()), 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(1, subsequence((1, 2, current-time()), 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1)[deep-equal(1, subsequence((1, 2, current-time()), 1, 1))] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(1)[deep-equal(1, subsequence((1, 2, current-time()), 1, 1))] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((current-time(), 1), 4))</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((current-time(), 1), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((current-time(), 1), 4)) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((current-time(), 1), 4)) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((current-time(), 2 , 3), 1)) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((current-time(), 2 , 3), 1)) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((current-time(), 2 , 3), 3)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((current-time(), 2 , 3), 3)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence((current-time(), 2 , 3, 4), 2, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence((current-time(), 2 , 3, 4), 2, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3, current-time(), 5, 6, 7), 1, 1)[1]</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3, current-time(), 5, 6, 7), 1, 1)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3, current-time(), 5, 6, 9), 7)[last()]</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3, current-time(), 5, 6, 9), 7)[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3, current-time(), 5, 6, 7), 4)[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3, current-time(), 5, 6, 7), 4)[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2, 3, current-time(), 5, 6, 7), 4, 1)[last() - 10])</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2, 3, current-time(), 5, 6, 7), 4, 1)[last() - 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(subsequence((1, 2, 3, current-time(), 5, 6, 7), 1, 1)[2])</x:label>
      <x:variable name="expr" as="xs:string">empty(subsequence((1, 2, 3, current-time(), 5, 6, 7), 1, 1)[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3), 1, 0)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3), 1, 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3, 4, 5), 4, -1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3, 4, 5), 4, -1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence((1,2,3), 1.1, 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence((1,2,3), 1.1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence((1,2,3), 1.8, 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence((1,2,3), 1.8, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence((1,2,3), 1.4, 1.4)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence((1,2,3), 1.4, 1.4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:subsequence((1,2,3), 1.5, 1.5)</x:label>
      <x:variable name="expr" as="xs:string">fn:subsequence((1,2,3), 1.5, 1.5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, 3), 1, "string")</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, 3), 1, "string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 10, xs:double("-INF"), xs:double("INF")))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 10, xs:double("-INF"), xs:double("INF")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 10, 2, xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 10, 2, xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 10, xs:double("NaN"), 4))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 10, xs:double("NaN"), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 10, xs:double("-INF")))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 10, xs:double("-INF")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 10, xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 10, xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, for $x in 1 to 10 return 2*$x), 2, year-from-date(current-date()))</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, for $x in 1 to 10 return 2*$x), 2, year-from-date(current-date()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1, 2, for $x in 1 to 10 return 2*$x), -1, sum((1 to 10)[. mod 10 = 3]))</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1, 2, for $x in 1 to 10 return 2*$x), -1, sum((1 to 10)[. mod 10 = 3]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(1 to 100, 99, 2147483648)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(1 to 100, 99, 2147483648)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 100, -2147483648, 20))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 100, -2147483648, 20))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 3000000000, -2147483648, 2147483647))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 3000000000, -2147483648, 2147483647))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 3000000000, -2147483649))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 3000000000, -2147483649))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 3000000000, 2147483648))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 3000000000, 2147483648))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(subsequence(1 to 3000000000, 2147483647))</x:label>
      <x:variable name="expr" as="xs:string">count(subsequence(1 to 3000000000, 2147483647))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(1 to 3000000000, 2147483647, 5)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(1 to 3000000000, 2147483647, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in (1 to 100) return -$x, 3, 5)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in (1 to 100) return -$x, 3, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence( for $x in 1 to 10 return 1 to $x, count(for $x in 0 to 10 return 1 to $x), 1)</x:label>
      <x:variable name="expr" as="xs:string">subsequence( for $x in 1 to 10 return 1 to $x, count(for $x in 0 to 10 return 1 to $x), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in 1 to 10 return 1 to $x, 1.2, xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in 1 to 10 return 1 to $x, 1.2, xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in 1 to 10 return 1 to $x, 4.2, xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in 1 to 10 return 1 to $x, 4.2, xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in 1 to 10 return $x[. mod 2 = 0],2,4)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in 1 to 10 return $x[. mod 2 = 0],2,4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in 1 to 10 return $x[. mod 2 = 0],2)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in 1 to 10 return $x[. mod 2 = 0],2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1 to 20)[. mod 2 = 0][position() &lt; 5],2)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1 to 20)[. mod 2 = 0][position() &lt; 5],2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(for $x in 1 to 10 return $x * $x,2)</x:label>
      <x:variable name="expr" as="xs:string">subsequence(for $x in 1 to 10 return $x * $x,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1 to 100)[. mod 2 = 0],1,xs:double(string-join(('I','N','F')[position() mod 2 &gt;= 0],'')))</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1 to 100)[. mod 2 = 0],1,xs:double(string-join(('I','N','F')[position() mod 2 &gt;= 0],'')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/substring-after.xml">
    <x:scenario>
      <x:label>fn:substring-after("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:substring-after("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-after("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:substring-after("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-after("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("substring-after","substring-after")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-after","substring-after")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("substring-aftersubstring-after","substring-after")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-aftersubstring-after","substring-after")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("12345","1234")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("12345","1234")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-after("substring-after","refta-gnirtsbus")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after("substring-after","refta-gnirtsbus")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("banana", "a", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "a", "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("banana", "a", "collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "a", "collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("banana", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("banana", "A", "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("𐀁𐀂𐀃", "𐀂")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("𐀁𐀂𐀃", "𐀂")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after()</x:label>
      <x:variable name="expr" as="xs:string">substring-after()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after(())</x:label>
      <x:variable name="expr" as="xs:string">substring-after(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">substring-after((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("foo", "fo", "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "o"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("tattoo", "tat") eq "too"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("tattoo", "tat") eq "too"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("tattoo", "tattoo") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after("tattoo", "tattoo") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("abcdefgedij", "def") eq "gedij"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("abcdefgedij", "def") eq "gedij"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after((), ()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after((), ()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("a string", ()) eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", ()) eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("a string", "not in other") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-after("a string", "not in other") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring-after('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/substring-before.xml">
    <x:scenario>
      <x:label>fn:substring-before("","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("","A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("","A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("A Character String","")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A Character String","")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before((),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before((),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("A Character String",())</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A Character String",())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before((),"A Character String")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before((),"A Character String")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("AAAAABBBBBCCCCC","BBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("AAAAABBBBBCCCCC","BBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("AAAAABBBBB"," ")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("AAAAABBBBB"," ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before(" ","AAAAABBBBB")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(" ","AAAAABBBBB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:substring-before("A","A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-before("A","A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:substring-before("A","B"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring-before("A","B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before(xs:string("A"),"A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(xs:string("A"),"A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("A",xs:string("A"))</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A",xs:string("A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("A","a")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("A","a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("a","A")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("a","A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("substring-before","substring-before")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-before","substring-before")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("substring-beforesubstring-before","substring-before")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-beforesubstring-before","substring-before")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("****","***")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("****","***")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("12345","2345")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("12345","2345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring-before("substring-before","erofeb-gnirtsbus")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before("substring-before","erofeb-gnirtsbus")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("banana", "a",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "a",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("banana", "a", "collation/codepoint")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "a", "collation/codepoint")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("banana", "A",
         "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("banana", "A",
         "http://www.w3.org/2010/09/qt-fots-catalog/collation/caseblind")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("𐀁𐀂𐀃", "𐀂")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("𐀁𐀂𐀃", "𐀂")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before()</x:label>
      <x:variable name="expr" as="xs:string">substring-before()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before(())</x:label>
      <x:variable name="expr" as="xs:string">substring-before(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint",
         "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">substring-before((), (), "http://www.w3.org/2005/xpath-functions/collation/codepoint",
         "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("a string", "a string",
         "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "a string",
         "http://www.example.com/COLLATION/NOT/SUPPORTED")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("foo", "oo",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "f"</x:label>
      <x:variable name="expr" as="xs:string">substring-before("foo", "oo",
         "http://www.w3.org/2005/xpath-functions/collation/codepoint") eq "f"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("tattoo", "attoo") eq "t"</x:label>
      <x:variable name="expr" as="xs:string">substring-before("tattoo", "attoo") eq "t"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("tattoo", "tatto") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("tattoo", "tatto") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before((), ()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before((), ()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("a string", "") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("a string", "not in other") eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring-before("a string", "not in other") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:substring-before('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring-before('input', '', 'http://www.w3.org/2005/xpath-functions/collation/codepoint'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/substring.xml">
    <x:scenario>
      <x:label>fn:substring("motor car", 6)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("motor car", 6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("metadata", 4, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("metadata", 4, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("12345", 1.5, 2.6)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("12345", 1.5, 2.6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("12345", 0, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("12345", 0, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring("12345", 5, -3))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring("12345", 5, -3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("12345", -3, 5)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("12345", -3, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring("12345", 0 div 0E0, 3))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring("12345", 0 div 0E0, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring("12345", 1, 0 div 0E0))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring("12345", 1, 0 div 0E0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring((), 1, 3))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring((), 1, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("12345", -42, 1 div 0E0)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("12345", -42, 1 div 0E0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring("12345", -1 div 0E0, 1 div 0E0))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring("12345", -1 div 0E0, 1 div 0E0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:substring("",0))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:substring("",0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:substring("ABC",1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring("ABC",1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:substring("ABC",1))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:substring("ABC",1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring(fn:substring("ABCDE",1),1)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring(fn:substring("ABCDE",1),1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("substring",1)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("substring",1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:substring("ABC",1),"DEF")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:substring("ABC",1),"DEF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(fn:substring("ABCDEF",1),"DEF")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(fn:substring("ABCDEF",1),"DEF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("!@#$%^*()",1)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("!@#$%^*()",1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("ABCD",xs:double(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("ABCD",xs:double(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:substring("ABCDE",1+1)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring("ABCDE",1+1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat('#', fn:substring(./concepts/@id, string-length(./concepts/@id) - 18, 1), '#')</x:label>
      <x:variable name="expr" as="xs:string">concat('#', fn:substring(./concepts/@id, string-length(./concepts/@id) - 18, 1), '#')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("abcd𐀁efgh", 6)</x:label>
      <x:variable name="expr" as="xs:string">substring("abcd𐀁efgh", 6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("abcd𐀁efgh", 5, 2)</x:label>
      <x:variable name="expr" as="xs:string">substring("abcd𐀁efgh", 5, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁", 1, 2)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁", 1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁", 2, 1)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁", 2, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁", 0, 2)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁", 0, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁", 0, 3)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁", 0, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁𐀁", 3)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁𐀁", 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("𐀁𐀁", 0)</x:label>
      <x:variable name="expr" as="xs:string">substring("𐀁𐀁", 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", -3.1e0, 5.2e0) eq "1"</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", -3.1e0, 5.2e0) eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sub-string("a string")</x:label>
      <x:variable name="expr" as="xs:string">sub-string("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sub-string("a string", 1, 2, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">sub-string("a string", 1, 2, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring((), 1, 2) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring((), 1, 2) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring((), 1) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring((), 1) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", 1.5, 2.6) eq "234"</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", 1.5, 2.6) eq "234"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring((), 1, 3) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring((), 1, 3) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("motor car", 6) eq " car"</x:label>
      <x:variable name="expr" as="xs:string">substring("motor car", 6) eq " car"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", 0, 3) eq "12"</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", 0, 3) eq "12"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("metadata", 4, 3) eq "ada"</x:label>
      <x:variable name="expr" as="xs:string">substring("metadata", 4, 3) eq "ada"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", 0 div 0E0, 3) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", 0 div 0E0, 3) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", 1, 0 div 0E0) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", 1, 0 div 0E0) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", -3, 5) eq "1"</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", -3, 5) eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", -42, 1 div 0E0) eq "12345"</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", -42, 1 div 0E0) eq "12345"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", -1 div 0E0, 1 div 0E0) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", -1 div 0E0, 1 div 0E0) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("12345", 5, -3) eq ""</x:label>
      <x:variable name="expr" as="xs:string">substring("12345", 5, -3) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:substring('', 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring('', 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:substring('five', 5, 1))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:substring('five', 5, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/sum.xml">
    <x:scenario>
      <x:label>fn:sum((xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-1873914410"),xs:int("-273569238")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-1873914410"),xs:int("-273569238")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("2147483647"),xs:int("-2147483648")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("2147483647"),xs:int("-2147483648")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-273569238"),xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-273569238"),xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-2147483648"),xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-2147483648"),xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("830993497117024304"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("-999999999999999999"),xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("617375191608514839"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("-999999999999999999"),xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("0"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("0"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-297014075999096793")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-297014075999096793")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-5324"),xs:short("-27444")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-5324"),xs:short("-27444")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("32767"),xs:short("-32768")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("32767"),xs:short("-32768")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-27444"),xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-27444"),xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-32768"),xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-32768"),xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-1873914410"),xs:int("-273569238"),xs:int("-273569238")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-1873914410"),xs:int("-273569238"),xs:int("-273569238")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("-273569238"),xs:int("-1873914410"),xs:int("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("-273569238"),xs:int("-1873914410"),xs:int("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("0"),xs:int("0"),xs:int("-1873914410")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("0"),xs:int("0"),xs:int("-1873914410")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:int("0"),xs:int("0"),xs:int("2147483647")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:int("0"),xs:int("0"),xs:int("2147483647")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("999999999999999999"),xs:integer("-999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("-999999999999999999"),xs:integer("999999999999999999"),xs:integer("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("0"),xs:integer("0"),xs:integer("830993497117024304")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("0"),xs:integer("0"),xs:integer("830993497117024304")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:integer("-999999999999999999"),xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:integer("-999999999999999999"),xs:integer("-999999999999999999"),xs:integer("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("-999999999999999999"),xs:decimal("999999999999999999"),xs:decimal("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("0"),xs:decimal("0"),xs:decimal("617375191608514839")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("0"),xs:decimal("0"),xs:decimal("617375191608514839")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:decimal("-999999999999999999"),xs:decimal("-999999999999999999"),xs:decimal("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("0"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0"),xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308"),xs:double("0"),xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308"),xs:double("-1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("0"),xs:double("0"),xs:double("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("0"),xs:double("0"),xs:double("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:double("-1.7976931348623157E308"),xs:double("-1.7976931348623157E308"),xs:double("1.7976931348623157E308")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("0"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("0"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("3.4028235E38"),xs:float("-3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38"),xs:float("0"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38"),xs:float("0"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38"),xs:float("3.4028235E38"),xs:float("-3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("0"),xs:float("0"),xs:float("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("0"),xs:float("0"),xs:float("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:float("-3.4028235E38"),xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:float("-3.4028235E38"),xs:float("-3.4028235E38"),xs:float("3.4028235E38")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290"),xs:long("-45058158165499290")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-47175562203048468"),xs:long("-45058158165499290"),xs:long("-45058158165499290")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("92233720368547758"),xs:long("-92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468"),xs:long("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-45058158165499290"),xs:long("-47175562203048468"),xs:long("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-92233720368547758"),xs:long("92233720368547758"),xs:long("-92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("0"),xs:long("0"),xs:long("-47175562203048468")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("0"),xs:long("0"),xs:long("-47175562203048468")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:long("-92233720368547758"),xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:long("-92233720368547758"),xs:long("-92233720368547758"),xs:long("92233720368547758")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("44633"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("65535"),xs:unsignedShort("0"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("44633"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("65535"),xs:unsignedShort("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("44633")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedShort("0"),xs:unsignedShort("0"),xs:unsignedShort("65535")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-702985924000903206")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-297014075999096793"),xs:negativeInteger("-702985924000903206"),xs:negativeInteger("-702985924000903206")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:negativeInteger("-1"),xs:negativeInteger("-999999999999999999"),xs:negativeInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("52704602390610033"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("999999999999999998"),xs:positiveInteger("1"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("52704602390610033"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("999999999999999998"),xs:positiveInteger("1")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("52704602390610033")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:positiveInteger("1"),xs:positiveInteger("1"),xs:positiveInteger("999999999999999998")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("130747108607674654"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("184467440737095516"),xs:unsignedLong("0"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("130747108607674654"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("184467440737095516"),xs:unsignedLong("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("130747108607674654")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:unsignedLong("0"),xs:unsignedLong("0"),xs:unsignedLong("184467440737095516")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-524311562728129509")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-524311562728129509")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("-999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-524311562728129509"),xs:nonPositiveInteger("-475688437271870490"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("-999999999999999999"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-475688437271870490")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("-475688437271870490")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0"),xs:nonPositiveInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999"),xs:nonNegativeInteger("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("303884545991464527")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:nonNegativeInteger("0"),xs:nonNegativeInteger("0"),xs:nonNegativeInteger("999999999999999999")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-5324"),xs:short("-27444"),xs:short("-27444")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-5324"),xs:short("-27444"),xs:short("-27444")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("-27444"),xs:short("-5324"),xs:short("0")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("-27444"),xs:short("-5324"),xs:short("0")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("0"),xs:short("0"),xs:short("-5324")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("0"),xs:short("0"),xs:short("-5324")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sum((xs:short("0"),xs:short("0"),xs:short("32767")))</x:label>
      <x:variable name="expr" as="xs:string">fn:sum((xs:short("0"),xs:short("0"),xs:short("32767")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum()</x:label>
      <x:variable name="expr" as="xs:string">sum()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(1, 1, "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">sum(1, 1, "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">sum((), 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), 3) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">sum((), 3) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(sum((), ()))</x:label>
      <x:variable name="expr" as="xs:string">empty(sum((), ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), 0.0) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">sum((), 0.0) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), 0.0) eq 0.0</x:label>
      <x:variable name="expr" as="xs:string">sum((), 0.0) eq 0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(()) eq 0</x:label>
      <x:variable name="expr" as="xs:string">sum(()) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(()) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">sum(()) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((-5, -0, -3, -6)) eq -14</x:label>
      <x:variable name="expr" as="xs:string">sum((-5, -0, -3, -6)) eq -14</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((1, 2, 3, xs:float("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((1, 2, 3, xs:float("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((1, 2, 3, xs:double("NaN")))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((1, 2, 3, xs:double("NaN")))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((1, 2, xs:double("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(sum((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(sum((1, 2, xs:float("NaN"), 1, 2, 3))) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">sum(xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1, 2, xs:untypedAtomic("3"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">sum((1, 2, xs:untypedAtomic("3"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1, 2, xs:untypedAtomic("3"))) eq 6</x:label>
      <x:variable name="expr" as="xs:string">sum((1, 2, xs:untypedAtomic("3"))) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:float(1), 2, xs:untypedAtomic("3"))) eq 6</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:float(1), 2, xs:untypedAtomic("3"))) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:float(1), 2, xs:untypedAtomic("3"))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(remove((1.0, xs:float(1), 2, xs:untypedAtomic("3")), 1)) eq 6</x:label>
      <x:variable name="expr" as="xs:string">sum(remove((1.0, xs:float(1), 2, xs:untypedAtomic("3")), 1)) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum("a string")</x:label>
      <x:variable name="expr" as="xs:string">sum("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(xs:anyURI("a string"))</x:label>
      <x:variable name="expr" as="xs:string">sum(xs:anyURI("a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</x:label>
      <x:variable name="expr" as="xs:string">sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")), 3)</x:label>
      <x:variable name="expr" as="xs:string">sum((1, 2, 3, xs:anyURI("a string"), xs:double("NaN")), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(((),())) eq 0</x:label>
      <x:variable name="expr" as="xs:string">sum(((),())) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(()) eq 0</x:label>
      <x:variable name="expr" as="xs:string">sum(()) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((3, 4, 5)) eq 12</x:label>
      <x:variable name="expr" as="xs:string">sum((3, 4, 5)) eq 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P250M")</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M"))) eq xs:yearMonthDuration("P250M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M")) [. &lt; xs:yearMonthDuration("P3M")], xs:yearMonthDuration("P0M")) eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:yearMonthDuration("P20Y"), xs:yearMonthDuration("P10M")) [. &lt; xs:yearMonthDuration("P3M")], xs:yearMonthDuration("P0M")) eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1 to 100)[. &lt; 0], 0) eq 0</x:label>
      <x:variable name="expr" as="xs:string">sum((1 to 100)[. &lt; 0], 0) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:yearMonthDuration("P20Y"), (3, 4, 5)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), ())</x:label>
      <x:variable name="expr" as="xs:string">sum((), ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:float('NaN'), 2, 3, 4, xs:double('NaN'))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:float('NaN'), 2, 3.3, 4, xs:double('NaN'))) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(xs:unsignedShort("1")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">sum(xs:unsignedShort("1")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT1H"))) instance of xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:dayTimeDuration("P1D"), xs:dayTimeDuration("PT1H"))) instance of xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), xs:dayTimeDuration("PT0S"))</x:label>
      <x:variable name="expr" as="xs:string">sum((), xs:dayTimeDuration("PT0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:label>
      <x:variable name="expr" as="xs:string">sum(for $x in 1 to 10 return xs:dayTimeDuration(concat("PT",$x,"H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:yearMonthDuration("P1Y"), xs:yearMonthDuration("P1M"))) instance of xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), xs:yearMonthDuration("P0M"))</x:label>
      <x:variable name="expr" as="xs:string">sum((), xs:yearMonthDuration("P0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:label>
      <x:variable name="expr" as="xs:string">sum(for $x in 1 to 10 return xs:yearMonthDuration(concat("P",$x,"M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:label>
      <x:variable name="expr" as="xs:string">sum((xs:yearMonthDuration("P1Y"), xs:dayTimeDuration("P1D")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((), xs:duration("P0M"))</x:label>
      <x:variable name="expr" as="xs:string">sum((), xs:duration("P0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(xs:duration("P1Y1M1D"))</x:label>
      <x:variable name="expr" as="xs:string">sum(xs:duration("P1Y1M1D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(xs:duration("P1Y1M1D"), xs:duration("PT0S"))</x:label>
      <x:variable name="expr" as="xs:string">sum(xs:duration("P1Y1M1D"), xs:duration("PT0S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(1 to 10)</x:label>
      <x:variable name="expr" as="xs:string">sum(1 to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(for $x in 1 to 10 return 5)</x:label>
      <x:variable name="expr" as="xs:string">sum(for $x in 1 to 10 return 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in 1 to 10, $y in 1 to 10 return concat('sum(',$x,' to ',$y,') = ',sum($x to $y))</x:label>
      <x:variable name="expr" as="xs:string">for $x in 1 to 10, $y in 1 to 10 return concat('sum(',$x,' to ',$y,') = ',sum($x to $y))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(sum((1 to 10)[. mod 2 = 0]))</x:label>
      <x:variable name="expr" as="xs:string">boolean(sum((1 to 10)[. mod 2 = 0]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum(sum((1 to 10)[. mod 2 = 0],()))</x:label>
      <x:variable name="expr" as="xs:string">sum(sum((1 to 10)[. mod 2 = 0],()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>sum((1,exactly-one((1 to 10)[. div 2 = 2])))</x:label>
      <x:variable name="expr" as="xs:string">sum((1,exactly-one((1 to 10)[. div 2 = 2])))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/timezone-from-date.xml">
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1999-05-31-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1999-05-31-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("2000-06-12Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("2000-06-12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1999-12-31+05:00")) lt fn:timezone-from-date(xs:date("1999-12-31+06:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1999-12-31+05:00")) lt fn:timezone-from-date(xs:date("1999-12-31+06:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1999-12-31+01:00")) le fn:timezone-from-date(xs:date("1999-12-31+01:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1999-12-31+01:00")) le fn:timezone-from-date(xs:date("1999-12-31+01:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:timezone-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:timezone-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1999-05-31+00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1999-05-31+00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1999-12-31-00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1999-12-31-00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-01+08:00")) + fn:timezone-from-date(xs:date("1970-01-01+03:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-01+08:00")) + fn:timezone-from-date(xs:date("1970-01-01+03:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-01+09:00")) - fn:timezone-from-date(xs:date("1970-01-01+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-01+09:00")) - fn:timezone-from-date(xs:date("1970-01-01+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:timezone-from-date(xs:date("1970-01-03+02:00"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:timezone-from-date(xs:date("1970-01-03+02:00"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-02+10:00")) div fn:timezone-from-date(xs:date("1970-01-01+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-02+10:00")) div fn:timezone-from-date(xs:date("1970-01-01+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(fn:timezone-from-date(xs:date("1970-01-02+10:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(fn:timezone-from-date(xs:date("1970-01-02+10:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(fn:timezone-from-date(xs:date("1970-01-02+10:00"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(fn:timezone-from-date(xs:date("1970-01-02+10:00"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-date(xs:date("1970-01-01Z"))) and fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-date(xs:date("1970-01-01Z"))) and fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-02+10:00")) eq fn:timezone-from-date(xs:date("1970-01-01+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-02+10:00")) eq fn:timezone-from-date(xs:date("1970-01-01+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:month-from-date(xs:date("1970-01-01+05:00")) ne fn:month-from-date(xs:date("1970-01-03+03:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:month-from-date(xs:date("1970-01-01+05:00")) ne fn:month-from-date(xs:date("1970-01-03+03:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-01+04:00")) le fn:timezone-from-date(xs:date("1970-01-02+02:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-01+04:00")) le fn:timezone-from-date(xs:date("1970-01-02+02:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-date(xs:date("1970-01-03+02:00")) ge fn:timezone-from-date(xs:date("1970-01-01+01:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-date(xs:date("1970-01-03+02:00")) ge fn:timezone-from-date(xs:date("1970-01-01+01:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-date(xs:date("1970-01-01Z"))) or fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-date(xs:date("1970-01-01Z"))) or fn:string(fn:timezone-from-date(xs:date("1970-01-01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date(()) instance of xs:dayTimeDuration?</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date(()) instance of xs:dayTimeDuration?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date(xs:date("2004-10-12Z")) eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date(xs:date("2004-10-12Z")) eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date(xs:date("2004-10-12-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date(xs:date("2004-10-12-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-date(xs:date("2004-10-12")))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-date(xs:date("2004-10-12")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-date(adjust-date-to-timezone(xs:date("1997-01-01"))) = implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-date(adjust-date-to-timezone(xs:date("1997-01-01"))) = implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/timezone-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("2000-06-12T13:20:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("2000-06-12T13:20:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:timezone-from-dateTime(xs:dateTime("2004-08-27T00:00:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:timezone-from-dateTime(xs:dateTime("2004-08-27T00:00:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1999-12-31T12:00:00+02:00")) le fn:timezone-from-dateTime(xs:dateTime("1999-12-30T12:00:00+03:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1999-12-31T12:00:00+02:00")) le fn:timezone-from-dateTime(xs:dateTime("1999-12-30T12:00:00+03:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:timezone-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:timezone-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1999-05-31T00:20:00+00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1999-05-31T00:20:00+00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1999-05-31T23:20:00-00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1999-05-31T23:20:00-00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T00:02:00Z")) + fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:03:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T00:02:00Z")) + fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:03:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T00:00:00+04:00")) - fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00+02:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T00:00:00+04:00")) - fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00+02:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:min(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T02:00:00+10:00")) div fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T02:00:00+10:00")) div fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:max(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))) and fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))) and fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ge fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ge fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))) or fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))) or fn:string(fn:timezone-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime(()) instance of xs:dayTimeDuration?</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime(()) instance of xs:dayTimeDuration?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime(xs:dateTime("2004-10-12T23:43:12Z")) eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime(xs:dateTime("2004-10-12T23:43:12Z")) eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-dateTime(xs:dateTime("2004-10-12T23:43:12-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-dateTime(xs:dateTime("2004-10-12T23:43:12-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-dateTime(xs:dateTime("2004-12-10T23:43:41.965")))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-dateTime(xs:dateTime("2004-12-10T23:43:41.965")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/timezone-from-time.xml">
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:timezone-from-time(xs:time("13:20:00")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:timezone-from-time(xs:time("13:20:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("01:23:02Z")) gt fn:timezone-from-time(xs:time("01:23:03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("01:23:02Z")) gt fn:timezone-from-time(xs:time("01:23:03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("01:10:20Z")) le fn:timezone-from-time(xs:time("01:20:30Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("01:10:20Z")) le fn:timezone-from-time(xs:time("01:20:30Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:timezone-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:timezone-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("00:59:00+00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("00:59:00+00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("23:20:59-00:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("23:20:59-00:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("02:00:00Z")) + fn:timezone-from-time(xs:time("10:00:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("02:00:00Z")) + fn:timezone-from-time(xs:time("10:00:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("10:10:10Z")) - fn:timezone-from-time(xs:time("09:02:07Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("10:10:10Z")) - fn:timezone-from-time(xs:time("09:02:07Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(fn:timezone-from-time(xs:time("02:02:03Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(fn:timezone-from-time(xs:time("02:02:03Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("22:33:10+10:00")) div fn:timezone-from-time(xs:time("02:11:02+05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("22:33:10+10:00")) div fn:timezone-from-time(xs:time("02:11:02+05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(fn:timezone-from-time(xs:time("10:12:15Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(fn:timezone-from-time(xs:time("10:12:15Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(fn:timezone-from-time(xs:time("10:10:20Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(fn:timezone-from-time(xs:time("10:10:20Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-time(xs:time("10:00:01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-time(xs:time("10:00:01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-time(xs:time("10:10:01Z"))) and fn:string(fn:timezone-from-time(xs:time("10:10:01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-time(xs:time("10:10:01Z"))) and fn:string(fn:timezone-from-time(xs:time("10:10:01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("10:02:01Z")) eq fn:timezone-from-time(xs:time("10:02:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("10:02:01Z")) eq fn:timezone-from-time(xs:time("10:02:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("10:00:01Z")) ne fn:timezone-from-time(xs:time("01:01:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("10:00:01Z")) ne fn:timezone-from-time(xs:time("01:01:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("10:00:00Z")) le fn:timezone-from-time(xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("10:00:00Z")) le fn:timezone-from-time(xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:timezone-from-time(xs:time("10:03:01Z")) ge fn:timezone-from-time(xs:time("10:04:02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:timezone-from-time(xs:time("10:03:01Z")) ge fn:timezone-from-time(xs:time("10:04:02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:timezone-from-time(xs:time("10:03:01Z"))) or fn:string(fn:timezone-from-time(xs:time("10:04:02Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:timezone-from-time(xs:time("10:03:01Z"))) or fn:string(fn:timezone-from-time(xs:time("10:04:02Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time()</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-time(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-time(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time(()) instance of xs:dayTimeDuration?</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time(()) instance of xs:dayTimeDuration?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time(xs:time("23:43:12.765Z")) eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time(xs:time("23:43:12.765Z")) eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>timezone-from-time(xs:time("23:43:12.765-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:label>
      <x:variable name="expr" as="xs:string">timezone-from-time(xs:time("23:43:12.765-08:23")) eq xs:dayTimeDuration("-PT8H23M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(timezone-from-time(xs:time("23:43:12.765")))</x:label>
      <x:variable name="expr" as="xs:string">empty(timezone-from-time(xs:time("23:43:12.765")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/tokenize.xml">
    <x:scenario>
      <x:label>fn:tokenize("abba", ".?")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abba", ".?")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("The cat sat on the mat", "\s+", "t")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("The cat sat on the mat", "\s+", "t")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("The cat sat on the mat", "\s+")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("The cat sat on the mat", "\s+")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("1, 15, 24, 50", ",\s*")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("1, 15, 24, 50", ",\s*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("Some unparsed &lt;br&gt; HTML &lt;BR&gt; text", "\s*&lt;br&gt;\s*", "i")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("Some unparsed &lt;br&gt; HTML &lt;BR&gt; text", "\s*&lt;br&gt;\s*", "i")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("Some unparsed &lt;br&gt; HTML &lt;BR&gt; text", "\s*&lt;br&gt;\s*", "")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("Some unparsed &lt;br&gt; HTML &lt;BR&gt; text", "\s*&lt;br&gt;\s*", "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:tokenize((), "\s+"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:tokenize((), "\s+"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:tokenize("", "\s+"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:tokenize("", "\s+"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(fn:tokenize("abracadabra", "(ab)|(a)"), '#')</x:label>
      <x:variable name="expr" as="xs:string">string-join(fn:tokenize("abracadabra", "(ab)|(a)"), '#')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra", "ww")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra", "ww")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra", "^a")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra", "^a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra^abracadabra", "\^")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra^abracadabra", "\^")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra?abracadabra", "\?")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra?abracadabra", "\?")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra*abracadabra", "\*")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra*abracadabra", "\*")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra+abracadabra", "\+")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra+abracadabra", "\+")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra{abracadabra", "\{")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra{abracadabra", "\{")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra}abracadabra", "\}")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra}abracadabra", "\}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra(abracadabra", "\(")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra(abracadabra", "\(")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra)abracadabra", "\)")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra)abracadabra", "\)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra[abracadabra", "\[")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra[abracadabra", "\[")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra]abracadabra", "\]")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra]abracadabra", "\]")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra-abracadabra", "\-")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra-abracadabra", "\-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra.abracadabra", "\.")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra.abracadabra", "\.")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra|abracadabra", "\|")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra|abracadabra", "\|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra\abracadabra", "\\")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra\abracadabra", "\\")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra	abracadabra", "\t")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra	abracadabra", "\t")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabra
abracadabra", "\n")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabra
abracadabra", "\n")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabraabracadabra", "aa{1}")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabraabracadabra", "aa{1}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabraabracadabraabracadabra", "aa{1,}")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabraabracadabraabracadabra", "aa{1,}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize("abracadabraabracadabraabracadabra", "aa{1,2}")</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize("abracadabraabracadabraabracadabra", "aa{1,2}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(concat('Mary', codepoints-to-string(13), 'Jones'), 'y.J')</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(concat('Mary', codepoints-to-string(13), 'Jones'), 'y.J')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(concat('Mary', codepoints-to-string(13), 'Jones'), 'y.J', 's')</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(concat('Mary', codepoints-to-string(13), 'Jones'), 'y.J', 's')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '^', 'm')</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '^', 'm')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '$', 'm')</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '$', 'm')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '^[\s]*$', 'm')</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(concat('Mary', codepoints-to-string(10), 'Jones'), '^[\s]*$', 'm')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>tokenize("input", ())</x:label>
      <x:variable name="expr" as="xs:string">tokenize("input", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>tokenize("input", "pattern", " ")</x:label>
      <x:variable name="expr" as="xs:string">tokenize("input", "pattern", " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>tokenize("input", "pattern", "X")</x:label>
      <x:variable name="expr" as="xs:string">tokenize("input", "pattern", "X")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>tokenize("input", "pattern", "", ())</x:label>
      <x:variable name="expr" as="xs:string">tokenize("input", "pattern", "", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last()] eq ""</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last()] eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() + 1])</x:label>
      <x:variable name="expr" as="xs:string">empty(fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() + 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() - 1]</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() - 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() - 3]</x:label>
      <x:variable name="expr" as="xs:string">fn:tokenize(("abracadabra", current-time())[1] treat as xs:string, "(ab)|(a)")[last() - 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(fn:tokenize("The cat sat on the mat", "\s+"), ("The", "cat", "sat", "on", "the", "mat")), count(fn:tokenize("The cat sat on the mat", "\s+")), count(fn:tokenize(" The cat sat on the mat ", "\s+")), fn:tokenize("The cat sat on the mat", "\s+")</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(fn:tokenize("The cat sat on the mat", "\s+"), ("The", "cat", "sat", "on", "the", "mat")), count(fn:tokenize("The cat sat on the mat", "\s+")), count(fn:tokenize(" The cat sat on the mat ", "\s+")), fn:tokenize("The cat sat on the mat", "\s+")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace('APXterms6', '\w{3}\d*([^TKR0-9]+).*$', '$1')</x:label>
      <x:variable name="expr" as="xs:string">replace('APXterms6', '\w{3}\d*([^TKR0-9]+).*$', '$1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(tokenize("a b", " ")), count(tokenize("a b", "\s")), string-join(tokenize("a b", " "), '|'), string-join(tokenize("a b", "\s"), '|'), tokenize("a b", " "), tokenize("a b", "\s")</x:label>
      <x:variable name="expr" as="xs:string">count(tokenize("a b", " ")), count(tokenize("a b", "\s")), string-join(tokenize("a b", " "), '|'), string-join(tokenize("a b", "\s"), '|'), tokenize("a b", " "), tokenize("a b", "\s")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in xs:string(zero-or-one((1 to 10)[. mod 2 = -1])) return tokenize($x,',')</x:label>
      <x:variable name="expr" as="xs:string">for $x in xs:string(zero-or-one((1 to 10)[. mod 2 = -1])) return tokenize($x,',')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>tokenize(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),','),'[')</x:label>
      <x:variable name="expr" as="xs:string">tokenize(string-join(for $x in (1 to 10)[. mod 2 = 0] return string($x),','),'[')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/trace.xml">
    <x:scenario>
      <x:label>fn:trace()</x:label>
      <x:variable name="expr" as="xs:string">fn:trace()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (1,2,3,4,5) return fn:trace($var + 1,"The Value of $var + 1 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (1,2,3,4,5) return fn:trace($var + 1,"The Value of $var + 1 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (2,3,4,5) return fn:trace($var - 1,"The Value of $var - 1 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,3,4,5) return fn:trace($var - 1,"The Value of $var - 1 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (2,3,4,5) return fn:trace($var * 2 ,"The Value of $var * 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,3,4,5) return fn:trace($var * 2 ,"The Value of $var * 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var div 2 ,"The Value of $var div 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var div 2 ,"The Value of $var div 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var idiv 2 ,"The Value of $var idiv 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var idiv 2 ,"The Value of $var idiv 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (2,4,6,8) return fn:trace($var mod 2 ,"The Value of $var mod 2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (2,4,6,8) return fn:trace($var mod 2 ,"The Value of $var mod 2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var1 in (2,4,6,8), $var2 in (3 + $var1) - (4 * $var1) 
        return fn:trace($var1 + $var2 ,"The Value of $var 1 + $var2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var1 in (2,4,6,8), $var2 in (3 + $var1) - (4 * $var1) 
        return fn:trace($var1 + $var2 ,"The Value of $var 1 + $var2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in ("aa","bb","cc","dd","ee") return fn:trace(fn:concat($var,$var) ,"The Value of concat($var,$var) is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in ("aa","bb","cc","dd","ee") return fn:trace(fn:concat($var,$var) ,"The Value of concat($var,$var) is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works//hours) return fn:trace(($var div 2) ,"The Value of hours div/2 is: ")</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works//hours) return fn:trace(($var div 2) ,"The Value of hours div/2 is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((for $var in (/works//hours) return $var + $var) ,"The Value of the given expression is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (/works//hours) return $var + $var) ,"The Value of the given expression is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((fn:avg((1,3,3,4,5)) * 2) ,"The Value of 'fn:avg((1,3,3,4,5)) * 2' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:avg((1,3,3,4,5)) * 2) ,"The Value of 'fn:avg((1,3,3,4,5)) * 2' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((for $var in (1.1,2.2,3.3,4.4,5.5) return xs:integer($var)) ,"The Value of 'for $var in (1.1,2.2,3.3,4.4,5.5) return xs:float($var)' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (1.1,2.2,3.3,4.4,5.5) return xs:integer($var)) ,"The Value of 'for $var in (1.1,2.2,3.3,4.4,5.5) return xs:float($var)' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((fn:trace((2+2),"The value of '2 + 2' is:" )) ,"The Value of 'fn:trace(2+2)' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:trace((2+2),"The value of '2 + 2' is:" )) ,"The Value of 'fn:trace(2+2)' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((fn:count((1,2,-3,-4,5)) * 2) ,"The Value of 'fn:count(1,2,-3,-4,5)) * 2' is: ")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((fn:count((1,2,-3,-4,5)) * 2) ,"The Value of 'fn:count(1,2,-3,-4,5)) * 2' is: ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var and fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var and fn:true()' is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var and fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var and fn:true()' is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var or fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var or fn:true()' is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:true(),fn:false(),fn:true()) return $var or fn:true()) ,"The value of 'for $var in (fn:true(),fn:false(),fn:true() return $var or fn:true()' is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:trace(() ,"The value of the empty sequence is:"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:trace(() ,"The value of the empty sequence is:"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:trace("" ,"The value of the zero length string is:"))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:trace("" ,"The value of the zero length string is:"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:trace((for $var in (fn:upper-case("a"),fn:lower-case("B")) return (fn:lower-case($var),fn:upper-case($var))) ,"The value of the complex expression on the other argument is:")</x:label>
      <x:variable name="expr" as="xs:string">fn:trace((for $var in (fn:upper-case("a"),fn:lower-case("B")) return (fn:lower-case($var),fn:upper-case($var))) ,"The value of the complex expression on the other argument is:")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>trace()</x:label>
      <x:variable name="expr" as="xs:string">trace()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>trace(., "message", "wrong parameter")</x:label>
      <x:variable name="expr" as="xs:string">trace(., "message", "wrong parameter")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>trace("a string", "trace message")</x:label>
      <x:variable name="expr" as="xs:string">trace("a string", "trace message")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(trace((), "trace message"))</x:label>
      <x:variable name="expr" as="xs:string">empty(trace((), "trace message"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(trace(error(), "trace message"))</x:label>
      <x:variable name="expr" as="xs:string">empty(trace(error(), "trace message"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/translate.xml">
    <x:scenario>
      <x:label>translate('---abcABCxyz---','-abcABCxyz','1ABCabcXYZ')</x:label>
      <x:variable name="expr" as="xs:string">translate('---abcABCxyz---','-abcABCxyz','1ABCabcXYZ')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate('newline
tab	space ','
	 ','123')</x:label>
      <x:variable name="expr" as="xs:string">translate('newline
tab	space ','
	 ','123')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate('','-','x')</x:label>
      <x:variable name="expr" as="xs:string">translate('','-','x')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate((),'-','x')</x:label>
      <x:variable name="expr" as="xs:string">translate((),'-','x')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate(1,'-','x')</x:label>
      <x:variable name="expr" as="xs:string">translate(1,'-','x')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate('abc',1,'x')</x:label>
      <x:variable name="expr" as="xs:string">translate('abc',1,'x')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate('abc','x',1)</x:label>
      <x:variable name="expr" as="xs:string">translate('abc','x',1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate('abc')</x:label>
      <x:variable name="expr" as="xs:string">translate('abc')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("bar","abc","ABC")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("bar","abc","ABC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("--aaa--","abc-","ABC")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("--aaa--","abc-","ABC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("abcdabc", "abc", "AB")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("abcdabc", "abc", "AB")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("acdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("acdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("ABCDEFGHIJKLMNOPQRSTUVWXYZ","ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("ABCDEFGHIJKLMNOPQRSTUVWXYZ","ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:translate("","",""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:translate("","",""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("ABC", "ABC", "ABC")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("ABC", "ABC", "ABC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("123", "123", "123")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("123", "123", "123")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("123ABC", "123ABC", "123ABC")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("123ABC", "123ABC", "123ABC")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate(fn:string("ABC"), fn:string("ABC"), fn:string("ABC"))</x:label>
      <x:variable name="expr" as="xs:string">fn:translate(fn:string("ABC"), fn:string("ABC"), fn:string("ABC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:translate("ABC", "ABC", "ABC"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:translate("ABC", "ABC", "ABC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(fn:translate("ABC","ABC","ABC"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:translate("ABC","ABC","ABC"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(fn:translate("123","123","123"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(fn:translate("123","123","123"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(fn:translate("123","123","123"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(fn:translate("123","123","123"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(fn:translate("123","123","123"))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(fn:translate("123","123","123"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(fn:translate("123","123","123"))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(fn:translate("123","123","123"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abcd", "𐀁a", "xy")</x:label>
      <x:variable name="expr" as="xs:string">translate("abcd", "𐀁a", "xy")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abcd", "xa", "𐀁y")</x:label>
      <x:variable name="expr" as="xs:string">translate("abcd", "xa", "𐀁y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abcd𐀄e", "a𐀄e", "XYZ")</x:label>
      <x:variable name="expr" as="xs:string">translate("abcd𐀄e", "a𐀄e", "XYZ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abcd𐀄e", "a𐀄e", "𐀆YZ")</x:label>
      <x:variable name="expr" as="xs:string">translate("abcd𐀄e", "a𐀄e", "𐀆YZ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate()</x:label>
      <x:variable name="expr" as="xs:string">translate()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("string", "map string")</x:label>
      <x:variable name="expr" as="xs:string">translate("string", "map string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("arg", "map string", "transString", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">translate("arg", "map string", "transString", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("--aaa--","-","") eq "aaa"</x:label>
      <x:variable name="expr" as="xs:string">translate("--aaa--","-","") eq "aaa"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("--aaa--","bbb++","") eq "--aaa--"</x:label>
      <x:variable name="expr" as="xs:string">translate("--aaa--","bbb++","") eq "--aaa--"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("argstr", "", "matrs") eq "argstr"</x:label>
      <x:variable name="expr" as="xs:string">translate("argstr", "", "matrs") eq "argstr"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate((), "map", "trans") eq ""</x:label>
      <x:variable name="expr" as="xs:string">translate((), "map", "trans") eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abcdabc", "abc", "AB") eq "ABdAB"</x:label>
      <x:variable name="expr" as="xs:string">translate("abcdabc", "abc", "AB") eq "ABdAB"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("bar","abc","ABC") eq "BAr"</x:label>
      <x:variable name="expr" as="xs:string">translate("bar","abc","ABC") eq "BAr"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("--aaa--","abc-","ABC") eq "AAA"</x:label>
      <x:variable name="expr" as="xs:string">translate("--aaa--","abc-","ABC") eq "AAA"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("arg", (), "transString")</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("arg", (), "transString")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:translate("arg", "mapString", ())</x:label>
      <x:variable name="expr" as="xs:string">fn:translate("arg", "mapString", ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(translate(string-join(for $x in 1 to 10 return "blah","-"),exactly-one(("--","==")[position() mod 2 = 0]),"__"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(translate(string-join(for $x in 1 to 10 return "blah","-"),exactly-one(("--","==")[position() mod 2 = 0]),"__"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate(codepoints-to-string(65536 to 65537),codepoints-to-string(65536 to 65537),"l")</x:label>
      <x:variable name="expr" as="xs:string">translate(codepoints-to-string(65536 to 65537),codepoints-to-string(65536 to 65537),"l")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/true.xml">
    <x:scenario>
      <x:label>fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() eq fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() eq fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() ne fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() ne fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() lt fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() lt fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() le fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() le fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() gt fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() gt fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() ge fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() ge fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() = fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() = fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() != fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() != fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() &lt; fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() &lt; fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() &lt;= fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() &lt;= fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() &gt; fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() &gt; fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() &gt;= fn:true()</x:label>
      <x:variable name="expr" as="xs:string">fn:true() &gt;= fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(fn:true())</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(xs:string(fn:true()),xs:string(fn:true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(xs:string(fn:true()),xs:string(fn:true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:contains(xs:string(fn:true()),xs:string(fn:true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(xs:string(fn:true()),xs:string(fn:true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-length(xs:string(fn:true()))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string(fn:true()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true(1)</x:label>
      <x:variable name="expr" as="xs:string">true(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq true()</x:label>
      <x:variable name="expr" as="xs:string">true() eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true()</x:label>
      <x:variable name="expr" as="xs:string">true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/unordered.xml">
    <x:scenario>
      <x:label>fn:unordered( ("c",1, "xzy"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered( ("c",1, "xzy"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered( ("c", "b", "a") )</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered( ("c", "b", "a") )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:string(""), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:string(""), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:anyURI("www.example.com"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:anyURI("www.example.com"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", (), (), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", (), (), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:integer("100"), xs:integer("-100"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:integer("100"), xs:integer("-100"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:decimal("-1.000000000001"), xs:integer("-100"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:decimal("-1.000000000001"), xs:integer("-100"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:float("INF"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:float("INF"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:float("-INF"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:float("-INF"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:float("NaN"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:float("NaN"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:float("1.01"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:float("1.01"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:double("NaN"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:double("NaN"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:double("1.01"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:double("1.01"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:double("-INF"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:double("-INF"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:double("INF"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:double("INF"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:boolean("1"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:boolean("1"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:boolean("0"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:boolean("0"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:boolean("true"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:boolean("true"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:boolean("false"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:boolean("false"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:date("1993-03-31"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:date("1993-03-31"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:dateTime("1972-12-31T00:00:00"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:dateTime("1972-12-31T00:00:00"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:unordered ( ("a", xs:time("12:30:00"), "b", "c"))</x:label>
      <x:variable name="expr" as="xs:string">fn:unordered ( ("a", xs:time("12:30:00"), "b", "c"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unordered()</x:label>
      <x:variable name="expr" as="xs:string">unordered()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unordered(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">unordered(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unordered(1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">unordered(1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(unordered((1, 2, 3))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(unordered((1, 2, 3))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(unordered((1, 2, current-time()))) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(unordered((1, 2, current-time()))) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(unordered(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(unordered(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), unordered((1, 2, 3)))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), unordered((1, 2, 3)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unordered(error())</x:label>
      <x:variable name="expr" as="xs:string">unordered(error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(unordered(reverse((1 to 10)[. div 2 = 2])))</x:label>
      <x:variable name="expr" as="xs:string">boolean(unordered(reverse((1 to 10)[. div 2 = 2])))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>floor(unordered((1 to 10)[. div 2 = 0]))</x:label>
      <x:variable name="expr" as="xs:string">floor(unordered((1 to 10)[. div 2 = 0]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(/works/employee[last()]/unordered(preceding-sibling::*))</x:label>
      <x:variable name="expr" as="xs:string">count(/works/employee[last()]/unordered(preceding-sibling::*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(/works/employee[last()]/unordered(preceding::*))</x:label>
      <x:variable name="expr" as="xs:string">count(/works/employee[last()]/unordered(preceding::*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((/works//day)[last()]/unordered(ancestor-or-self::*))</x:label>
      <x:variable name="expr" as="xs:string">count((/works//day)[last()]/unordered(ancestor-or-self::*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(unordered(reverse(for $i in (1,2,1) return /works/employee)))</x:label>
      <x:variable name="expr" as="xs:string">count(unordered(reverse(for $i in (1,2,1) return /works/employee)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(unordered(reverse(/works/employee[@name] | /works/employee[@gender])))</x:label>
      <x:variable name="expr" as="xs:string">count(unordered(reverse(/works/employee[@name] | /works/employee[@gender])))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(unordered(for $e in reverse(/works/employee) return $e/@gender))</x:label>
      <x:variable name="expr" as="xs:string">count(unordered(for $e in reverse(/works/employee) return $e/@gender))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(for $e in unordered(reverse(/works/employee)) return $e/@gender)</x:label>
      <x:variable name="expr" as="xs:string">count(for $e in unordered(reverse(/works/employee)) return $e/@gender)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/upper-case.xml">
    <x:scenario>
      <x:label>fn:upper-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(xs:string("This is a characte"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(xs:string("This is a characte"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("ABc!D")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("ABc!D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:upper-case(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:upper-case(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("12345")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("12345")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("12345abcd")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("12345abcd")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("ABCD")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("ABCD")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("abcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("abcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("ABCDEabcde")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("ABCDEabcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:upper-case(""))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:upper-case(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(lower-case("AbcDH"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(lower-case("AbcDH"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("*****")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("*****")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case(upper-case("zzzzz"))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(upper-case("zzzzz"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:upper-case("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:upper-case("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:concat(fn:upper-case("abcde"), fn:upper-case("fghi"))</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:upper-case("abcde"), fn:upper-case("fghi"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:upper-case("abcde"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:upper-case("abcde"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("%$#@!")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("%$#@!")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("upper-case")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("upper-case")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:upper-case("abc") and fn:upper-case("abc")</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case("abc") and fn:upper-case("abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(160 to 256)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(160 to 256)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(880 to 1023)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(880 to 1023)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(459)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(459)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(223)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(223)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(64279)))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-to-codepoints(fn:upper-case(fn:codepoints-to-string(64279)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>upper-case()</x:label>
      <x:variable name="expr" as="xs:string">upper-case()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>upper-case("string", "wrong param")</x:label>
      <x:variable name="expr" as="xs:string">upper-case("string", "wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>upper-case(()) eq ""</x:label>
      <x:variable name="expr" as="xs:string">upper-case(()) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>lower-case("ABc!D") eq "abc!d"</x:label>
      <x:variable name="expr" as="xs:string">lower-case("ABc!D") eq "abc!d"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/year-from-date.xml">
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1983-11-17Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1983-11-17Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("2030-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("2030-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1999-05-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1999-05-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("2000-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("2000-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1999-12-31Z")) lt fn:year-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1999-12-31Z")) lt fn:year-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1999-12-31Z")) le fn:year-from-date(xs:date("1999-12-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1999-12-31Z")) le fn:year-from-date(xs:date("1999-12-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:year-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:year-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("0001-05-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("0001-05-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("-1999-05-31Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("-1999-05-31Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) + fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) + fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) - fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) - fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) * fn:year-from-date(xs:date("0002-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) * fn:year-from-date(xs:date("0002-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) div fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) div fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) idiv fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) idiv fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) mod fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) mod fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) eq fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) eq fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) ne fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) ne fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) le fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) le fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-date(xs:date("1970-01-01Z")) ge fn:year-from-date(xs:date("1970-01-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-date(xs:date("1970-01-01Z")) ge fn:year-from-date(xs:date("1970-01-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date()</x:label>
      <x:variable name="expr" as="xs:string">year-from-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">year-from-date((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(year-from-date(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(year-from-date(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(xs:date("2000-02-03")) eq 2000</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(xs:date("2000-02-03")) eq 2000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/year-from-dateTime.xml">
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1996-04-07T01:40:52Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("2030-12-31T23:59:59Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1999-05-31T21:30:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1999-05-31T21:30:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1999-12-31T19:20:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1999-12-31T19:20:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:year-from-dateTime(xs:dateTime("1996-12-31T12:00:00Z")),fn:year-from-dateTime(xs:dateTime("2000-12-31T12:00:00Z"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:year-from-dateTime(xs:dateTime("1996-12-31T12:00:00Z")),fn:year-from-dateTime(xs:dateTime("2000-12-31T12:00:00Z"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:year-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:year-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("-1999-05-31T00:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("-1999-05-31T00:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("0001-05-31T23:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("0001-05-31T23:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) + fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:year-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T00:00:00Z")) - fn:year-from-dateTime(xs:dateTime("1969-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) * fn:year-from-dateTime(xs:dateTime("0002-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z")) * fn:year-from-dateTime(xs:dateTime("0002-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1000-01-01T02:00:00Z")) div fn:year-from-dateTime(xs:dateTime("0050-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1000-01-01T02:00:00Z")) div fn:year-from-dateTime(xs:dateTime("0050-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) idiv fn:year-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) idiv fn:year-from-dateTime(xs:dateTime("1970-01-01T02:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) mod fn:year-from-dateTime(xs:dateTime("1970-01-01T03:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) mod fn:year-from-dateTime(xs:dateTime("1970-01-01T03:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) eq fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) ne fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z")) le fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z")) ge fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:year-from-dateTime(xs:dateTime("1971-01-01T10:00:00Z")) ge fn:year-from-dateTime(xs:dateTime("1970-01-01T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">year-from-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-dateTime((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">year-from-dateTime((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(year-from-dateTime(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(year-from-dateTime(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-dateTime(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">year-from-dateTime(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 2001</x:label>
      <x:variable name="expr" as="xs:string">year-from-dateTime(xs:dateTime("2001-02-03T08:23:12.43")) eq 2001</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/years-from-duration.xml">
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P0Y0M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P0Y0M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P1000Y6M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P1000Y6M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P2030Y12M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P2030Y12M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P20Y15M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P20Y15M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("-P15M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("-P15M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P20Y3M")) lt fn:years-from-duration(xs:yearMonthDuration("P21Y2M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P20Y3M")) lt fn:years-from-duration(xs:yearMonthDuration("P21Y2M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P21Y10M")) le fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P21Y10M")) le fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(fn:years-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:years-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P01Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P01Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((fn:years-from-duration(xs:yearMonthDuration("P23Y10M")),fn:years-from-duration(xs:yearMonthDuration("P21Y10M"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((fn:years-from-duration(xs:yearMonthDuration("P23Y10M")),fn:years-from-duration(xs:yearMonthDuration("P21Y10M"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P21Y10M")) + fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P21Y10M")) + fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P30Y10M")) - fn:years-from-duration(xs:yearMonthDuration("P10Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P30Y10M")) - fn:years-from-duration(xs:yearMonthDuration("P10Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) * fn:years-from-duration(xs:yearMonthDuration("P02Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) * fn:years-from-duration(xs:yearMonthDuration("P02Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) div fn:years-from-duration(xs:yearMonthDuration("P05Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) div fn:years-from-duration(xs:yearMonthDuration("P05Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P25Y10M")) idiv fn:years-from-duration(xs:yearMonthDuration("P05Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P25Y10M")) idiv fn:years-from-duration(xs:yearMonthDuration("P05Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P10Y10M")) mod fn:years-from-duration(xs:yearMonthDuration("P03Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P10Y10M")) mod fn:years-from-duration(xs:yearMonthDuration("P03Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+fn:years-from-duration(xs:yearMonthDuration("P21Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">+fn:years-from-duration(xs:yearMonthDuration("P21Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-fn:years-from-duration(xs:yearMonthDuration("P25Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">-fn:years-from-duration(xs:yearMonthDuration("P25Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P22Y10M")) eq fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P22Y10M")) eq fn:years-from-duration(xs:yearMonthDuration("P22Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P22Y10M")) ne fn:years-from-duration(xs:yearMonthDuration("P23Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P22Y10M")) ne fn:years-from-duration(xs:yearMonthDuration("P23Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P21Y01M")) le fn:years-from-duration(xs:yearMonthDuration("P21Y15M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P21Y01M")) le fn:years-from-duration(xs:yearMonthDuration("P21Y15M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) ge fn:years-from-duration(xs:yearMonthDuration("P20Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:yearMonthDuration("P20Y10M")) ge fn:years-from-duration(xs:yearMonthDuration("P20Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration()</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration((), "Wrong param")</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration((), "Wrong param")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(years-from-duration(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(years-from-duration(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration(()) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration(()) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration(xs:yearMonthDuration("P0003Y2M")) eq 3</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration(xs:yearMonthDuration("P0003Y2M")) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration(xs:yearMonthDuration("-P0003Y2M")) eq -3</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration(xs:yearMonthDuration("-P0003Y2M")) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>years-from-duration(xs:duration("-P3Y4M4DT1H23M2.34S")) eq -3</x:label>
      <x:variable name="expr" as="xs:string">years-from-duration(xs:duration("-P3Y4M4DT1H23M2.34S")) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:years-from-duration(xs:dayTimeDuration('P1D'))</x:label>
      <x:variable name="expr" as="xs:string">fn:years-from-duration(xs:dayTimeDuration('P1D'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/fn/zero-or-one.xml">
    <x:scenario>
      <x:label>fn:zero-or-one(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:zero-or-one((1,2))</x:label>
      <x:variable name="expr" as="xs:string">fn:zero-or-one((1,2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one()</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one(true())</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(zero-or-one(()))</x:label>
      <x:variable name="expr" as="xs:string">empty(zero-or-one(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(zero-or-one( "one" )) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(zero-or-one( "one" )) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(zero-or-one( () )) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(zero-or-one( () )) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one(error())</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one(error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one( (1, 2, 3) )</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one( (1, 2, 3) )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in zero-or-one((1 to 10)[. div 2 = 0]) return ()</x:label>
      <x:variable name="expr" as="xs:string">for $x in zero-or-one((1 to 10)[. div 2 = 0]) return ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/misc/AppendixA4.xml">
    <x:scenario>
      <x:label>-3 + 5 * 3</x:label>
      <x:variable name="expr" as="xs:string">-3 + 5 * 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 - 5 * 3</x:label>
      <x:variable name="expr" as="xs:string">3 - 5 * 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 + 10 div 2</x:label>
      <x:variable name="expr" as="xs:string">3 + 10 div 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 - 10 div 2</x:label>
      <x:variable name="expr" as="xs:string">5 - 10 div 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 + 10 idiv 4</x:label>
      <x:variable name="expr" as="xs:string">5 + 10 idiv 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 - 10 idiv 4</x:label>
      <x:variable name="expr" as="xs:string">5 - 10 idiv 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 + 10 mod 4</x:label>
      <x:variable name="expr" as="xs:string">5 + 10 mod 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 - 10 mod 4</x:label>
      <x:variable name="expr" as="xs:string">5 - 10 mod 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-+7</x:label>
      <x:variable name="expr" as="xs:string">-+7</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/misc/CombinedErrorCodes.xml">
    <x:scenario>
      <x:label>typeswitch (10)
	 case $i as xs:integer return 1
	 default $v return 0</x:label>
      <x:variable name="expr" as="xs:string">typeswitch (10)
	 case $i as xs:integer return 1
	 default $v return 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/misc/ErrorsAndOptimization.xml">
    <x:scenario>
      <x:label>if (true()) then 1 else error(QName('http://www.example.com/errors', 'err:oops'), "Oops, this error should not be raised!")</x:label>
      <x:variable name="expr" as="xs:string">if (true()) then 1 else error(QName('http://www.example.com/errors', 'err:oops'), "Oops, this error should not be raised!")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (true()) then 1 div 0 else 1</x:label>
      <x:variable name="expr" as="xs:string">if (true()) then 1 div 0 else 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length(("one", "two"))</x:label>
      <x:variable name="expr" as="xs:string">string-length(("one", "two"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $s in "var:QName" return QName($s)</x:label>
      <x:variable name="expr" as="xs:string">for $s in "var:QName" return QName($s)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/misc/Surrogates.xml">
    <x:scenario>
      <x:label>codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length("abc𝅖def")</x:label>
      <x:variable name="expr" as="xs:string">string-length("abc𝅖def")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("abc𝅖def", 5)</x:label>
      <x:variable name="expr" as="xs:string">substring("abc𝅖def", 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring("abc𝅖def", 4)</x:label>
      <x:variable name="expr" as="xs:string">substring("abc𝅖def", 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abc𝅖def", "𝅖", "#")</x:label>
      <x:variable name="expr" as="xs:string">translate("abc𝅖def", "𝅖", "#")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abc𝅖def", "𝅖de", "#DE")</x:label>
      <x:variable name="expr" as="xs:string">translate("abc𝅖def", "𝅖de", "#DE")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>translate("abc𝅖def", "def", "𝅖EF")</x:label>
      <x:variable name="expr" as="xs:string">translate("abc𝅖def", "def", "𝅖EF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints("abc𝅖def")</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints("abc𝅖def")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("abc𝅖def", "𝅖")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("abc𝅖def", "𝅖")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-before("abc𝅖def", "f")</x:label>
      <x:variable name="expr" as="xs:string">substring-before("abc𝅖def", "f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>substring-after("abc𝅖def", "𝅖")</x:label>
      <x:variable name="expr" as="xs:string">substring-after("abc𝅖def", "𝅖")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abc𝅗def", "abc[𝅖-𝅘]def")</x:label>
      <x:variable name="expr" as="xs:string">matches("abc𝅗def", "abc[𝅖-𝅘]def")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches("abc𝅗def", "abc.def")</x:label>
      <x:variable name="expr" as="xs:string">matches("abc𝅗def", "abc.def")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abc𝅚def", "[𝅐-𝅘𝅥]", "𝅘𝅥")</x:label>
      <x:variable name="expr" as="xs:string">replace("abc𝅚def", "[𝅐-𝅘𝅥]", "𝅘𝅥")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>replace("abc𝅗def", "[^a-f]", "###")</x:label>
      <x:variable name="expr" as="xs:string">replace("abc𝅗def", "[^a-f]", "###")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(substring("􏰀A", 2, 1))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(substring("􏰀A", 2, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/misc/XMLEdition.xml">
    <x:scenario>
      <x:label>deep-equal(string-to-codepoints('&#xD;
'), (13, 10))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(string-to-codepoints('&#xD;
'), (13, 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-dayTimeDuration-to-date.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-30Z") + xs:dayTimeDuration("P2DT2H30M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-30Z") + xs:dayTimeDuration("P2DT2H30M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("2000-12-12Z") + xs:dayTimeDuration("P19DT13H10M"))) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("2000-12-12Z") + xs:dayTimeDuration("P19DT13H10M"))) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1999-10-23Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1999-10-23Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:date("1998-09-12Z") + xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:date("1998-09-12Z") + xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:date("1962-03-12Z") + xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:date("1962-03-12Z") + xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:date("1988-01-28Z") + xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:date("1988-01-28Z") + xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("1989-07-05Z") + xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("1989-07-05Z") + xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("0001-01-01Z") + xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("0001-01-01Z") + xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1993-12-09Z") + xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:date("1993-12-09Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1993-12-09Z") + xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:date("1993-12-09Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1985-07-05Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:date("1985-07-05Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1985-07-05Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:date("1985-07-05Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-03-02Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-03-02Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-05Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:date("1980-05-05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-05Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:date("1980-05-05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1979-12-12Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:date("1979-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1979-12-12Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:date("1979-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1978-12-12Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:date("1978-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1978-12-12Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:date("1978-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1977-12-12Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:date("1977-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1977-12-12Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:date("1977-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-08-12") + xs:dayTimeDuration("P23DT09H32M59S") eq xs:date("1999-09-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-08-12") + xs:dayTimeDuration("P23DT09H32M59S") eq xs:date("1999-09-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P23DT09H32M59S") + xs:date("1999-08-12") eq xs:date("1999-09-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P23DT09H32M59S") + xs:date("1999-08-12") eq xs:date("1999-09-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-dayTimeDuration-to-dateTime.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-10-30T11:12:00") + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-10-30T11:12:00") + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("2000-12-12T11:10:03Z") + xs:dayTimeDuration("P12DT10H07M"))) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("2000-12-12T11:10:03Z") + xs:dayTimeDuration("P12DT10H07M"))) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1999-10-23T03:12:23Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1999-10-23T03:12:23Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dateTime("1998-09-12T13:23:23Z") + xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dateTime("1998-09-12T13:23:23Z") + xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dateTime("1962-03-12T12:34:09Z") + xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dateTime("1962-03-12T12:34:09Z") + xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dateTime("1988-01-28T12:34:12Z") + xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dateTime("1988-01-28T12:34:12Z") + xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("1989-07-05T10:10:10Z") + xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("1989-07-05T10:10:10Z") + xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("0001-01-01T11:11:11Z") + xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("0001-01-01T11:11:11Z") + xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1993-12-09T13:13:13Z") + xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:dateTime("1993-12-09T13:13:13Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1993-12-09T13:13:13Z") + xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:dateTime("1993-12-09T13:13:13Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1985-07-05T14:14:14Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dateTime("1985-07-05T15:15:15Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1985-07-05T14:14:14Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dateTime("1985-07-05T15:15:15Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-03-02T16:12:10Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-03-02T16:12:10Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1980-05-05T17:17:17Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:dateTime("1980-05-05T17:17:17Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1980-05-05T17:17:17Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:dateTime("1980-05-05T17:17:17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1979-12-12T18:18:18Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:dateTime("1979-12-12T16:15:14Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1979-12-12T18:18:18Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:dateTime("1979-12-12T16:15:14Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1978-12-12T12:45:12Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:dateTime("1978-12-12T16:34:23Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1978-12-12T12:45:12Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:dateTime("1978-12-12T16:34:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1977-12-12T13:12:15Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:dateTime("1977-12-12T15:56:10Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1977-12-12T13:12:15Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:dateTime("1977-12-12T15:56:10Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") + xs:dateTime("1999-10-12T08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") + xs:dateTime("1999-10-12T08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:12:12") + xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:12:12") + xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:12") + xs:dateTime("1999-10-12T08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:12") + xs:dateTime("1999-10-12T08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:12:12") + xs:time("08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:12:12") + xs:time("08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-dayTimeDuration-to-time.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") + xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") + xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:12:00") + xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:12:00") + xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:12:00+03:00") + xs:dayTimeDuration("P1DT3H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:12:00+03:00") + xs:dayTimeDuration("P1DT3H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("12:12:01Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("12:12:01Z") + xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:time("13:12:00Z") + xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:time("13:12:00Z") + xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:time("02:02:02Z") + xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:time("02:02:02Z") + xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:time("01:01:01Z") + xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:time("01:01:01Z") + xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:time("10:02:03Z") + xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:time("10:02:03Z") + xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("08:02:06") + xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("08:02:06") + xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("10:10:10Z") + xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:time("09:02:02Z") + xs:dayTimeDuration("P04DT04H04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("10:10:10Z") + xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:time("09:02:02Z") + xs:dayTimeDuration("P04DT04H04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("02:03:01Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:time("02:03:01Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("02:03:01Z") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:time("02:03:01Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("02:02:02Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("02:02:02Z") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("01:03:03Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:time("04:03:05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("01:03:03Z") + xs:dayTimeDuration("P23DT11H11M")) eq xs:time("04:03:05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("04:04:05Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:time("05:08:02Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("04:04:05Z") + xs:dayTimeDuration("P08DT08H05M")) ne xs:time("05:08:02Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("08:09:09Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:time("09:08:10Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("08:09:09Z") + xs:dayTimeDuration("P17DT10H02M")) le xs:time("09:08:10Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("09:06:07Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:time("01:01:01Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("09:06:07Z") + xs:dayTimeDuration("P18DT02H02M")) ge xs:time("01:01:01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:time("12:07:08Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:time("12:07:08Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:32") + xs:dayTimeDuration("P23DT09H32M59S") eq xs:time("17:45:31")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:32") + xs:dayTimeDuration("P23DT09H32M59S") eq xs:time("17:45:31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P23DT09H32M59S") + xs:time("08:12:32") eq xs:time("17:45:31")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P23DT09H32M59S") + xs:time("08:12:32") eq xs:time("17:45:31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("10:10:10") + xs:time("23:10:10")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("10:10:10") + xs:time("23:10:10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-dayTimeDurations.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") + xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") + xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") + xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P2DT12H5M") + xs:dayTimeDuration("P5DT12H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P2DT12H5M") + xs:dayTimeDuration("P5DT12H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P10DT10H11M") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P10DT10H11M") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P20DT20H10M") + xs:dayTimeDuration("P19DT13H10M")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P20DT20H10M") + xs:dayTimeDuration("P19DT13H10M")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") + xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") + xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") + xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") + xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dayTimeDuration("P02DT06H09M") + xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dayTimeDuration("P02DT06H09M") + xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P03DT04H08M") + xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P03DT04H08M") + xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H01M") + xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H01M") + xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P01DT02H01M") + xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:dayTimeDuration("P02DT03H03M") + xs:dayTimeDuration("P04DT04H04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P01DT02H01M") + xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:dayTimeDuration("P02DT03H03M") + xs:dayTimeDuration("P04DT04H04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P05DT09H02M") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dayTimeDuration("P05DT05H03M") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P05DT09H02M") + xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dayTimeDuration("P05DT05H03M") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P42DT10H10M") + xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P42DT10H10M") + xs:dayTimeDuration("P10DT10H10M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P42DT10H10M") + xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P42DT10H10M") + xs:dayTimeDuration("P10DT10H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT08H11M") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT08H11M") + xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P23DT11H11M") + xs:dayTimeDuration("P23DT11H11M")) eq xs:dayTimeDuration("P23DT11H11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P23DT11H11M") + xs:dayTimeDuration("P23DT11H11M")) eq xs:dayTimeDuration("P23DT11H11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P21DT08H12M") + xs:dayTimeDuration("P08DT08H05M")) ne xs:dayTimeDuration("P08DT08H05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P21DT08H12M") + xs:dayTimeDuration("P08DT08H05M")) ne xs:dayTimeDuration("P08DT08H05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT10H01M") + xs:dayTimeDuration("P17DT10H02M")) le xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT10H01M") + xs:dayTimeDuration("P17DT10H02M")) le xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P13DT09H09M") + xs:dayTimeDuration("P18DT02H02M")) ge xs:dayTimeDuration("P18DT02H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P13DT09H09M") + xs:dayTimeDuration("P18DT02H02M")) ge xs:dayTimeDuration("P18DT02H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") + xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") + xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") + xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") + xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") + xs:dayTimeDuration("P3DT12H31M56.303S") eq xs:dayTimeDuration("P6DT16H34M59.403S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") + xs:dayTimeDuration("P3DT12H31M56.303S") eq xs:dayTimeDuration("P6DT16H34M59.403S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-yearMonthDuration-to-date.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") + xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") + xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-30") + xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-30") + xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("2000-12-12Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("2000-12-12Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1999-10-23Z") + xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1999-10-23Z") + xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:date("1998-09-12Z") + xs:yearMonthDuration("P20Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:date("1998-09-12Z") + xs:yearMonthDuration("P20Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:date("1962-03-12Z") + xs:yearMonthDuration("P10Y01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:date("1962-03-12Z") + xs:yearMonthDuration("P10Y01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:date("1988-01-28Z") + xs:yearMonthDuration("P09Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:date("1988-01-28Z") + xs:yearMonthDuration("P09Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("1989-07-05Z") + xs:yearMonthDuration("P08Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("1989-07-05Z") + xs:yearMonthDuration("P08Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("0001-01-01Z") + xs:yearMonthDuration("-P20Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("0001-01-01Z") + xs:yearMonthDuration("-P20Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1993-12-09Z") + xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:date("1993-12-09Z") + xs:yearMonthDuration("P03Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1993-12-09Z") + xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:date("1993-12-09Z") + xs:yearMonthDuration("P03Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1985-07-05Z") + xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:date("1985-07-05Z") + xs:yearMonthDuration("P02Y02M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1985-07-05Z") + xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:date("1985-07-05Z") + xs:yearMonthDuration("P02Y02M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-03-02Z") + xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-03-02Z") + xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-05Z") + xs:yearMonthDuration("P23Y11M")) eq xs:date("1980-05-05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-05Z") + xs:yearMonthDuration("P23Y11M")) eq xs:date("1980-05-05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1979-12-12Z") + xs:yearMonthDuration("P08Y08M")) ne xs:date("1979-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1979-12-12Z") + xs:yearMonthDuration("P08Y08M")) ne xs:date("1979-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1978-12-12Z") + xs:yearMonthDuration("P17Y12M")) le xs:date("1978-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1978-12-12Z") + xs:yearMonthDuration("P17Y12M")) le xs:date("1978-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1977-12-12Z") + xs:yearMonthDuration("P18Y02M")) ge xs:date("1977-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1977-12-12Z") + xs:yearMonthDuration("P18Y02M")) ge xs:date("1977-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-08-12") + xs:yearMonthDuration("P3Y7M") eq xs:date("2003-03-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-08-12") + xs:yearMonthDuration("P3Y7M") eq xs:date("2003-03-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y7M") + xs:date("1999-08-12") eq xs:date("2003-03-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y7M") + xs:date("1999-08-12") eq xs:date("2003-03-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y") - xs:date("1999-08-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y") - xs:date("1999-08-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y") - xs:dateTime("1999-08-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y") - xs:dateTime("1999-08-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-yearMonthDuration-to-dateTime.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") + xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-10-30T11:12:00") + xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-10-30T11:12:00") + xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("2000-12-12T12:12:12Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("2000-12-12T12:12:12Z") + xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1999-10-23T13:45:45Z") + xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1999-10-23T13:45:45Z") + xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dateTime("1998-09-12T13:56:12Z") + xs:yearMonthDuration("P20Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dateTime("1998-09-12T13:56:12Z") + xs:yearMonthDuration("P20Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dateTime("1962-03-12T10:12:34Z") + xs:yearMonthDuration("P10Y01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dateTime("1962-03-12T10:12:34Z") + xs:yearMonthDuration("P10Y01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dateTime("1988-01-28T13:45:23Z") + xs:yearMonthDuration("P09Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dateTime("1988-01-28T13:45:23Z") + xs:yearMonthDuration("P09Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("1989-07-05T14:34:36Z") + xs:yearMonthDuration("P08Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("1989-07-05T14:34:36Z") + xs:yearMonthDuration("P08Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("0001-01-01T01:01:01Z") + xs:yearMonthDuration("-P20Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("0001-01-01T01:01:01Z") + xs:yearMonthDuration("-P20Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1993-12-09T10:10:10Z") + xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:dateTime("1993-12-09T10:10:10Z") + xs:yearMonthDuration("P03Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1993-12-09T10:10:10Z") + xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:dateTime("1993-12-09T10:10:10Z") + xs:yearMonthDuration("P03Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1985-07-05T09:09:09Z") + xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") + xs:yearMonthDuration("P02Y02M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1985-07-05T09:09:09Z") + xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") + xs:yearMonthDuration("P02Y02M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-03-02T02:02:02Z") + xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-03-02T02:02:02Z") + xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1980-05-05T05:05:05Z") + xs:yearMonthDuration("P23Y11M")) eq xs:dateTime("1980-05-05T05:05:05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1980-05-05T05:05:05Z") + xs:yearMonthDuration("P23Y11M")) eq xs:dateTime("1980-05-05T05:05:05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1979-12-12T09:09:09Z") + xs:yearMonthDuration("P08Y08M")) ne xs:dateTime("1979-12-12T09:09:09Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1979-12-12T09:09:09Z") + xs:yearMonthDuration("P08Y08M")) ne xs:dateTime("1979-12-12T09:09:09Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1978-12-12T07:07:07Z") + xs:yearMonthDuration("P17Y12M")) le xs:dateTime("1978-12-12T07:07:07Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1978-12-12T07:07:07Z") + xs:yearMonthDuration("P17Y12M")) le xs:dateTime("1978-12-12T07:07:07Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1977-12-12T03:03:03Z") + xs:yearMonthDuration("P18Y02M")) ge xs:dateTime("1977-12-12T03:03:03Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1977-12-12T03:03:03Z") + xs:yearMonthDuration("P18Y02M")) ge xs:dateTime("1977-12-12T03:03:03Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-07-19T08:23:01.765") + xs:yearMonthDuration("P3Y35M") eq xs:dateTime("2005-06-19T08:23:01.765")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-07-19T08:23:01.765") + xs:yearMonthDuration("P3Y35M") eq xs:dateTime("2005-06-19T08:23:01.765")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y35M") + xs:dateTime("1999-07-19T08:23:01.765") eq xs:dateTime("2005-06-19T08:23:01.765")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y35M") + xs:dateTime("1999-07-19T08:23:01.765") eq xs:dateTime("2005-06-19T08:23:01.765")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") + xs:time("08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") + xs:time("08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:12") + xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:12") + xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") + xs:time("08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") + xs:time("08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:12") + xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:12") + xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/add-yearMonthDurations.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") + xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") + xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") + xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2Y11M") + xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2Y11M") + xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P10Y11M") + xs:yearMonthDuration("P12Y07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P10Y11M") + xs:yearMonthDuration("P12Y07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P20Y10M") + xs:yearMonthDuration("P19Y10M")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P20Y10M") + xs:yearMonthDuration("P19Y10M")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:yearMonthDuration("P11Y04M") + xs:yearMonthDuration("P02Y11M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:yearMonthDuration("P11Y04M") + xs:yearMonthDuration("P02Y11M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") + xs:yearMonthDuration("P03Y06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") + xs:yearMonthDuration("P03Y06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:yearMonthDuration("P02Y09M") + xs:yearMonthDuration("P10Y01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:yearMonthDuration("P02Y09M") + xs:yearMonthDuration("P10Y01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P03Y08M") + xs:yearMonthDuration("P01Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P03Y08M") + xs:yearMonthDuration("P01Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") + xs:yearMonthDuration("-P11Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") + xs:yearMonthDuration("-P11Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P01Y01M") + xs:yearMonthDuration("P02Y02M"))) and fn:string((xs:yearMonthDuration("P02Y03M") + xs:yearMonthDuration("P04Y04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P01Y01M") + xs:yearMonthDuration("P02Y02M"))) and fn:string((xs:yearMonthDuration("P02Y03M") + xs:yearMonthDuration("P04Y04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P05Y02M") + xs:yearMonthDuration("P03Y04M"))) or fn:string((xs:yearMonthDuration("P05Y03M") + xs:yearMonthDuration("P01Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P05Y02M") + xs:yearMonthDuration("P03Y04M"))) or fn:string((xs:yearMonthDuration("P05Y03M") + xs:yearMonthDuration("P01Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P42Y10M") + xs:yearMonthDuration("P28Y10M")) div (xs:yearMonthDuration("P10Y10M") + xs:yearMonthDuration("P60Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P42Y10M") + xs:yearMonthDuration("P28Y10M")) div (xs:yearMonthDuration("P10Y10M") + xs:yearMonthDuration("P60Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M") + xs:yearMonthDuration("P05Y07M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M") + xs:yearMonthDuration("P05Y07M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P23Y11M") + xs:yearMonthDuration("P23Y11M")) eq xs:yearMonthDuration("P23Y11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P23Y11M") + xs:yearMonthDuration("P23Y11M")) eq xs:yearMonthDuration("P23Y11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P21Y12M") + xs:yearMonthDuration("P08Y05M")) ne xs:yearMonthDuration("P08Y05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P21Y12M") + xs:yearMonthDuration("P08Y05M")) ne xs:yearMonthDuration("P08Y05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") + xs:yearMonthDuration("P17Y02M")) le xs:yearMonthDuration("P17Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") + xs:yearMonthDuration("P17Y02M")) le xs:yearMonthDuration("P17Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P13Y09M") + xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P13Y09M") + xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") + xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") + xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") + xs:yearMonthDuration("P3Y3M") eq xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") + xs:yearMonthDuration("P3Y3M") eq xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P32Y43M") + xs:yearMonthDuration("P12Y13M") eq xs:yearMonthDuration("P48Y8M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P32Y43M") + xs:yearMonthDuration("P12Y13M") eq xs:yearMonthDuration("P48Y8M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/anyURI-equal.xml">
    <x:scenario>
      <x:label>xs:anyURI("example.com/") eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") ne xs:anyURI("example.com/No")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") ne xs:anyURI("example.com/No")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") eq xs:string("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") eq xs:string("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("example.com/") eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("example.com/") eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") ne xs:string("example.com/No")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") ne xs:string("example.com/No")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("example.com/") ne xs:anyURI("example.com/No")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("example.com/") ne xs:anyURI("example.com/No")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") eq xs:untypedAtomic("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") eq xs:untypedAtomic("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("example.com/") eq xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("example.com/") eq xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") ne xs:untypedAtomic("example.com/No")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") ne xs:untypedAtomic("example.com/No")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("example.com/") ne xs:anyURI("example.com/No")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("example.com/") ne xs:anyURI("example.com/No")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://example.com/A") eq xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://example.com/A") eq xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") eq xs:string("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") eq xs:string("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") eq xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") eq xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string("http://example.com/A") eq xs:anyURI("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string("http://example.com/A") eq xs:anyURI("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") eq xs:string("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") eq xs:string("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") eq xs:anyURI("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") eq xs:anyURI("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") ne xs:string("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") ne xs:string("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string("http://example.com/A") ne xs:anyURI("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string("http://example.com/A") ne xs:anyURI("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") ne xs:anyURI("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") ne xs:anyURI("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") ne xs:string("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") ne xs:string("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://example.com/A") ne xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://example.com/A") ne xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") ne xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") ne xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/anyURI-greater-than.xml">
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") le xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") le xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") le xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") le xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/B") le xs:anyURI("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/B") le xs:anyURI("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/B") ge xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/B") ge xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://example.com/A") le xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://example.com/A") le xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/B") le xs:string("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/B") le xs:string("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/B") gt xs:string("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/B") gt xs:string("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/anyURI-less-than.xml">
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/A") lt xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/A") lt xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/B") lt xs:anyURI("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/B") lt xs:anyURI("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://example.com/A") lt xs:anyURI("http://example.com/B")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://example.com/A") lt xs:anyURI("http://example.com/B")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/B") lt xs:string("http://example.com/A"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/B") lt xs:string("http://example.com/A"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string("http://example.com/A") gt xs:anyURI("http://example.com/B"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/B") gt xs:anyURI("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://example.com/B") gt xs:string("http://example.com/A")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://example.com/B") gt xs:string("http://example.com/A")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/base64Binary-equal.xml">
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs") eq xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs") ne xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("cW9kanZzY3ZlaWthYXVreGxibm11dW91ZmllZGplbXZza2FqcGlwdWlxcG5xbHR4dmFjcWFjbGN1Z3BqYmVuZWhsdHhzeHZs")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") or xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp") or xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") eq xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or (xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:base64Binary("cmxjZ3R4c3JidnllcmVuZG91aWpsbXV5Z2NhamxpcmJkaWFhbmFob2VsYXVwZmJ1Z2dmanl2eHlzYmhheXFtZXR0anV2dG1q") ne xs:base64Binary("d2J1bnB0Y3lucWtvYXdpb2xoZWNwZXlkdG90eHB3ZXJqcnliZXFubmJjZXBmbGx3aGN3cmNndG9xb2hvdHdlY2pzZ3h5bnlp")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("03")) eq xs:base64Binary(xs:hexBinary("03"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("03")) eq xs:base64Binary(xs:hexBinary("03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("03")) ne xs:base64Binary(xs:hexBinary("13"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("03")) ne xs:base64Binary(xs:hexBinary("13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("/w==")) eq xs:hexBinary("FF")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("/w==")) eq xs:hexBinary("FF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/boolean-equal.xml">
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:boolean("true") and xs:boolean("true")) eq (xs:boolean("false") and xs:boolean("false"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:boolean("true") and xs:boolean("true")) eq (xs:boolean("false") and xs:boolean("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true") and xs:boolean("true")) eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true") and xs:boolean("true")) eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false") and xs:boolean("false")) eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false") and xs:boolean("false")) eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) eq fn:not(xs:boolean("false"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) eq fn:not(xs:boolean("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false") and xs:boolean("true")) eq fn:not(xs:boolean("false") and xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false") and xs:boolean("true")) eq fn:not(xs:boolean("false") and xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 lt 7) eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">(7 lt 7) eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(7 lt 7) eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(7 lt 7) eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(7 lt 7) and xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(7 lt 7) and xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((7 eq 7) eq xs:boolean("true")) and (xs:boolean("false") eq xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">((7 eq 7) eq xs:boolean("true")) and (xs:boolean("false") eq xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((7 eq 7) eq xs:boolean("true")) or (xs:boolean("false") eq xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">((7 eq 7) eq xs:boolean("true")) or (xs:boolean("false") eq xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:starts-with("Query","Que") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with("Query","Que") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:ends-with("Query","ry") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with("Query","ry") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq true() eq true() eq true()</x:label>
      <x:variable name="expr" as="xs:string">true() eq true() eq true() eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((true() eq true()) eq true()) eq true()</x:label>
      <x:variable name="expr" as="xs:string">((true() eq true()) eq true()) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean('false') eq xs:boolean('1')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean('false') eq xs:boolean('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean('false') eq xs:boolean('0')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean('false') eq xs:boolean('0')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean('0')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean('0')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean('true') eq xs:boolean('1')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean('true') eq xs:boolean('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean('true') eq xs:boolean('0')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean('true') eq xs:boolean('0')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean('1')</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() eq false()</x:label>
      <x:variable name="expr" as="xs:string">false() eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq true()</x:label>
      <x:variable name="expr" as="xs:string">true() eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() ne true()</x:label>
      <x:variable name="expr" as="xs:string">false() ne true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() ne false()</x:label>
      <x:variable name="expr" as="xs:string">true() ne false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((((((((((((false() eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()</x:label>
      <x:variable name="expr" as="xs:string">((((((((((((false() eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/boolean-greater-than.xml">
    <x:scenario>
      <x:label>xs:boolean("false") gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") gt xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") gt xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") gt xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") gt xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") le xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") le xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") le xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") le xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") gt xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") gt xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") gt xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") gt xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") gt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") gt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") gt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") gt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") le xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") le xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") le xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") le xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") le xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") le xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") le xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") le xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() gt false()</x:label>
      <x:variable name="expr" as="xs:string">true() gt false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() ge false()</x:label>
      <x:variable name="expr" as="xs:string">true() ge false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() ge true()</x:label>
      <x:variable name="expr" as="xs:string">true() ge true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/boolean-less-than.xml">
    <x:scenario>
      <x:label>xs:boolean("false") lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") lt xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") lt xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") lt xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") lt xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") ge xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") ge xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") ge xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") ge xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("true")) ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("true")) ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:boolean("false")) ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:boolean("false")) ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(7 eq 7) ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">(7 eq 7) ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") lt xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") lt xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") lt xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") lt xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") lt xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") lt xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") lt xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") lt xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("1") ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("1") ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("0") ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("0") ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") ge xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") ge xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") ge xs:boolean("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") ge xs:boolean("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") ge xs:boolean("false")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") ge xs:boolean("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") ge xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") ge xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() lt true()</x:label>
      <x:variable name="expr" as="xs:string">false() lt true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() le true()</x:label>
      <x:variable name="expr" as="xs:string">false() le true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() le true()</x:label>
      <x:variable name="expr" as="xs:string">true() le true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/concatenate.xml">
    <x:scenario>
      <x:label>(1,2,3,4,5)</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3,4,5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,(2,3),4,5)</x:label>
      <x:variable name="expr" as="xs:string">(1,(2,3),4,5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, (), 3, 4)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, (), 3, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2 to 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2 to 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 2)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((15 to 10))</x:label>
      <x:variable name="expr" as="xs:string">count((15 to 10))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse(10 to 15)</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse(10 to 15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//empnum</x:label>
      <x:variable name="expr" as="xs:string">//empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works//empnum,$staff//empname)</x:label>
      <x:variable name="expr" as="xs:string">($works//empnum,$staff//empname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 1 + 1, 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 1 + 1, 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 3 - 1, 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 3 - 1, 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2 * 1, 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2 * 1, 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 4 div 2, 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 4 div 2, 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 4 idiv 2, 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, 4 idiv 2, 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, fn:count((1, 2)), 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, fn:count((1, 2)), 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, fn:string-length("AB"), 3, 4, 5)</x:label>
      <x:variable name="expr" as="xs:string">(1, fn:string-length("AB"), 3, 4, 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:false(),fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(fn:false(),fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:not("true"),fn:not("false"))</x:label>
      <x:variable name="expr" as="xs:string">(fn:not("true"),fn:not("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true() and fn:true(), fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(fn:true() and fn:true(), fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true() or fn:true(), fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(fn:true() or fn:true(), fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:string("ABC"), "D", "E")</x:label>
      <x:variable name="expr" as="xs:string">(xs:string("ABC"), "D", "E")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(1), 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(1), 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(1), 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(1), 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("http://www.example.com"),xs:anyURI("http://www.example1.com"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("http://www.example.com"),xs:anyURI("http://www.example1.com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(1.1), 2.2, 3.3)</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(1.1), 2.2, 3.3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(1.2E2), 2.2E2, 3.3E2)</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(1.2E2), 2.2E2, 3.3E2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:boolean(fn:true()), fn:false(), fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:boolean(fn:true()), fn:false(), fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2004-12-25Z"),xs:date("2004-12-26Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2004-12-25Z"),xs:date("2004-12-26Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1999-11-28T09:00:00Z"),xs:dateTime("1998-11-28T09:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1999-11-28T09:00:00Z"),xs:dateTime("1998-11-28T09:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("08:00:00+09:00"),xs:time("08:00:00+10:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("08:00:00+09:00"),xs:time("08:00:00+10:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1) , (2)</x:label>
      <x:variable name="expr" as="xs:string">(1) , (2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("a") , xs:string("b")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("a") , xs:string("b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("a") , (), "xyz"</x:label>
      <x:variable name="expr" as="xs:string">xs:string("a") , (), "xyz"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"xyz" , xs:string(" "), "b"</x:label>
      <x:variable name="expr" as="xs:string">"xyz" , xs:string(" "), "b"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("a") , xs:anyURI("www.example.com")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("a") , xs:anyURI("www.example.com")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("hello") , xs:integer("100"), xs:anyURI("www.example.com")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("hello") , xs:integer("100"), xs:anyURI("www.example.com")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("www.example.com") , xs:decimal("1.01")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("www.example.com") , xs:decimal("1.01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1.01"), xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1.01"), xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") , xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") , xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF"), xs:double("-INF"), xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF"), xs:double("-INF"), xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") , xs:boolean("0"), xs:integer("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") , xs:boolean("0"), xs:integer("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false"), xs:boolean("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false"), xs:boolean("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1993-03-31") , xs:boolean("true"), xs:string("abc")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1993-03-31") , xs:boolean("true"), xs:string("abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1972-12-31T00:00:00Z") , (())</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1972-12-31T00:00:00Z") , (())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:30:00Z") , xs:string(" ") , xs:decimal("2.000000000000002")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:30:00Z") , xs:string(" ") , xs:decimal("2.000000000000002")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() , xs:string(" ") , xs:decimal("2.000000000000002")</x:label>
      <x:variable name="expr" as="xs:string">() , xs:string(" ") , xs:decimal("2.000000000000002")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1+1), (2-2)</x:label>
      <x:variable name="expr" as="xs:string">(1+1), (2-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,2),(1,2,3),(123,""),(),("")</x:label>
      <x:variable name="expr" as="xs:string">(1,2,2),(1,2,3),(123,""),(),("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//book/price, (), (1)</x:label>
      <x:variable name="expr" as="xs:string">//book/price, (), (1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//book/price, //book/title</x:label>
      <x:variable name="expr" as="xs:string">//book/price, //book/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(((1, (2, (3, 4, (5, 6)), 7), 8, (9, 10), 11)), (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(((1, (2, (3, 4, (5, 6)), 7), 8, (9, 10), 11)), (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(((), (), ((), (), ((), (), (())), ()), (), (())))</x:label>
      <x:variable name="expr" as="xs:string">empty(((), (), ((), (), ((), (), (())), ()), (), (())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((), (), ((), (), ((), (), ("str")), ()), (), (())) eq "str"</x:label>
      <x:variable name="expr" as="xs:string">((), (), ((), (), ((), (), ("str")), ()), (), (())) eq "str"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/date-equal.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") eq xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") eq xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") eq xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") eq xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") eq xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") eq xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") eq xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") eq xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") eq xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") eq xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ne xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ne xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") ne xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") ne xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") ne xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") ne xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ne xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ne xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ne xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ne xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-08-12") eq xs:date("2004-08-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-08-12") eq xs:date("2004-08-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-08-12") eq xs:date("2003-08-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-08-12") eq xs:date("2003-08-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-08-12") ne xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-08-12") ne xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-12") ne xs:date("2004-07-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-12") ne xs:date("2004-07-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04-00:00") eq xs:date("1999-12-04Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04-00:00") eq xs:date("1999-12-04Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04+00:00") eq xs:date("1999-12-04Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04+00:00") eq xs:date("1999-12-04Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04Z") eq xs:date("1999-12-04Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04Z") eq xs:date("1999-12-04Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04-00:00") eq xs:date("1999-12-04+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04-00:00") eq xs:date("1999-12-04+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("01:01:01-03:00") ne xs:time("01:01:01+03:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("01:01:01-03:00") ne xs:time("01:01:01+03:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-25252734927766555-06-07+02:00") = xs:date("25252734927766555-07-28")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-25252734927766555-06-07+02:00") = xs:date("25252734927766555-07-28")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("25252734927766555-07-28") != xs:date("-25252734927766555-06-07+02:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("25252734927766555-07-28") != xs:date("-25252734927766555-06-07+02:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") eq xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") eq xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") eq xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") eq xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") eq xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") eq xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") eq xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") eq xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") ne xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") ne xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") ne xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") ne xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") ne xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") ne xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") ne xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") ne xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/date-greater-than.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") gt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") gt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") gt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") gt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") gt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") gt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") gt xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") gt xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") gt xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") gt xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") le xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") le xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") le xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") le xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2004-12-25Z") gt xs:date("2004-12-25+07:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2004-12-25Z") gt xs:date("2004-12-25+07:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2004-12-25-12:00") gt xs:date("2004-12-26+12:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2004-12-25-12:00") gt xs:date("2004-12-26+12:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:date("2005-12-26Z") gt xs:date("2005-12-25Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:date("2005-12-26Z") gt xs:date("2005-12-25Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2005-04-02Z") ge xs:date("2005-04-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2005-04-02Z") ge xs:date("2005-04-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2000-11-09Z") gt xs:date("2000-11-10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2000-11-09Z") gt xs:date("2000-11-10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2005-10-23Z") ge xs:date("2005-10-25Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2005-10-23Z") ge xs:date("2005-10-25Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-01-01Z") gt xs:date("2000-01-01Z")) and (xs:date("2001-02-02Z") gt xs:date("2001-03-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-01-01Z") gt xs:date("2000-01-01Z")) and (xs:date("2001-02-02Z") gt xs:date("2001-03-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-01-25Z") ge xs:date("2000-10-26Z")) and (xs:date("1975-10-26Z") ge xs:date("1975-10-28Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-01-25Z") ge xs:date("2000-10-26Z")) and (xs:date("1975-10-26Z") ge xs:date("1975-10-28Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-26Z") gt xs:date("2000-10-28Z")) or (xs:date("1976-10-28Z") gt xs:date("1976-10-28Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-26Z") gt xs:date("2000-10-28Z")) or (xs:date("1976-10-28Z") gt xs:date("1976-10-28Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1976-10-25Z") ge xs:date("1976-10-28Z")) or (xs:date("1980-08-11Z") ge xs:date("1980-08-10Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1976-10-25Z") ge xs:date("1976-10-28Z")) or (xs:date("1980-08-11Z") ge xs:date("1980-08-10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-18Z") gt xs:date("1980-05-17Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-18Z") gt xs:date("1980-05-17Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-25Z") ge xs:date("2000-10-26Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-25Z") ge xs:date("2000-10-26Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-01-01Z") gt xs:date("1980-10-01Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-01-01Z") gt xs:date("1980-10-01Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-10-25Z") ge xs:date("1980-10-26Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-10-25Z") ge xs:date("1980-10-26Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-13") gt xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-13") gt xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-12") gt xs:date("2004-07-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-12") gt xs:date("2004-07-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-12") gt xs:date("2004-07-13"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-12") gt xs:date("2004-07-13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-12") ge xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-12") ge xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-13") ge xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-13") ge xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-11") ge xs:date("2004-07-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-11") ge xs:date("2004-07-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("25252734927766555-07-28") &gt; xs:date("-25252734927766555-06-07+02:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("25252734927766555-07-28") &gt; xs:date("-25252734927766555-06-07+02:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") lt xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") lt xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") lt xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") lt xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") lt xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") lt xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") lt xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") lt xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") ge xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") ge xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") ge xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") ge xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") ge xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") ge xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") ge xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") ge xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/date-less-than.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") lt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") lt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") lt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") lt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") lt xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") lt xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") lt xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") lt xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") lt xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") lt xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") ge xs:date("1970-01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") ge xs:date("1970-01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("1983-11-17Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("1983-11-17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") ge xs:date("2030-12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") ge xs:date("2030-12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2004-12-25Z") lt xs:date("2004-12-25-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2004-12-25Z") lt xs:date("2004-12-25-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2004-12-25-12:00") le xs:date("2004-12-26+12:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2004-12-25-12:00") le xs:date("2004-12-26+12:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:date("2005-12-25Z") lt xs:date("2005-12-26Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:date("2005-12-25Z") lt xs:date("2005-12-26Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2005-04-02Z") le xs:date("2005-04-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2005-04-02Z") le xs:date("2005-04-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2000-12-25Z") lt xs:date("2000-11-25Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2000-12-25Z") lt xs:date("2000-11-25Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:date("2005-10-25Z") le xs:date("2005-10-23Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:date("2005-10-25Z") le xs:date("2005-10-23Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-01-01Z") lt xs:date("2000-01-01Z")) and (xs:date("2001-02-02Z") lt xs:date("2001-03-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-01-01Z") lt xs:date("2000-01-01Z")) and (xs:date("2001-02-02Z") lt xs:date("2001-03-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-01-25Z") le xs:date("2000-10-26Z")) and (xs:date("1975-10-26Z") le xs:date("1975-10-28Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-01-25Z") le xs:date("2000-10-26Z")) and (xs:date("1975-10-26Z") le xs:date("1975-10-28Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-26Z") lt xs:date("2000-10-28Z")) or (xs:date("1976-10-28Z") lt xs:date("1976-10-28Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-26Z") lt xs:date("2000-10-28Z")) or (xs:date("1976-10-28Z") lt xs:date("1976-10-28Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1976-10-25Z") le xs:date("1976-10-28Z")) or (xs:date("1980-08-11Z") le xs:date("1980-08-10Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1976-10-25Z") le xs:date("1976-10-28Z")) or (xs:date("1980-08-11Z") le xs:date("1980-08-10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-18Z") lt xs:date("1980-05-17Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-18Z") lt xs:date("1980-05-17Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("2000-10-25Z") le xs:date("2000-10-26Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("2000-10-25Z") le xs:date("2000-10-26Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-01-01Z") lt xs:date("1980-10-01Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-01-01Z") lt xs:date("1980-10-01Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-10-25Z") le xs:date("1980-10-26Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-10-25Z") le xs:date("1980-10-26Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-12") lt xs:date("2004-07-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-12") lt xs:date("2004-07-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-13") lt xs:date("2004-07-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-13") lt xs:date("2004-07-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-13") lt xs:date("2004-07-13"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-13") lt xs:date("2004-07-13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-12") le xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-12") le xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-07-12") le xs:date("2004-07-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-07-12") le xs:date("2004-07-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-07-13") le xs:date("2004-07-12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-07-13") le xs:date("2004-07-12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("25252734927766555-07-28") &gt;= xs:date("-25252734927766555-06-07+02:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("25252734927766555-07-28") &gt;= xs:date("-25252734927766555-06-07+02:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") lt xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") lt xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") lt xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") lt xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") lt xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") lt xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") lt xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") lt xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-30") le xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-30") le xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") le xs:date("2008-01-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") le xs:date("2008-01-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31") le xs:date("2008-01-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31") le xs:date("2008-01-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-01-31+09:00") le xs:date("2008-01-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-01-31+09:00") le xs:date("2008-01-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/dateTime-equal.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") eq xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") eq xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") ne xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ne xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.13"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-08-12T23:01:04.12") eq xs:dateTime("2004-08-12T23:01:04.13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-08-12T23:01:05.12") ne xs:dateTime("2004-08-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-08-12T23:01:05.12") ne xs:dateTime("2004-08-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-12T23:01:04.12") ne xs:dateTime("2004-07-12T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-12T23:01:04.12") ne xs:dateTime("2004-07-12T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T16:00:12.345+00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T16:00:12.345+00:00") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T16:00:12.345Z") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T16:00:12.345Z") eq xs:dateTime("1999-12-04T16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T16:00:12.345-00:00") eq xs:dateTime("1999-12-04T16:00:12.345+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") eq xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") eq xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") ne xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") ne xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") le xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") le xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") lt xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") lt xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") ge xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") ge xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") gt xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") gt xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") eq xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") eq xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") ne xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") ne xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") le xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") le xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") lt xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") lt xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") ge xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") ge xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") gt xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") gt xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") eq xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") eq xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") ne xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") ne xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") le xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") le xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") lt xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") lt xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") ge xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") ge xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-04T12:12:23") gt xs:time("22:12:04")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-04T12:12:23") gt xs:time("22:12:04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") eq xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") eq xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") ne xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") ne xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") le xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") le xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") lt xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") lt xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") ge xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") ge xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("22:12:04") gt xs:dateTime("1999-12-04T12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("22:12:04") gt xs:dateTime("1999-12-04T12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-03-06T00:00:00Z") ne xs:dateTime("2002-03-05T00:00:00+03:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-03-06T00:00:00Z") ne xs:dateTime("2002-03-05T00:00:00+03:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") eq xs:dateTime("2008-01-31T01:00:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") eq xs:dateTime("2008-01-31T01:00:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") eq xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") eq xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") eq xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") ne xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") ne xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1972-12-15T00:00:00+12:00") eq xs:dateTime("1972-12-15T00:00:01")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1972-12-15T00:00:00+12:00") eq xs:dateTime("1972-12-15T00:00:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1972-12-15T00:00:00+12:00") ne xs:dateTime("1972-12-15T00:00:01")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1972-12-15T00:00:00+12:00") ne xs:dateTime("1972-12-15T00:00:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/dateTime-greater-than.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") gt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") gt xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") le xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") le xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:dateTime("2004-04-02T12:00:00Z") gt xs:dateTime("2003-04-02T12:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:dateTime("2004-04-02T12:00:00Z") gt xs:dateTime("2003-04-02T12:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2002-04-02T12:00:00Z") gt xs:dateTime("2002-05-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2002-04-02T12:00:00Z") gt xs:dateTime("2002-05-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2008-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2008-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-02T12:00:00Z") gt xs:dateTime("2002-04-02T12:01:00Z")) and (xs:dateTime("2003-04-02T12:00:00Z") gt xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-02T12:00:00Z") gt xs:dateTime("2002-04-02T12:01:00Z")) and (xs:dateTime("2003-04-02T12:00:00Z") gt xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2005-04-02T12:00:20Z")) and (xs:dateTime("2002-04-02T12:10:00Z") ge xs:dateTime("2002-04-03T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-02T12:00:00Z") ge xs:dateTime("2005-04-02T12:00:20Z")) and (xs:dateTime("2002-04-02T12:10:00Z") ge xs:dateTime("2002-04-03T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-06-02T12:00:10Z") gt xs:dateTime("2000-04-04T12:00:00Z")) or (xs:dateTime("2002-04-02T13:00:10Z") gt xs:dateTime("2001-04-02T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-06-02T12:00:10Z") gt xs:dateTime("2000-04-04T12:00:00Z")) or (xs:dateTime("2002-04-02T13:00:10Z") gt xs:dateTime("2001-04-02T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-03T12:00:10Z") ge xs:dateTime("1990-04-02T12:10:00Z")) or (xs:dateTime("1975-04-03T12:10:00Z") ge xs:dateTime("2000-02-02T12:00:09Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-03T12:00:10Z") ge xs:dateTime("1990-04-02T12:10:00Z")) or (xs:dateTime("1975-04-03T12:10:00Z") ge xs:dateTime("2000-02-02T12:00:09Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1990-04-02T12:00:10Z") gt xs:dateTime("2006-06-02T12:10:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1990-04-02T12:00:10Z") gt xs:dateTime("2006-06-02T12:10:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1970-04-02T12:00:20Z") ge xs:dateTime("1980-04-02T12:00:20Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1970-04-02T12:00:20Z") ge xs:dateTime("1980-04-02T12:00:20Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1981-04-02T12:00:00Z") gt xs:dateTime("2003-04-02T12:10:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1981-04-02T12:00:00Z") gt xs:dateTime("2003-04-02T12:10:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1976-04-03T12:00:00Z") ge xs:dateTime("2002-07-02T12:00:30Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1976-04-03T12:00:00Z") ge xs:dateTime("2002-07-02T12:00:30Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-13T23:01:04.12") gt xs:dateTime("2004-07-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-13T23:01:04.12") gt xs:dateTime("2004-07-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-12T23:01:04.12") gt xs:dateTime("2004-07-12T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-12T23:01:04.12") gt xs:dateTime("2004-07-12T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-12T23:01:04.12") gt xs:dateTime("2004-07-13T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-12T23:01:04.12") gt xs:dateTime("2004-07-13T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-12T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-12T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-13T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-13T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-11T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-11T23:01:04.12") ge xs:dateTime("2004-07-12T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") gt xs:dateTime("2008-01-31T01:00:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") gt xs:dateTime("2008-01-31T01:00:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") gt xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") gt xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") gt xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") gt xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") gt xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") gt xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") ge xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") ge xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") ge xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") ge xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") ge xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") ge xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") ge xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") ge xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/dateTime-less-than.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") lt xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") lt xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") ge xs:dateTime("1970-01-01T00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1996-04-07T01:40:52Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("1996-04-07T01:40:52Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("2030-12-31T23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") ge xs:dateTime("2030-12-31T23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:dateTime("2002-04-02T12:00:00Z") lt xs:dateTime("2003-04-02T12:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:dateTime("2002-04-02T12:00:00Z") lt xs:dateTime("2003-04-02T12:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2002-04-02T12:00:00Z") le xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2002-04-02T12:00:00Z") le xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2002-05-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2002-05-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dateTime("2004-04-02T12:00:00Z") le xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dateTime("2004-04-02T12:00:00Z") le xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:01:00Z")) and (xs:dateTime("2003-04-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:01:00Z")) and (xs:dateTime("2003-04-02T12:00:00Z") lt xs:dateTime("2002-04-02T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-02T12:00:00Z") le xs:dateTime("2005-04-02T12:00:20Z")) and (xs:dateTime("2002-04-02T12:10:00Z") le xs:dateTime("2002-04-03T12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-02T12:00:00Z") le xs:dateTime("2005-04-02T12:00:20Z")) and (xs:dateTime("2002-04-02T12:10:00Z") le xs:dateTime("2002-04-03T12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-06-02T12:00:10Z") lt xs:dateTime("2000-04-04T12:00:00Z")) or (xs:dateTime("2002-04-02T13:00:10Z") lt xs:dateTime("2001-04-02T10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-06-02T12:00:10Z") lt xs:dateTime("2000-04-04T12:00:00Z")) or (xs:dateTime("2002-04-02T13:00:10Z") lt xs:dateTime("2001-04-02T10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("2002-04-03T12:00:10Z") le xs:dateTime("1990-04-02T12:10:00Z")) or (xs:dateTime("1975-04-03T12:10:00Z") le xs:dateTime("2000-02-02T12:00:09Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("2002-04-03T12:00:10Z") le xs:dateTime("1990-04-02T12:10:00Z")) or (xs:dateTime("1975-04-03T12:10:00Z") le xs:dateTime("2000-02-02T12:00:09Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1990-04-02T12:00:10Z") lt xs:dateTime("2006-06-02T12:10:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1990-04-02T12:00:10Z") lt xs:dateTime("2006-06-02T12:10:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1970-04-02T12:00:20Z") le xs:dateTime("1980-04-02T12:00:20Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1970-04-02T12:00:20Z") le xs:dateTime("1980-04-02T12:00:20Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1981-04-02T12:00:00Z") lt xs:dateTime("2003-04-02T12:10:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1981-04-02T12:00:00Z") lt xs:dateTime("2003-04-02T12:10:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1976-04-03T12:00:00Z") le xs:dateTime("2002-07-02T12:00:30Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1976-04-03T12:00:00Z") le xs:dateTime("2002-07-02T12:00:30Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-12T23:01:04.12") lt xs:dateTime("2004-07-13T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-12T23:01:04.12") lt xs:dateTime("2004-07-13T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-13T23:01:04.12") lt xs:dateTime("2004-07-12T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-13T23:01:04.12") lt xs:dateTime("2004-07-12T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-13T23:01:04.12") lt xs:dateTime("2004-07-13T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-13T23:01:04.12") lt xs:dateTime("2004-07-13T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-12T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-12T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-07-12T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-07-12T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2004-07-13T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2004-07-13T23:01:04.12") le xs:dateTime("2004-07-12T23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") lt xs:dateTime("2008-01-31T01:00:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") lt xs:dateTime("2008-01-31T01:00:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") lt xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") lt xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") lt xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") lt xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") lt xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") lt xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-30T00:01:00") le xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-30T00:01:00") le xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") le xs:dateTime("2008-01-30T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") le xs:dateTime("2008-01-30T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00") le xs:dateTime("2008-01-31T00:01:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00") le xs:dateTime("2008-01-31T00:01:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-01-31T00:01:00+09:00") le xs:dateTime("2008-01-31T00:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-01-31T00:01:00+09:00") le xs:dateTime("2008-01-31T00:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/dayTimeDuration-greater-than.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") gt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") gt xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:dayTimeDuration("P15DT12H") gt xs:dayTimeDuration("P14DT11H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:dayTimeDuration("P15DT12H") gt xs:dayTimeDuration("P14DT11H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P10DT11H") ge xs:dayTimeDuration("P10DT10H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P10DT11H") ge xs:dayTimeDuration("P10DT10H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P08DT10H") gt xs:dayTimeDuration("P9DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P08DT10H") gt xs:dayTimeDuration("P9DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P07DT09H") ge xs:dayTimeDuration("P09DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P07DT09H") ge xs:dayTimeDuration("P09DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT09H") gt xs:dayTimeDuration("P09DT10H")) and (xs:dayTimeDuration("P10DT01H") gt xs:dayTimeDuration("P08DT06H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT09H") gt xs:dayTimeDuration("P09DT10H")) and (xs:dayTimeDuration("P10DT01H") gt xs:dayTimeDuration("P08DT06H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT09H") ge xs:dayTimeDuration("P10DT01H")) and (xs:dayTimeDuration("P02DT04H") ge xs:dayTimeDuration("P09DT07H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT09H") ge xs:dayTimeDuration("P10DT01H")) and (xs:dayTimeDuration("P02DT04H") ge xs:dayTimeDuration("P09DT07H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT08H") gt xs:dayTimeDuration("P10DT07H")) or (xs:dayTimeDuration("P10DT09H") gt xs:dayTimeDuration("P10DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT08H") gt xs:dayTimeDuration("P10DT07H")) or (xs:dayTimeDuration("P10DT09H") gt xs:dayTimeDuration("P10DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H") ge xs:dayTimeDuration("P09DT06H")) or (xs:dayTimeDuration("P15DT01H") ge xs:dayTimeDuration("P02DT04H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H") ge xs:dayTimeDuration("P09DT06H")) or (xs:dayTimeDuration("P15DT01H") ge xs:dayTimeDuration("P02DT04H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT02H") gt xs:dayTimeDuration("P01DT10H")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT02H") gt xs:dayTimeDuration("P01DT10H")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H") ge xs:dayTimeDuration("P09DT05H")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H") ge xs:dayTimeDuration("P09DT05H")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P30DT10H") gt xs:dayTimeDuration("P01DT02H")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P30DT10H") gt xs:dayTimeDuration("P01DT02H")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT05H") ge xs:dayTimeDuration("P20DT10H")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT05H") ge xs:dayTimeDuration("P20DT10H")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.144S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.144S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.145S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.144S") gt xs:dayTimeDuration("P3DT08H34M12.145S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.144S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.144S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.144S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.144S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/dayTimeDuration-less-than.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") lt xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") lt xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:dayTimeDuration("P13DT12H") lt xs:dayTimeDuration("P14DT11H")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:dayTimeDuration("P13DT12H") lt xs:dayTimeDuration("P14DT11H")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P10DT110H") le xs:dayTimeDuration("P10DT11H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P10DT110H") le xs:dayTimeDuration("P10DT11H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P10DT10H") lt xs:dayTimeDuration("P9DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P10DT10H") lt xs:dayTimeDuration("P9DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P10DT09H") le xs:dayTimeDuration("P09DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P10DT09H") le xs:dayTimeDuration("P09DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT09H") lt xs:dayTimeDuration("P09DT10H")) and (xs:dayTimeDuration("P10DT01H") lt xs:dayTimeDuration("P08DT06H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT09H") lt xs:dayTimeDuration("P09DT10H")) and (xs:dayTimeDuration("P10DT01H") lt xs:dayTimeDuration("P08DT06H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT09H") le xs:dayTimeDuration("P10DT01H")) and (xs:dayTimeDuration("P02DT04H") le xs:dayTimeDuration("P09DT07H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT09H") le xs:dayTimeDuration("P10DT01H")) and (xs:dayTimeDuration("P02DT04H") le xs:dayTimeDuration("P09DT07H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT08H") lt xs:dayTimeDuration("P10DT07H")) or (xs:dayTimeDuration("P10DT09H") lt xs:dayTimeDuration("P10DT09H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT08H") lt xs:dayTimeDuration("P10DT07H")) or (xs:dayTimeDuration("P10DT09H") lt xs:dayTimeDuration("P10DT09H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H") le xs:dayTimeDuration("P09DT06H")) or (xs:dayTimeDuration("P15DT01H") le xs:dayTimeDuration("P02DT04H"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H") le xs:dayTimeDuration("P09DT06H")) or (xs:dayTimeDuration("P15DT01H") le xs:dayTimeDuration("P02DT04H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT02H") lt xs:dayTimeDuration("P01DT10H")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT02H") lt xs:dayTimeDuration("P01DT10H")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H") le xs:dayTimeDuration("P09DT05H")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H") le xs:dayTimeDuration("P09DT05H")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P30DT10H") lt xs:dayTimeDuration("P01DT02H")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P30DT10H") lt xs:dayTimeDuration("P01DT02H")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT05H") le xs:dayTimeDuration("P20DT10H")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT05H") le xs:dayTimeDuration("P20DT10H")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.142S") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.142S") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:dayTimeDuration("P3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:dayTimeDuration("P3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.144S") lt xs:dayTimeDuration("P3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.144S") lt xs:dayTimeDuration("P3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.142S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.142S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/divide-dayTimeDuration-by-dayTimeDuration.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P0DT0H0M01S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P0DT0H0M01S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") div xs:dayTimeDuration("P0DT0H0M01S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") div xs:dayTimeDuration("P0DT0H0M01S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") div xs:dayTimeDuration("P0DT0H0M01S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") div xs:dayTimeDuration("P0DT0H0M01S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:dayTimeDuration("P2DT53M11S") div xs:dayTimeDuration("P1DT10H")),15)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:dayTimeDuration("P2DT53M11S") div xs:dayTimeDuration("P1DT10H")),15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P10DT10H11M") div xs:dayTimeDuration("P12DT10H07M") and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P10DT10H11M") div xs:dayTimeDuration("P12DT10H07M") and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P20DT20H10M") div xs:dayTimeDuration("P19DT13H10M") or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P20DT20H10M") div xs:dayTimeDuration("P19DT13H10M") or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:dayTimeDuration("P11DT12H04M") div xs:dayTimeDuration("P02DT07H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:dayTimeDuration("P11DT12H04M") div xs:dayTimeDuration("P02DT07H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:dayTimeDuration("P05DT09H08M") div xs:dayTimeDuration("P03DT08H06M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:dayTimeDuration("P05DT09H08M") div xs:dayTimeDuration("P03DT08H06M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dayTimeDuration("P02DT06H09M") div xs:dayTimeDuration("P02DT06H09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dayTimeDuration("P02DT06H09M") div xs:dayTimeDuration("P02DT06H09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P08DT06H08M") div xs:dayTimeDuration("P08DT06H08M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P08DT06H08M") div xs:dayTimeDuration("P08DT06H08M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H01M") div xs:dayTimeDuration("-P10DT01H01M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H01M") div xs:dayTimeDuration("-P10DT01H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P01DT02H01M") div xs:dayTimeDuration("P02DT09H02M")) and (xs:dayTimeDuration("P01DT02H01M") div xs:dayTimeDuration("P02DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P01DT02H01M") div xs:dayTimeDuration("P02DT09H02M")) and (xs:dayTimeDuration("P01DT02H01M") div xs:dayTimeDuration("P02DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P05DT09H02M") div xs:dayTimeDuration("P03DT01H04M")) or (xs:dayTimeDuration("P05DT05H03M") div xs:dayTimeDuration("P01DT01H03M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P05DT09H02M") div xs:dayTimeDuration("P03DT01H04M")) or (xs:dayTimeDuration("P05DT05H03M") div xs:dayTimeDuration("P01DT01H03M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even( (xs:dayTimeDuration("P42DT10H10M") div xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P20DT10H10M") div xs:dayTimeDuration("P18DT10H10M")) ,15)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even( (xs:dayTimeDuration("P42DT10H10M") div xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P20DT10H10M") div xs:dayTimeDuration("P18DT10H10M")) ,15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT08H11M") div xs:dayTimeDuration("P05DT08H11M")) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT08H11M") div xs:dayTimeDuration("P05DT08H11M")) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P23DT11H11M") div xs:dayTimeDuration("P23DT11H11M")) eq xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P23DT11H11M") div xs:dayTimeDuration("P23DT11H11M")) eq xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P21DT08H12M") div xs:dayTimeDuration("P08DT08H05M")) ne xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P21DT08H12M") div xs:dayTimeDuration("P08DT08H05M")) ne xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT10H01M") div xs:dayTimeDuration("P17DT10H02M")) le xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT10H01M") div xs:dayTimeDuration("P17DT10H02M")) le xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P13DT09H09M") div xs:dayTimeDuration("P18DT02H02M")) ge xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P13DT09H09M") div xs:dayTimeDuration("P18DT02H02M")) ge xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("PT8M") div xs:dayTimeDuration("PT2M")) eq 4</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("PT8M") div xs:dayTimeDuration("PT2M")) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P9223372036854775807D") div xs:dayTimeDuration("P0D")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P9223372036854775807D") div xs:dayTimeDuration("P0D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P9223372036854775807D") div xs:dayTimeDuration("P0DT0H0M0.000000001S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P9223372036854775807D") div xs:dayTimeDuration("P0DT0H0M0.000000001S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P9223372036854775806D") div xs:dayTimeDuration("P4611686018427387903D")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P9223372036854775806D") div xs:dayTimeDuration("P4611686018427387903D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/divide-dayTimeDuration.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:double("0.1")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:double("0.1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") div xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") div xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT10H11M")) div 2.0) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT10H11M")) div 2.0) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P20DT20H10M") div 2.0)) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P20DT20H10M") div 2.0)) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dayTimeDuration("P02DT06H09M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dayTimeDuration("P02DT06H09M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P03DT04H08M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P03DT04H08M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H01M") div -2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H01M") div -2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P01DT02H01M") div 2.0)) and fn:string((xs:dayTimeDuration("P02DT03H03M") div 2.0 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P01DT02H01M") div 2.0)) and fn:string((xs:dayTimeDuration("P02DT03H03M") div 2.0 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P05DT09H02M") div 2.0)) or fn:string((xs:dayTimeDuration("P05DT05H03M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P05DT09H02M") div 2.0)) or fn:string((xs:dayTimeDuration("P05DT05H03M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P42DT10H10M") div 2.0) div (xs:dayTimeDuration("P42DT10H10M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P42DT10H10M") div 2.0) div (xs:dayTimeDuration("P42DT10H10M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT08H11M") div 2.0)) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT08H11M") div 2.0)) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P23DT11H11M") div 2.0) eq xs:dayTimeDuration("P23DT11H11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P23DT11H11M") div 2.0) eq xs:dayTimeDuration("P23DT11H11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P21DT08H12M") div 2.0) ne xs:dayTimeDuration("P08DT08H05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P21DT08H12M") div 2.0) ne xs:dayTimeDuration("P08DT08H05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT10H01M") div 2.0) le xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT10H01M") div 2.0) le xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P13DT09H09M") div 2.0) ge xs:dayTimeDuration("P18DT02H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P13DT09H09M") div 2.0) ge xs:dayTimeDuration("P18DT02H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P8DT4H4M4.400S") div 4 eq xs:dayTimeDuration("P2DT1H1M1.1S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P8DT4H4M4.400S") div 4 eq xs:dayTimeDuration("P2DT1H1M1.1S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") div xs:double("-INF") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") div xs:double("-INF") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") div xs:double("INF") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") div xs:double("INF") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") div 0</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") div 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") div xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") div xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") div xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") div xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y3M") div 3</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y3M") div 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 div xs:duration("P1Y3M")</x:label>
      <x:variable name="expr" as="xs:string">3 div xs:duration("P1Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 div xs:yearMonthDuration("P1Y3M")</x:label>
      <x:variable name="expr" as="xs:string">3 div xs:yearMonthDuration("P1Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 div xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">3 div xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") div xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") div xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") div xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") div xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3D") div xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3D") div xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") div xs:duration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") div xs:duration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") div xs:duration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") div xs:duration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3Y3M") div xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3Y3M") div xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P9223372036854775807D") div 0.5</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P9223372036854775807D") div 0.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/divide-yearMonthDuration-by-yearMonthDuration.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P0Y1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P0Y1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") div xs:yearMonthDuration("P0Y1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") div xs:yearMonthDuration("P0Y1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") div xs:yearMonthDuration("P0Y1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") div xs:yearMonthDuration("P0Y1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y4M") div xs:yearMonthDuration("-P1Y4M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y4M") div xs:yearMonthDuration("-P1Y4M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P10Y11M") div xs:yearMonthDuration("P12Y07M") and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P10Y11M") div xs:yearMonthDuration("P12Y07M") and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P20Y10M") div xs:yearMonthDuration("P19Y10M") or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P20Y10M") div xs:yearMonthDuration("P19Y10M") or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P11Y04M") div xs:yearMonthDuration("P02Y11M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P11Y04M") div xs:yearMonthDuration("P02Y11M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(xs:yearMonthDuration("P05Y08M") div xs:yearMonthDuration("P03Y06M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(xs:yearMonthDuration("P05Y08M") div xs:yearMonthDuration("P03Y06M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:yearMonthDuration("P02Y09M") div xs:yearMonthDuration("P02Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:yearMonthDuration("P02Y09M") div xs:yearMonthDuration("P02Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P03Y08M") div xs:yearMonthDuration("P03Y08M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P03Y08M") div xs:yearMonthDuration("P03Y08M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") div xs:yearMonthDuration("-P10Y01M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") div xs:yearMonthDuration("-P10Y01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P01Y01M") div xs:yearMonthDuration("P02Y02M")) and (xs:yearMonthDuration("P02Y03M") div xs:yearMonthDuration("P04Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P01Y01M") div xs:yearMonthDuration("P02Y02M")) and (xs:yearMonthDuration("P02Y03M") div xs:yearMonthDuration("P04Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P05Y02M") div xs:yearMonthDuration("P03Y04M")) or (xs:yearMonthDuration("P05Y03M") div xs:yearMonthDuration("P01Y03M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P05Y02M") div xs:yearMonthDuration("P03Y04M")) or (xs:yearMonthDuration("P05Y03M") div xs:yearMonthDuration("P01Y03M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even( (xs:yearMonthDuration("P42Y10M") div xs:yearMonthDuration("P20Y10M")) div (xs:yearMonthDuration("P20Y11M") div xs:yearMonthDuration("P18Y11M")), 15)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even( (xs:yearMonthDuration("P42Y10M") div xs:yearMonthDuration("P20Y10M")) div (xs:yearMonthDuration("P20Y11M") div xs:yearMonthDuration("P18Y11M")), 15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y11M") div xs:yearMonthDuration("P05Y07M")) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y11M") div xs:yearMonthDuration("P05Y07M")) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P23Y11M") div xs:yearMonthDuration("P23Y11M")) eq xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P23Y11M") div xs:yearMonthDuration("P23Y11M")) eq xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P21Y12M") div xs:yearMonthDuration("P08Y05M")) ne xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P21Y12M") div xs:yearMonthDuration("P08Y05M")) ne xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") div xs:yearMonthDuration("P17Y02M")) le xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") div xs:yearMonthDuration("P17Y02M")) le xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P13Y09M") div xs:yearMonthDuration("P18Y02M")) ge xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P13Y09M") div xs:yearMonthDuration("P18Y02M")) ge xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div xs:yearMonthDuration("P60Y") eq 0.1</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div xs:yearMonthDuration("P60Y") eq 0.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2Y") div xs:yearMonthDuration("P0Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2Y") div xs:yearMonthDuration("P0Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/divide-yearMonthDuration.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:double("0.1")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:double("0.1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") div xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") div xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P2Y11M") div 1.5)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P2Y11M") div 1.5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M") div 2.0)) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M") div 2.0)) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P20Y10M") div 2.0)) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P20Y10M") div 2.0)) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:yearMonthDuration("P11Y04M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:yearMonthDuration("P11Y04M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:yearMonthDuration("P02Y09M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:yearMonthDuration("P02Y09M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P03Y08M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P03Y08M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") div -2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") div -2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P01Y01M") div 2.0)) and fn:string((xs:yearMonthDuration("P02Y03M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P01Y01M") div 2.0)) and fn:string((xs:yearMonthDuration("P02Y03M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P05Y02M") div 2.0)) or fn:string((xs:yearMonthDuration("P05Y03M") div 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P05Y02M") div 2.0)) or fn:string((xs:yearMonthDuration("P05Y03M") div 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P20Y11M") div 2.0) div (xs:yearMonthDuration("P20Y11M") div 2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P20Y11M") div 2.0) div (xs:yearMonthDuration("P20Y11M") div 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M") div 2.0)) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M") div 2.0)) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P23Y11M") div 2.0) eq xs:yearMonthDuration("P23Y11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P23Y11M") div 2.0) eq xs:yearMonthDuration("P23Y11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P21Y12M") div 2.0) ne xs:yearMonthDuration("P08Y05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P21Y12M") div 2.0) ne xs:yearMonthDuration("P08Y05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") div 2.0) le xs:yearMonthDuration("P17Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") div 2.0) le xs:yearMonthDuration("P17Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P13Y09M") div 2.0) ge xs:yearMonthDuration("P18Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P13Y09M") div 2.0) ge xs:yearMonthDuration("P18Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in (-2, -4, -10, -50, +50, +10, +4, +2) return (xs:yearMonthDuration("P5M") div $i)</x:label>
      <x:variable name="expr" as="xs:string">for $i in (-2, -4, -10, -50, +50, +10, +4, +2) return (xs:yearMonthDuration("P5M") div $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div 3 eq xs:yearMonthDuration("P2Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div 3 eq xs:yearMonthDuration("P2Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div xs:double("-INF") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div xs:double("-INF") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div xs:double("INF") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div xs:double("INF") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div 0</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") div xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") div xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/duration-equal.xml">
    <x:scenario>
      <x:label>xs:duration("P1Y") eq xs:duration("P12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") eq xs:duration("P12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT24H") eq xs:duration("P1D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT24H") eq xs:duration("P1D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y") eq xs:duration("P365D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") eq xs:duration("P365D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y") eq xs:duration("P1Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") eq xs:duration("P1Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y") ne xs:duration("P1Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") ne xs:duration("P1Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT24H") eq xs:duration("PT24H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT24H") eq xs:duration("PT24H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT24H") ne xs:duration("PT24H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT24H") ne xs:duration("PT24H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P12M") eq xs:duration("P12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P12M") eq xs:duration("P12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P12M") ne xs:duration("P12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P12M") ne xs:duration("P12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P365D") eq xs:duration("P365D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P365D") eq xs:duration("P365D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P365D") ne xs:duration("P365D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P365D") ne xs:duration("P365D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P36D") eq xs:duration("P39D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P36D") eq xs:duration("P39D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P36D") ne xs:duration("P39D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P36D") ne xs:duration("P39D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:duration("P36D") eq xs:duration("P36D"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:duration("P36D") eq xs:duration("P36D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:duration("P36D") ne xs:duration("P36D"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:duration("P36D") ne xs:duration("P36D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:duration("P36D") eq xs:duration("P36D"))</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:duration("P36D") eq xs:duration("P36D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:duration("P36D") ne xs:duration("P36D"))</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:duration("P36D") ne xs:duration("P36D"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") eq xs:duration("P36D")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") eq xs:duration("P36D")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") ne xs:duration("P36D")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") ne xs:duration("P36D")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") eq xs:duration("P36D")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") eq xs:duration("P36D")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") ne xs:duration("P36D")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") ne xs:duration("P36D")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") eq xs:duration("P36D")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") eq xs:duration("P36D")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") ne xs:duration("P36D")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") ne xs:duration("P36D")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") eq xs:duration("P36D")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") eq xs:duration("P36D")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:duration("P36D") ne xs:duration("P36D")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:duration("P36D") ne xs:duration("P36D")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration('P0Y') eq xs:dayTimeDuration('P0D')</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration('P0Y') eq xs:dayTimeDuration('P0D')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration('P1Y') eq xs:dayTimeDuration('P365D')</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration('P1Y') eq xs:dayTimeDuration('P365D')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") eq xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") eq xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") eq xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") eq xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") eq xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") ne xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") ne xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") ne xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") ne xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ne xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") eq xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") eq xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") ne xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ne xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") le xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") le xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") ge xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") ge xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:yearMonthDuration('P0Y'), xs:dayTimeDuration('P0D')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:yearMonthDuration('P0Y'), xs:dayTimeDuration('P0D')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:distinct-values((xs:yearMonthDuration('P1Y'), xs:dayTimeDuration('P365D')))</x:label>
      <x:variable name="expr" as="xs:string">fn:distinct-values((xs:yearMonthDuration('P1Y'), xs:dayTimeDuration('P365D')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") eq xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") eq xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT0S") eq xs:duration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT0S") eq xs:duration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1999Y10M3DT08H34M12.043S") eq xs:duration("P1999Y10M3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1999Y10M3DT08H34M12.043S") eq xs:duration("P1999Y10M3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y01M3DT08H34M12.143S") ne xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y01M3DT08H34M12.143S") ne xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1999Y10M3DT08H34M12.143S") ne xs:duration("P1999Y10M3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1999Y10M3DT08H34M12.143S") ne xs:duration("P1999Y10M3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y") ne xs:duration("P365D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") ne xs:duration("P365D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y") eq xs:duration("P12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y") eq xs:duration("P12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1M") ne xs:duration("P31D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1M") ne xs:duration("P31D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("-PT0S") eq xs:duration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("-PT0S") eq xs:duration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("-P1Y3M4DT08H4M33S") ne xs:duration("P1Y3M4DT08H4M33S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("-P1Y3M4DT08H4M33S") ne xs:duration("P1Y3M4DT08H4M33S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.142S") lt xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.142S") lt xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") le xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") le xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.144S") gt xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.144S") gt xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") ge xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") ge xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT0S") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT0S") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") eq xs:duration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") eq xs:duration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") eq xs:duration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") eq xs:duration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT0S") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT0S") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1DT2H") eq xs:dayTimeDuration("P1DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1DT2H") eq xs:dayTimeDuration("P1DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P1DT2H") eq xs:duration("P1DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P1DT2H") eq xs:duration("P1DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1M1DT2H") ne xs:dayTimeDuration("P1DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1M1DT2H") ne xs:dayTimeDuration("P1DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P1DT2H") ne xs:duration("P1M1DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P1DT2H") ne xs:duration("P1M1DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") eq xs:duration("P1Y12M0D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") eq xs:duration("P1Y12M0D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y12M0D") eq xs:yearMonthDuration("P1Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y12M0D") eq xs:yearMonthDuration("P1Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1M") ne xs:duration("P31D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1M") ne xs:duration("P31D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P31D") ne xs:yearMonthDuration("P1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P31D") ne xs:yearMonthDuration("P1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1M") ne xs:dayTimeDuration("P31D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1M") ne xs:dayTimeDuration("P31D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31D") ne xs:yearMonthDuration("P1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31D") ne xs:yearMonthDuration("P1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1999Y10M3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1999Y10M3DT08H34M12.143S") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") gt xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") gt xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") le xs:duration("P1999Y10M3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") le xs:duration("P1999Y10M3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") ge xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") gt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") lt xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") le xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") ge xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") gt xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") gt xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") lt xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") le xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") le xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") ge xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") ge xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") gt xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") gt xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") lt xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") lt xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") le xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") le xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") ge xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") ge xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") gt xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") gt xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") lt xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") lt xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") le xs:duration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") le xs:duration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3DT08H34M12.143S") ge xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3DT08H34M12.143S") ge xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3DT08H34M12.143S") gt xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3DT08H34M12.143S") gt xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3DT08H34M12.143S") lt xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3DT08H34M12.143S") lt xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3DT08H34M12.143S") le xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3DT08H34M12.143S") le xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") eq xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") eq xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.043S") eq xs:dayTimeDuration("P3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.043S") eq xs:dayTimeDuration("P3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT08H34M12.143S") ne xs:dayTimeDuration("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT08H34M12.143S") ne xs:dayTimeDuration("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT08H34M12.143S") ne xs:dayTimeDuration("P3DT08H34M12.143S"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT08H34M12.143S") ne xs:dayTimeDuration("P3DT08H34M12.143S"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT0S") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT0S") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-P2DT5H") ne xs:dayTimeDuration("P2DT5H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-P2DT5H") ne xs:dayTimeDuration("P2DT5H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P6DT16H34M59.613999S") eq xs:dayTimeDuration("P6DT16H34M59.613999S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P6DT16H34M59.613999S") eq xs:dayTimeDuration("P6DT16H34M59.613999S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") eq xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") eq xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y") eq xs:yearMonthDuration("P1999Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y") eq xs:yearMonthDuration("P1999Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y01M") ne xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y01M") ne xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") ne xs:yearMonthDuration("P1999Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") ne xs:yearMonthDuration("P1999Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P3Y8M") ne xs:yearMonthDuration("P3Y8M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P3Y8M") ne xs:yearMonthDuration("P3Y8M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P3Y8M") ne xs:yearMonthDuration("P3Y8M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P3Y8M") ne xs:yearMonthDuration("P3Y8M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/except.xml">
    <x:scenario>
      <x:label>/bib/book[1]/title except /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[1]/title except /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book/title except /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book/title except /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/bib/book[3] except root(exactly-one(/bib/book[3]/title)))/string(@year)</x:label>
      <x:variable name="expr" as="xs:string">(/bib/book[3] except root(exactly-one(/bib/book[3]/title)))/string(@year)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title/text() except /bib/book/title/text()</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title/text() except /bib/book/title/text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction() except /processing-instruction()</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction() except /processing-instruction()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/processing-instruction() except /processing-instruction(PI1))/name()</x:label>
      <x:variable name="expr" as="xs:string">(/processing-instruction() except /processing-instruction(PI1))/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/comment() except /comment()</x:label>
      <x:variable name="expr" as="xs:string">/comment() except /comment()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((for $node in /bib/book/title/text() except /bib/book[3]/title/text() return $node/string()), "|")</x:label>
      <x:variable name="expr" as="xs:string">string-join((for $node in /bib/book/title/text() except /bib/book[3]/title/text() return $node/string()), "|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/processing-instruction() except /bib/book[2]/title)/name()</x:label>
      <x:variable name="expr" as="xs:string">(/processing-instruction() except /bib/book[2]/title)/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/processing-instruction(PI1) except /bib/book)/name()</x:label>
      <x:variable name="expr" as="xs:string">(/processing-instruction(PI1) except /bib/book)/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book except /bib/book</x:label>
      <x:variable name="expr" as="xs:string">/bib/book except /bib/book</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author except //nonexisting</x:label>
      <x:variable name="expr" as="xs:string">//author except //nonexisting</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author except ()</x:label>
      <x:variable name="expr" as="xs:string">//author except ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() except ()</x:label>
      <x:variable name="expr" as="xs:string">() except ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) except (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) except (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) except (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) except (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>number( (/atomic:root/atomic:integer) except (/atomic:root/atomic:string))</x:label>
      <x:variable name="expr" as="xs:string">number( (/atomic:root/atomic:integer) except (/atomic:root/atomic:string))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:duration/text()) except (/atomic:root/atomic:duration/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:duration/text()) except (/atomic:root/atomic:duration/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:date/text()) except (/atomic:root/atomic:date/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:date/text()) except (/atomic:root/atomic:date/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:base64Binary/text()) except (/atomic:root/atomic:base64Binary/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:base64Binary/text()) except (/atomic:root/atomic:base64Binary/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:QName/text()) except (/atomic:root/atomic:QName/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:QName/text()) except (/atomic:root/atomic:QName/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((for $node in ((//price/text()) , (//price/text())) except (//price) return $node)/string(), "|")</x:label>
      <x:variable name="expr" as="xs:string">string-join((for $node in ((//price/text()) , (//price/text())) except (//price) return $node)/string(), "|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((//price/text()) , (//price/text())) except (//price/text())</x:label>
      <x:variable name="expr" as="xs:string">((//price/text()) , (//price/text())) except (//price/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) except (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) except (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//employee[location = "Denver"] except //employee[last()])</x:label>
      <x:variable name="expr" as="xs:string">boolean(//employee[location = "Denver"] except //employee[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/gDay-equal.xml">
    <x:scenario>
      <x:label>xs:gDay("---01Z") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---14Z") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---14Z") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31Z") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31Z") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") eq xs:gDay("---14Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") eq xs:gDay("---14Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") eq xs:gDay("---31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") eq xs:gDay("---31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") ne xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") ne xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---14Z") ne xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---14Z") ne xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31Z") ne xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31Z") ne xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") ne xs:gDay("---14Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") ne xs:gDay("---14Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") ne xs:gDay("---31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") ne xs:gDay("---31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---12-05:00") eq xs:gDay("---12Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---12-05:00") eq xs:gDay("---12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:gDay("---12Z") eq xs:gDay("---12Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:gDay("---12Z") eq xs:gDay("---12Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gDay("---05Z") ne xs:gDay("---06Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gDay("---05Z") ne xs:gDay("---06Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gDay("---11Z") eq xs:gDay("---10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gDay("---11Z") eq xs:gDay("---10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gDay("---05Z") ne xs:gDay("---05Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gDay("---05Z") ne xs:gDay("---05Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---04Z") eq xs:gDay("---02Z")) and (xs:gDay("---01Z") eq xs:gDay("---12Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---04Z") eq xs:gDay("---02Z")) and (xs:gDay("---01Z") eq xs:gDay("---12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---12Z") ne xs:gDay("---03Z")) and (xs:gDay("---05Z") ne xs:gDay("---08Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---12Z") ne xs:gDay("---03Z")) and (xs:gDay("---05Z") ne xs:gDay("---08Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---02Z") eq xs:gDay("---02Z")) or (xs:gDay("---06Z") eq xs:gDay("---06Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---02Z") eq xs:gDay("---02Z")) or (xs:gDay("---06Z") eq xs:gDay("---06Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---06Z") ne xs:gDay("---06Z")) or (xs:gDay("---08Z") ne xs:gDay("---09Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---06Z") ne xs:gDay("---06Z")) or (xs:gDay("---08Z") ne xs:gDay("---09Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---03Z") eq xs:gDay("---01Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---03Z") eq xs:gDay("---01Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---08Z") ne xs:gDay("---07Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---08Z") ne xs:gDay("---07Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---05Z") eq xs:gDay("---05Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---05Z") eq xs:gDay("---05Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gDay("---09Z") ne xs:gDay("---09Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gDay("---09Z") ne xs:gDay("---09Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(" ---31 ") eq xs:gDay("---31")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(" ---31 ") eq xs:gDay("---31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---31") eq xs:gDay("---01"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---31") eq xs:gDay("---01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01") ne xs:gDay("---10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01") ne xs:gDay("---10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---01") ne xs:gDay("---01"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---01") ne xs:gDay("---01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01-00:00") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01-00:00") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01+00:00") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01+00:00") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01Z") eq xs:gDay("---01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01Z") eq xs:gDay("---01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01-00:00") eq xs:gDay("---01+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01-00:00") eq xs:gDay("---01+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---30") eq xs:gDay("---31+09:01")
            else xs:gDay("---30") eq xs:gDay("---31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---30") eq xs:gDay("---31+09:01")
            else xs:gDay("---30") eq xs:gDay("---31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---31+09:01") eq xs:gDay("---30")
            else xs:gDay("---31+09:00") eq xs:gDay("---30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---31+09:01") eq xs:gDay("---30")
            else xs:gDay("---31+09:00") eq xs:gDay("---30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---30") eq xs:gDay("---31-09:01")
            else xs:gDay("---30") eq xs:gDay("---31-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---30") eq xs:gDay("---31-09:01")
            else xs:gDay("---30") eq xs:gDay("---31-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---31-09:01") eq xs:gDay("---30")
            else xs:gDay("---31-09:00") eq xs:gDay("---30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---31-09:01") eq xs:gDay("---30")
            else xs:gDay("---31-09:00") eq xs:gDay("---30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---30") ne xs:gDay("---31+09:01")
            else xs:gDay("---30") ne xs:gDay("---31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---30") ne xs:gDay("---31+09:01")
            else xs:gDay("---30") ne xs:gDay("---31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---31+09:01") ne xs:gDay("---30")
            else xs:gDay("---31+09:00") ne xs:gDay("---30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gDay("---31+09:01") ne xs:gDay("---30")
            else xs:gDay("---31+09:00") ne xs:gDay("---30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---30") ne xs:gDay("---31-09:01")
            else xs:gDay("---30") ne xs:gDay("---31-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---30") ne xs:gDay("---31-09:01")
            else xs:gDay("---30") ne xs:gDay("---31-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---31-09:01") ne xs:gDay("---30")
            else xs:gDay("---31-09:00") ne xs:gDay("---30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gDay("---31-09:01") ne xs:gDay("---30")
            else xs:gDay("---31-09:00") ne xs:gDay("---30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---30-12:00") eq xs:gDay("---31+12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---30-12:00") eq xs:gDay("---31+12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31+12:00") eq xs:gDay("---30-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31+12:00") eq xs:gDay("---30-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---30-12:00") ne xs:gDay("---31+12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---30-12:00") ne xs:gDay("---31+12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31+12:00") ne xs:gDay("---30-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31+12:00") ne xs:gDay("---30-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:gDay("---31+01:01") eq xs:gDay("---31")
            else xs:gDay("---31+01:00") eq xs:gDay("---31")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:gDay("---31+01:01") eq xs:gDay("---31")
            else xs:gDay("---31+01:00") eq xs:gDay("---31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:gDay("---31") eq xs:gDay("---31+01:01")
            else xs:gDay("---31") eq xs:gDay("---31+01:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:gDay("---31") eq xs:gDay("---31+01:01")
            else xs:gDay("---31") eq xs:gDay("---31+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/gMonth-equal.xml">
    <x:scenario>
      <x:label>xs:gMonth("--01Z") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--07Z") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--07Z") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--12Z") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--12Z") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") eq xs:gMonth("--07Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") eq xs:gMonth("--07Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") eq xs:gMonth("--12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") eq xs:gMonth("--12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") ne xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") ne xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--07Z") ne xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--07Z") ne xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--12Z") ne xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--12Z") ne xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") ne xs:gMonth("--07Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") ne xs:gMonth("--07Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") ne xs:gMonth("--12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") ne xs:gMonth("--12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--12-05:00") eq xs:gMonth("--12Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--12-05:00") eq xs:gMonth("--12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:gMonth("--12Z") eq xs:gMonth("--12Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:gMonth("--12Z") eq xs:gMonth("--12Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonth("--05Z") ne xs:gMonth("--06Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonth("--05Z") ne xs:gMonth("--06Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonth("--11Z") eq xs:gMonth("--10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonth("--11Z") eq xs:gMonth("--10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonth("--05Z") ne xs:gMonth("--05Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonth("--05Z") ne xs:gMonth("--05Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--04Z") eq xs:gMonth("--02Z")) and (xs:gMonth("--01Z") eq xs:gMonth("--12Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--04Z") eq xs:gMonth("--02Z")) and (xs:gMonth("--01Z") eq xs:gMonth("--12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--12Z") ne xs:gMonth("--03Z")) and (xs:gMonth("--05Z") ne xs:gMonth("--08Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--12Z") ne xs:gMonth("--03Z")) and (xs:gMonth("--05Z") ne xs:gMonth("--08Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--02Z") eq xs:gMonth("--02Z")) or (xs:gMonth("--06Z") eq xs:gMonth("--06Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--02Z") eq xs:gMonth("--02Z")) or (xs:gMonth("--06Z") eq xs:gMonth("--06Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--06Z") ne xs:gMonth("--06Z")) or (xs:gMonth("--08Z") ne xs:gMonth("--09Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--06Z") ne xs:gMonth("--06Z")) or (xs:gMonth("--08Z") ne xs:gMonth("--09Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--03Z") eq xs:gMonth("--01Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--03Z") eq xs:gMonth("--01Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--08Z") ne xs:gMonth("--07Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--08Z") ne xs:gMonth("--07Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--05Z") eq xs:gMonth("--05Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--05Z") eq xs:gMonth("--05Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonth("--09Z") ne xs:gMonth("--09Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonth("--09Z") ne xs:gMonth("--09Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11 ") eq xs:gMonth("--11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11 ") eq xs:gMonth("--11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") eq xs:gMonth("--01"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") eq xs:gMonth("--01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--12") ne xs:gMonth("--10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--12") ne xs:gMonth("--10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--03") ne xs:gMonth("--03"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--03") ne xs:gMonth("--03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01-00:00") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01-00:00") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01+00:00") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01+00:00") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01Z") eq xs:gMonth("--01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01Z") eq xs:gMonth("--01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--01-00:00") eq xs:gMonth("--01+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--01-00:00") eq xs:gMonth("--01+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06") eq xs:gMonth("--06+09:01")
            else xs:gMonth("--06") eq xs:gMonth("--06+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06") eq xs:gMonth("--06+09:01")
            else xs:gMonth("--06") eq xs:gMonth("--06+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06+09:01") eq xs:gMonth("--06")
            else xs:gMonth("--06+09:00") eq xs:gMonth("--06")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06+09:01") eq xs:gMonth("--06")
            else xs:gMonth("--06+09:00") eq xs:gMonth("--06")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06") eq xs:gMonth("--06-09:01")
            else xs:gMonth("--06") eq xs:gMonth("--06-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06") eq xs:gMonth("--06-09:01")
            else xs:gMonth("--06") eq xs:gMonth("--06-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06-09:01") eq xs:gMonth("--06")
            else xs:gMonth("--06-09:00") eq xs:gMonth("--06")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06-09:01") eq xs:gMonth("--06")
            else xs:gMonth("--06-09:00") eq xs:gMonth("--06")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06") ne xs:gMonth("--06+09:01")
            else xs:gMonth("--06") ne xs:gMonth("--06+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06") ne xs:gMonth("--06+09:01")
            else xs:gMonth("--06") ne xs:gMonth("--06+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06+09:01") ne xs:gMonth("--06")
            else xs:gMonth("--06+09:00") ne xs:gMonth("--06")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonth("--06+09:01") ne xs:gMonth("--06")
            else xs:gMonth("--06+09:00") ne xs:gMonth("--06")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06") ne xs:gMonth("--06-09:01")
            else xs:gMonth("--06") ne xs:gMonth("--06-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06") ne xs:gMonth("--06-09:01")
            else xs:gMonth("--06") ne xs:gMonth("--06-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06-09:01") ne xs:gMonth("--06")
            else xs:gMonth("--06-09:00") ne xs:gMonth("--06")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonth("--06-09:01") ne xs:gMonth("--06")
            else xs:gMonth("--06-09:00") ne xs:gMonth("--06")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/gMonthDay-equal.xml">
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--04-10Z") eq xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--04-10Z") eq xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--12-31Z") eq xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--12-31Z") eq xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--04-10Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--04-10Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") eq xs:gMonthDay("--12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--04-10Z") ne xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--04-10Z") ne xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--12-31Z") ne xs:gMonthDay("--01-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--12-31Z") ne xs:gMonthDay("--01-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--04-10Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--04-10Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--12-31Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01Z") ne xs:gMonthDay("--12-31Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--12-25Z") eq xs:gMonthDay("--12-26Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--12-25Z") eq xs:gMonthDay("--12-26Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:gMonthDay("--12-10Z") eq xs:gMonthDay("--12-10Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:gMonthDay("--12-10Z") eq xs:gMonthDay("--12-10Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonthDay("--05-01Z") ne xs:gMonthDay("--06-12Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonthDay("--05-01Z") ne xs:gMonthDay("--06-12Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonthDay("--11-10Z") eq xs:gMonthDay("--10-02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonthDay("--11-10Z") eq xs:gMonthDay("--10-02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gMonthDay("--05-10Z") ne xs:gMonthDay("--05-10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gMonthDay("--05-10Z") ne xs:gMonthDay("--05-10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--04-02Z") eq xs:gMonthDay("--02-03Z")) and (xs:gMonthDay("--01-07Z") eq xs:gMonthDay("--12-10Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--04-02Z") eq xs:gMonthDay("--02-03Z")) and (xs:gMonthDay("--01-07Z") eq xs:gMonthDay("--12-10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--12-10Z") ne xs:gMonthDay("--03-11Z")) and (xs:gMonthDay("--05-12Z") ne xs:gMonthDay("--08-08Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--12-10Z") ne xs:gMonthDay("--03-11Z")) and (xs:gMonthDay("--05-12Z") ne xs:gMonthDay("--08-08Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--02-01Z") eq xs:gMonthDay("--02-10Z")) or (xs:gMonthDay("--06-02Z") eq xs:gMonthDay("--06-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--02-01Z") eq xs:gMonthDay("--02-10Z")) or (xs:gMonthDay("--06-02Z") eq xs:gMonthDay("--06-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--06-02Z") ne xs:gMonthDay("--06-09Z")) or (xs:gMonthDay("--08-06Z") ne xs:gMonthDay("--09-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--06-02Z") ne xs:gMonthDay("--06-09Z")) or (xs:gMonthDay("--08-06Z") ne xs:gMonthDay("--09-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--03-04Z") eq xs:gMonthDay("--01-07Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--03-04Z") eq xs:gMonthDay("--01-07Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--08-04Z") ne xs:gMonthDay("--07-12Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--08-04Z") ne xs:gMonthDay("--07-12Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--05-05Z") eq xs:gMonthDay("--05-05Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--05-05Z") eq xs:gMonthDay("--05-05Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gMonthDay("--09-09Z") ne xs:gMonthDay("--09-10Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gMonthDay("--09-09Z") ne xs:gMonthDay("--09-10Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--04-01 ") eq xs:gMonthDay("--04-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--04-01 ") eq xs:gMonthDay("--04-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--03-03") eq xs:gMonthDay("--04-03"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--03-03") eq xs:gMonthDay("--04-03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--04-12") ne xs:gMonthDay("--04-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--04-12") ne xs:gMonthDay("--04-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--04-11") ne xs:gMonthDay("--04-11"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--04-11") ne xs:gMonthDay("--04-11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--03-01-00:00") eq xs:gMonthDay("--03-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--03-01-00:00") eq xs:gMonthDay("--03-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--03-01+00:00") eq xs:gMonthDay("--03-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--03-01+00:00") eq xs:gMonthDay("--03-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--03-01Z") eq xs:gMonthDay("--03-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--03-01Z") eq xs:gMonthDay("--03-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--03-01-00:00") eq xs:gMonthDay("--03-01+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--03-01-00:00") eq xs:gMonthDay("--03-01+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+09:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+09:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-31+09:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+09:00") eq xs:gMonthDay("--12-30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-31+09:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+09:00") eq xs:gMonthDay("--12-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31-09:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31-09:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-31-09:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31-09:00") eq xs:gMonthDay("--12-30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-31-09:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31-09:00") eq xs:gMonthDay("--12-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31+09:01")
            else xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31+09:01")
            else xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-31+09:01") ne xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+09:00") ne xs:gMonthDay("--12-30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gMonthDay("--12-31+09:01") ne xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+09:00") ne xs:gMonthDay("--12-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31-09:01")
            else xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31-09:01")
            else xs:gMonthDay("--12-30") ne xs:gMonthDay("--12-31-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-31-09:01") ne xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31-09:00") ne xs:gMonthDay("--12-30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gMonthDay("--12-31-09:01") ne xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31-09:00") ne xs:gMonthDay("--12-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-30-12:00") eq xs:gMonthDay("--01-31+12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-30-12:00") eq xs:gMonthDay("--01-31+12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-31+12:00") eq xs:gMonthDay("--01-30-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-31+12:00") eq xs:gMonthDay("--01-30-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-30-12:00") ne xs:gMonthDay("--01-31+12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-30-12:00") ne xs:gMonthDay("--01-31+12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-31+12:00") ne xs:gMonthDay("--01-30-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-31+12:00") ne xs:gMonthDay("--01-30-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT1M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+01:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+01:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT1M'))
            then xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+01:01")
            else xs:gMonthDay("--12-30") eq xs:gMonthDay("--12-31+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT1M'))
            then xs:gMonthDay("--12-31+01:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+01:00") eq xs:gMonthDay("--12-30")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT1M'))
            then xs:gMonthDay("--12-31+01:01") eq xs:gMonthDay("--12-30")
            else xs:gMonthDay("--12-31+01:00") eq xs:gMonthDay("--12-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/gYear-equal.xml">
    <x:scenario>
      <x:label>xs:gYear("1970Z") eq xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") eq xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("2012Z") eq xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("2012Z") eq xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("2030Z") eq xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("2030Z") eq xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1970Z") eq xs:gYear("2012Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") eq xs:gYear("2012Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1970Z") eq xs:gYear("2030Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") eq xs:gYear("2030Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1970Z") ne xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") ne xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("2012Z") ne xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("2012Z") ne xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("2030Z") ne xs:gYear("1970Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("2030Z") ne xs:gYear("1970Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1970Z") ne xs:gYear("2012Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") ne xs:gYear("2012Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1970Z") ne xs:gYear("2030Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1970Z") ne xs:gYear("2030Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("2005-12:00") eq xs:gYear("2005+12:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("2005-12:00") eq xs:gYear("2005+12:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("1976-05:00") eq xs:gYear("1976-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("1976-05:00") eq xs:gYear("1976-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:gYear("1995Z") eq xs:gYear("1995Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:gYear("1995Z") eq xs:gYear("1995Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYear("2005Z") ne xs:gYear("2006Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYear("2005Z") ne xs:gYear("2006Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYear("2000Z") eq xs:gYear("2001Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYear("2000Z") eq xs:gYear("2001Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYear("2005Z") ne xs:gYear("2005Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYear("2005Z") ne xs:gYear("2005Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("2000Z") eq xs:gYear("2000Z")) and (xs:gYear("2001Z") eq xs:gYear("2001Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("2000Z") eq xs:gYear("2000Z")) and (xs:gYear("2001Z") eq xs:gYear("2001Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("2000Z") ne xs:gYear("2000Z")) and (xs:gYear("1975Z") ne xs:gYear("1975Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("2000Z") ne xs:gYear("2000Z")) and (xs:gYear("1975Z") ne xs:gYear("1975Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("2000Z") eq xs:gYear("2000Z")) or (xs:gYear("1976Z") eq xs:gYear("1976Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("2000Z") eq xs:gYear("2000Z")) or (xs:gYear("1976Z") eq xs:gYear("1976Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("1976Z") ne xs:gYear("1976Z")) or (xs:gYear("1980Z") ne xs:gYear("1980Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("1976Z") ne xs:gYear("1976Z")) or (xs:gYear("1980Z") ne xs:gYear("1980Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("2000Z") ne xs:gYear("2000Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("2000Z") ne xs:gYear("2000Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("1980Z") eq xs:gYear("1980Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYear("1980Z") ne xs:gYear("1980Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYear("1980Z") ne xs:gYear("1980Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(" 1956 ") eq xs:gYear("1956")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(" 1956 ") eq xs:gYear("1956")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1956") eq xs:gYear("1958"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1956") eq xs:gYear("1958"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956") ne xs:gYear("1958")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956") ne xs:gYear("1958")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1956") ne xs:gYear("1956"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1956") ne xs:gYear("1956"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956-00:00") eq xs:gYear("1956Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956-00:00") eq xs:gYear("1956Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956+00:00") eq xs:gYear("1956Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956+00:00") eq xs:gYear("1956Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956Z") eq xs:gYear("1956Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956Z") eq xs:gYear("1956Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956-00:00") eq xs:gYear("1956+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956-00:00") eq xs:gYear("1956+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008+09:01")
            else xs:gYear("2008") eq xs:gYear("2008+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008+09:01")
            else xs:gYear("2008") eq xs:gYear("2008+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") eq xs:gYear("2008")
            else xs:gYear("2008+09:00") eq xs:gYear("2008")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") eq xs:gYear("2008")
            else xs:gYear("2008+09:00") eq xs:gYear("2008")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008-09:01")
            else xs:gYear("2008") eq xs:gYear("2008-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") eq xs:gYear("2008-09:01")
            else xs:gYear("2008") eq xs:gYear("2008-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") eq xs:gYear("2008")
            else xs:gYear("2008-09:00") eq xs:gYear("2008")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") eq xs:gYear("2008")
            else xs:gYear("2008-09:00") eq xs:gYear("2008")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008+09:01")
            else xs:gYear("2008") ne xs:gYear("2008+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008+09:01")
            else xs:gYear("2008") ne xs:gYear("2008+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") ne xs:gYear("2008")
            else xs:gYear("2008+09:00") ne xs:gYear("2008")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYear("2008+09:01") ne xs:gYear("2008")
            else xs:gYear("2008+09:00") ne xs:gYear("2008")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008-09:01")
            else xs:gYear("2008") ne xs:gYear("2008-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008") ne xs:gYear("2008-09:01")
            else xs:gYear("2008") ne xs:gYear("2008-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") ne xs:gYear("2008")
            else xs:gYear("2008-09:00") ne xs:gYear("2008")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYear("2008-09:01") ne xs:gYear("2008")
            else xs:gYear("2008-09:00") ne xs:gYear("2008")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/gYearMonth-equal.xml">
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1984-12Z") eq xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1984-12Z") eq xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("2030-12Z") eq xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("2030-12Z") eq xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1984-12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") eq xs:gYearMonth("1984-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") eq xs:gYearMonth("2030-12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") eq xs:gYearMonth("2030-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1984-12Z") ne xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1984-12Z") ne xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("2030-12Z") ne xs:gYearMonth("1970-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("2030-12Z") ne xs:gYearMonth("1970-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1984-12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") ne xs:gYearMonth("1984-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1970-01Z") ne xs:gYearMonth("2030-12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1970-01Z") ne xs:gYearMonth("2030-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1976-02-05:00") eq xs:gYearMonth("1976-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1976-02-05:00") eq xs:gYearMonth("1976-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1976-03-05:00") eq xs:gYearMonth("1976-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1976-03-05:00") eq xs:gYearMonth("1976-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:gYearMonth("1995-02Z") eq xs:gYearMonth("1995-02Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:gYearMonth("1995-02Z") eq xs:gYearMonth("1995-02Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYearMonth("2005-02Z") ne xs:gYearMonth("2006-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYearMonth("2005-02Z") ne xs:gYearMonth("2006-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2001-04Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2001-04Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:gYearMonth("2005-01Z") ne xs:gYearMonth("2005-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:gYearMonth("2005-01Z") ne xs:gYearMonth("2005-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("2000-02Z") eq xs:gYearMonth("2000-03Z")) and (xs:gYearMonth("2001-01Z") eq xs:gYearMonth("2001-01Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("2000-02Z") eq xs:gYearMonth("2000-03Z")) and (xs:gYearMonth("2001-01Z") eq xs:gYearMonth("2001-01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("2000-01Z") ne xs:gYearMonth("2000-01Z")) and (xs:gYearMonth("1975-01Z") ne xs:gYearMonth("1975-03Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("2000-01Z") ne xs:gYearMonth("2000-01Z")) and (xs:gYearMonth("1975-01Z") ne xs:gYearMonth("1975-03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2000-03Z")) or (xs:gYearMonth("1976-06Z") eq xs:gYearMonth("1976-06Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("2000-01Z") eq xs:gYearMonth("2000-03Z")) or (xs:gYearMonth("1976-06Z") eq xs:gYearMonth("1976-06Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1976-01Z") ne xs:gYearMonth("1976-02Z")) or (xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-04Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1976-01Z") ne xs:gYearMonth("1976-02Z")) or (xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-04Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1980-05Z") eq xs:gYearMonth("1980-05Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1980-05Z") eq xs:gYearMonth("1980-05Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("2000-06Z") ne xs:gYearMonth("2000-07Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("2000-06Z") ne xs:gYearMonth("2000-07Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1980-09Z") eq xs:gYearMonth("1980-09Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1980-09Z") eq xs:gYearMonth("1980-09Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-03Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:gYearMonth("1980-03Z") ne xs:gYearMonth("1980-03Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("2001-01 ") eq xs:gYearMonth("2001-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("2001-01 ") eq xs:gYearMonth("2001-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("2001-03") eq xs:gYearMonth("2000-03"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("2001-03") eq xs:gYearMonth("2000-03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("2001-12") ne xs:gYearMonth("2001-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("2001-12") ne xs:gYearMonth("2001-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1995-11") ne xs:gYearMonth("1995-11"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1995-11") ne xs:gYearMonth("1995-11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01+00:00") eq xs:gYearMonth("1999-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01+00:00") eq xs:gYearMonth("1999-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01Z") eq xs:gYearMonth("1999-01Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01Z") eq xs:gYearMonth("1999-01Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01-00:00") eq xs:gYearMonth("1999-01+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") eq xs:gYearMonth("2008-01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") eq xs:gYearMonth("2008-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") eq xs:gYearMonth("2008-01-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") eq xs:gYearMonth("2008-01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") eq xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") eq xs:gYearMonth("2008-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") ne xs:gYearMonth("2008-01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT9M'))
            then xs:gYearMonth("2008-01+09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01+09:00") ne xs:gYearMonth("2008-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:01")
            else xs:gYearMonth("2008-01") ne xs:gYearMonth("2008-01-09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") ne xs:gYearMonth("2008-01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('-PT9M'))
            then xs:gYearMonth("2008-01-09:01") ne xs:gYearMonth("2008-01")
            else xs:gYearMonth("2008-01-09:00") ne xs:gYearMonth("2008-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/hexBinary-equal.xml">
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("6e7875626264756366") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("6e7875626264756366") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("6e7875626264756366")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("6e7875626264756366")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("786174616d61616772")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("786174616d61616772")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("6e7875626264756366") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("6e7875626264756366") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("6e7875626264756366")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("6e7875626264756366")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("786174616d61616772")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("786174616d61616772")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:hexBinary("786174616d61616772") eq xs:hexBinary("786174616d61616772")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:hexBinary("786174616d61616772") eq xs:hexBinary("786174616d61616772")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:hexBinary("786174616d61616772") ne xs:hexBinary("786174616d61616772")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:hexBinary("786174616d61616772") ne xs:hexBinary("786174616d61616772")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("FF") eq xs:hexBinary("ff")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FF") eq xs:hexBinary("ff")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("FF") ne xs:hexBinary("aa")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FF") ne xs:hexBinary("aa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("FF") eq xs:hexBinary("aa"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("FF") eq xs:hexBinary("aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) eq xs:hexBinary("03")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) eq xs:hexBinary("03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) ne xs:hexBinary("13")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) ne xs:hexBinary("13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("") eq xs:hexBinary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("") eq xs:hexBinary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("") eq xs:hexBinary("01")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("") eq xs:hexBinary("01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("00") eq xs:hexBinary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("00") eq xs:hexBinary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/intersect.xml">
    <x:scenario>
      <x:label>(/bib/book[1]/title intersect /bib/book[1]/title)/string()</x:label>
      <x:variable name="expr" as="xs:string">(/bib/book[1]/title intersect /bib/book[1]/title)/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book/title intersect /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book/title intersect /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title intersect root(exactly-one(/bib/book[3]/title))</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title intersect root(exactly-one(/bib/book[3]/title))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title/text() intersect /bib/book/title/text()</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title/text() intersect /bib/book/title/text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/processing-instruction() intersect /processing-instruction())/name()</x:label>
      <x:variable name="expr" as="xs:string">(/processing-instruction() intersect /processing-instruction())/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/processing-instruction(PI1) intersect /processing-instruction())/name()</x:label>
      <x:variable name="expr" as="xs:string">(/processing-instruction(PI1) intersect /processing-instruction())/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join((/comment() intersect /comment()), "|")</x:label>
      <x:variable name="expr" as="xs:string">string-join((/comment() intersect /comment()), "|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title/text() intersect /bib/book/title/text()</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title/text() intersect /bib/book/title/text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction() intersect /bib/book[2]/title</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction() intersect /bib/book[2]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction(PI1) intersect /bib/book</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction(PI1) intersect /bib/book</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/bib/book intersect /bib/book)/string(@year)</x:label>
      <x:variable name="expr" as="xs:string">(/bib/book intersect /bib/book)/string(@year)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author intersect //nonexisting</x:label>
      <x:variable name="expr" as="xs:string">//author intersect //nonexisting</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author intersect ()</x:label>
      <x:variable name="expr" as="xs:string">//author intersect ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() intersect ()</x:label>
      <x:variable name="expr" as="xs:string">() intersect ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:string)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) intersect (/atomic:root/atomic:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:duration/text()) intersect (/atomic:root/atomic:duration/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:duration/text()) intersect (/atomic:root/atomic:duration/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:date/text()) intersect (/atomic:root/atomic:date/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:date/text()) intersect (/atomic:root/atomic:date/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:base64Binary/text()) intersect (/atomic:root/atomic:base64Binary/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:base64Binary/text()) intersect (/atomic:root/atomic:base64Binary/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:QName/text()) intersect (/atomic:root/atomic:QName/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:QName/text()) intersect (/atomic:root/atomic:QName/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:idrefs/text()) intersect (/atomic:root/atomic:idrefs/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:idrefs/text()) intersect (/atomic:root/atomic:idrefs/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) intersect (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) intersect (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//employee[location = "Denver"] intersect //employee[last()])</x:label>
      <x:variable name="expr" as="xs:string">boolean(//employee[location = "Denver"] intersect //employee[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//(employee[location = "Denver"] intersect //employee[last()])/./location</x:label>
      <x:variable name="expr" as="xs:string">//(employee[location = "Denver"] intersect //employee[last()])/./location</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 intersect 2 intersect 3</x:label>
      <x:variable name="expr" as="xs:string">1 intersect 2 intersect 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 except 2 except 3</x:label>
      <x:variable name="expr" as="xs:string">1 except 2 except 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (subsequence(//*, 1, 10) intersect subsequence(//*, 7, 2)) then "foo" else "bar"</x:label>
      <x:variable name="expr" as="xs:string">if (subsequence(//*, 1, 10) intersect subsequence(//*, 7, 2)) then "foo" else "bar"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() intersect ())</x:label>
      <x:variable name="expr" as="xs:string">count(() intersect ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/is-same-node.xml">
    <x:scenario>
      <x:label>count(() is ())</x:label>
      <x:variable name="expr" as="xs:string">count(() is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() is /works[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">count(() is /works[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">count(() is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(/works[1]/employee[1]/empnum[1] is ())</x:label>
      <x:variable name="expr" as="xs:string">count(/works[1]/employee[1]/empnum[1] is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works[1]/employee[1]/empnum[1] is /works[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">/works[1]/employee[1]/empnum[1] is /works[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$works/works[1]/employee[1]/empnum[1] is $staff/staff[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">$works/works[1]/employee[1]/empnum[1] is $staff/staff[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((/staff[1]/employee[1]/empnum[1]) is ())</x:label>
      <x:variable name="expr" as="xs:string">count((/staff[1]/employee[1]/empnum[1]) is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($staff/staff[1]/employee[1]/empnum[1]) is $works/works[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">($staff/staff[1]/employee[1]/empnum[1]) is $works/works[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">(/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) lt ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) lt ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) ge ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) ge ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) gt ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) gt ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) le ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])) le ((/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(() is 100)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(() is 100)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 is ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() is 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() is 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 is 1</x:label>
      <x:variable name="expr" as="xs:string">1 is 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() is ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() is ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() is</x:label>
      <x:variable name="expr" as="xs:string">() is</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>is ()</x:label>
      <x:variable name="expr" as="xs:string">is ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">(/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1]) is (/staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/multiply-dayTimeDuration.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") * xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") * xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") * xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") * xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") * xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") * xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") * xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") * xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") * xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") * xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT2H10M") * 2.1</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT2H10M") * 2.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT10H11M")) * 2.0) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT10H11M")) * 2.0) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P20DT20H10M") * 2.0)) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P20DT20H10M") * 2.0)) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") *2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") *2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dayTimeDuration("P02DT06H09M") *2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dayTimeDuration("P02DT06H09M") *2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P03DT04H08M") * 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P03DT04H08M") * 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H01M") * -2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H01M") * -2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P01DT02H01M") * 2.0)) and fn:string((xs:dayTimeDuration("P02DT03H03M") * 2.0 ))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P01DT02H01M") * 2.0)) and fn:string((xs:dayTimeDuration("P02DT03H03M") * 2.0 ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P05DT09H02M") * 2.0)) or fn:string((xs:dayTimeDuration("P05DT05H03M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P05DT09H02M") * 2.0)) or fn:string((xs:dayTimeDuration("P05DT05H03M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P42DT10H10M") * 2.0) div (xs:dayTimeDuration("P42DT10H10M") * 2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P42DT10H10M") * 2.0) div (xs:dayTimeDuration("P42DT10H10M") * 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT08H11M") * 2.0)) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT08H11M") * 2.0)) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P23DT11H11M") * 2.0) eq xs:dayTimeDuration("P23DT11H11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P23DT11H11M") * 2.0) eq xs:dayTimeDuration("P23DT11H11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P21DT08H12M") * 2.0) ne xs:dayTimeDuration("P08DT08H05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P21DT08H12M") * 2.0) ne xs:dayTimeDuration("P08DT08H05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT10H01M") * 2.0) le xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT10H01M") * 2.0) le xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P13DT09H09M") * 2.0) ge xs:dayTimeDuration("P18DT02H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P13DT09H09M") * 2.0) ge xs:dayTimeDuration("P18DT02H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(xs:dayTimeDuration("P13DT09H09M") * -0)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(xs:dayTimeDuration("P13DT09H09M") * -0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(xs:dayTimeDuration("P13DT09H09M") * +0)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(xs:dayTimeDuration("P13DT09H09M") * +0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * 3 eq xs:dayTimeDuration("P9DT12H9M9.3S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * 3 eq xs:dayTimeDuration("P9DT12H9M9.3S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("P9DT12H9M9.3S")</x:label>
      <x:variable name="expr" as="xs:string">3 * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("P9DT12H9M9.3S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * 0 eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * 0 eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">0 * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("-0") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("-0") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") * xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") * xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/multiply-yearMonthDuration.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") * xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") * xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") * xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") * xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") * xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") * xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") * xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") * xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") * xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") * xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2Y11M") * 2.3</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2Y11M") * 2.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M")) * 2.0) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M")) * 2.0) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P20Y10M") * 2.0)) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P20Y10M") * 2.0)) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:yearMonthDuration("P11Y04M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:yearMonthDuration("P11Y04M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:yearMonthDuration("P02Y09M") * 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:yearMonthDuration("P02Y09M") * 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P03Y08M") * 2.0)</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P03Y08M") * 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") * -2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") * -2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P01Y01M") * 2.0)) and fn:string((xs:yearMonthDuration("P02Y03M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P01Y01M") * 2.0)) and fn:string((xs:yearMonthDuration("P02Y03M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P05Y02M") * 2.0)) or fn:string((xs:yearMonthDuration("P05Y03M") * 2.0))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P05Y02M") * 2.0)) or fn:string((xs:yearMonthDuration("P05Y03M") * 2.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P20Y11M") * 2.0) div (xs:yearMonthDuration("P20Y11M") * 2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P20Y11M") * 2.0) div (xs:yearMonthDuration("P20Y11M") * 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M") * 2.0)) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M") * 2.0)) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P23Y11M") * 2.0) eq xs:yearMonthDuration("P23Y11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P23Y11M") * 2.0) eq xs:yearMonthDuration("P23Y11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P21Y12M") * 2.0) ne xs:yearMonthDuration("P08Y05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P21Y12M") * 2.0) ne xs:yearMonthDuration("P08Y05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") * 2.0) le xs:yearMonthDuration("P17Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") * 2.0) le xs:yearMonthDuration("P17Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P13Y09M") - xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P13Y09M") - xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:yearMonthDuration("P13Y09M") *+0))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:yearMonthDuration("P13Y09M") *+0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((xs:yearMonthDuration("P13Y09M") *-0))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((xs:yearMonthDuration("P13Y09M") *-0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P13Y09M") * fn:number(())</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P13Y09M") * fn:number(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in (-3.9, -3.5, -3.1, -0.9, -0.5, -0.1, +0.1, +0.5, +0.9, +3.1, +3.5, +3.9) return xs:yearMonthDuration("P1M") * $i</x:label>
      <x:variable name="expr" as="xs:string">for $i in (-3.9, -3.5, -3.1, -0.9, -0.5, -0.1, +0.1, +0.5, +0.9, +3.1, +3.5, +3.9) return xs:yearMonthDuration("P1M") * $i</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") * 3 eq xs:yearMonthDuration("P18Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") * 3 eq xs:yearMonthDuration("P18Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 * xs:yearMonthDuration("P3Y36M") eq xs:yearMonthDuration("P18Y")</x:label>
      <x:variable name="expr" as="xs:string">3 * xs:yearMonthDuration("P3Y36M") eq xs:yearMonthDuration("P18Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 * xs:yearMonthDuration("P3Y36M") eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">0 * xs:yearMonthDuration("P3Y36M") eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y36M") * 0 eq xs:yearMonthDuration("P0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y36M") * 0 eq xs:yearMonthDuration("P0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") * xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") * xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") * xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") * xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") * xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") * xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y3M") * 3</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y3M") * 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 * xs:duration("P1Y3M")</x:label>
      <x:variable name="expr" as="xs:string">3 * xs:duration("P1Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") * xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") * xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") * xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") * xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") * xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") * xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") * xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") * xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2Y") * xs:double('NaN')</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2Y") * xs:double('NaN')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double('NaN') * xs:yearMonthDuration("P2Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:double('NaN') * xs:yearMonthDuration("P2Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/node-after.xml">
    <x:scenario>
      <x:label>count(() &gt;&gt; ())</x:label>
      <x:variable name="expr" as="xs:string">count(() &gt;&gt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() &gt;&gt; /works[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">count(() &gt;&gt; /works[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">count(() &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(/works[1]/employee[1]/empnum[1] &gt;&gt; ())</x:label>
      <x:variable name="expr" as="xs:string">count(/works[1]/employee[1]/empnum[1] &gt;&gt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works[1]/employee[1]/empnum[1] &gt;&gt; /works[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">/works[1]/employee[1]/empnum[1] &gt;&gt; /works[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$works/works[1]/employee[1]/empnum[1] &gt;&gt; ($staff/staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">$works/works[1]/employee[1]/empnum[1] &gt;&gt; ($staff/staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((/staff[1]/employee[1]/empnum[1]) &gt;&gt; ())</x:label>
      <x:variable name="expr" as="xs:string">count((/staff[1]/employee[1]/empnum[1]) &gt;&gt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1])) 
         or (($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">(($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1])) 
         or (($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">(/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         lt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         lt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         ge ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         ge ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         gt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         gt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         le ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         le ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(() &gt;&gt; 100)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(() &gt;&gt; 100)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 &gt;&gt; ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 &gt;&gt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() &gt;&gt; 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() &gt;&gt; 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &gt;&gt; 1</x:label>
      <x:variable name="expr" as="xs:string">1 &gt;&gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() &gt;&gt; ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() &gt;&gt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;&gt;&gt; ()</x:label>
      <x:variable name="expr" as="xs:string">() &gt;&gt;&gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;&gt;</x:label>
      <x:variable name="expr" as="xs:string">() &gt;&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&gt;&gt; ()</x:label>
      <x:variable name="expr" as="xs:string">&gt;&gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&gt;&gt;</x:label>
      <x:variable name="expr" as="xs:string">&gt;&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &gt;&gt;</x:label>
      <x:variable name="expr" as="xs:string">1 &gt;&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&gt;&gt; 1</x:label>
      <x:variable name="expr" as="xs:string">&gt;&gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&gt;&gt;&gt;</x:label>
      <x:variable name="expr" as="xs:string">&gt;&gt;&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/node-before.xml">
    <x:scenario>
      <x:label>count(() &lt;&lt; ())</x:label>
      <x:variable name="expr" as="xs:string">count(() &lt;&lt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() &lt;&lt; /works[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">count(() &lt;&lt; /works[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(() &lt;&lt; /staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">count(() &lt;&lt; /staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(/works[1]/employee[1]/empnum[1] &lt;&lt; ())</x:label>
      <x:variable name="expr" as="xs:string">count(/works[1]/employee[1]/empnum[1] &lt;&lt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works[1]/employee[1]/empnum[1] &lt;&lt; /works[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">/works[1]/employee[1]/empnum[1] &lt;&lt; /works[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]</x:label>
      <x:variable name="expr" as="xs:string">$works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((/staff[1]/employee[1]/empnum[1]) &lt;&lt; ())</x:label>
      <x:variable name="expr" as="xs:string">count((/staff[1]/employee[1]/empnum[1]) &lt;&lt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1])) 
         or (($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">(($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1])) 
         or (($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])</x:label>
      <x:variable name="expr" as="xs:string">(/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         lt 
         ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         lt 
         ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         ge
         ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         ge
         ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         gt ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         gt ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         le ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:label>
      <x:variable name="expr" as="xs:string">((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1])) 
         le ((/staff[1]/employee[1]/empnum[1]) &lt;&lt; (/staff[1]/employee[1]/empnum[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(() &lt;&lt; 100)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(() &lt;&lt; 100)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 &lt;&lt; ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 &lt;&lt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() &lt;&lt; 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() &lt;&lt; 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt;&lt; 1</x:label>
      <x:variable name="expr" as="xs:string">1 &lt;&lt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() &lt;&lt; ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() &lt;&lt; ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;&lt;&lt; ()</x:label>
      <x:variable name="expr" as="xs:string">() &lt;&lt;&lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;&lt;</x:label>
      <x:variable name="expr" as="xs:string">() &lt;&lt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&lt;&lt; ()</x:label>
      <x:variable name="expr" as="xs:string">&lt;&lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&lt;&lt;</x:label>
      <x:variable name="expr" as="xs:string">&lt;&lt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt;&lt;</x:label>
      <x:variable name="expr" as="xs:string">1 &lt;&lt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&lt;&lt; 1</x:label>
      <x:variable name="expr" as="xs:string">&lt;&lt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>&lt;&lt;&lt;</x:label>
      <x:variable name="expr" as="xs:string">&lt;&lt;&lt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-add.xml">
    <x:scenario>
      <x:label>xs:int("-1873914410") + xs:int("-273569238")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") + xs:int("-273569238")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") + xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") + xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-273569238") + xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-273569238") + xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") + xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") + xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") + xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") + xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") + xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") + xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") + xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") + xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") + xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") + xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") + xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") + xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") + xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") + xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") + xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") + xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") + xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") + xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") + xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") + xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") + xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") + xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") + xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") + xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") + xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") + xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") + xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") + xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") + xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") + xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") + xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") + xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") + xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") + xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") + xs:long("-45058158165499290")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") + xs:long("-45058158165499290")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") + xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") + xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-45058158165499290") + xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-45058158165499290") + xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") + xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") + xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") + xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") + xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") + xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") + xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") + xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") + xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") + xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") + xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") + xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") + xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") + xs:negativeInteger("-702985924000903206")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") + xs:negativeInteger("-702985924000903206")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") + xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") + xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-702985924000903206") + xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-702985924000903206") + xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") + xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") + xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") + xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") + xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") + xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") + xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999998") + xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999998") + xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") + xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") + xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") + xs:positiveInteger("999999999999999998")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") + xs:positiveInteger("999999999999999998")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") + xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") + xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") + xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") + xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") + xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") + xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") + xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") + xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") + xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") + xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") + xs:nonPositiveInteger("-524311562728129509")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") + xs:nonPositiveInteger("-524311562728129509")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") + xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") + xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-524311562728129509") + xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-524311562728129509") + xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") + xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") + xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") + xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") + xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") + xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") + xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") + xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") + xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") + xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") + xs:short("-27444")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") + xs:short("-27444")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") + xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") + xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-27444") + xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-27444") + xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") + xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") + xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + ()</x:label>
      <x:variable name="expr" as="xs:string">1 + ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + '1'</x:label>
      <x:variable name="expr" as="xs:string">1 + '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 + xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(10) + xs:unsignedLong(35)</x:label>
      <x:variable name="expr" as="xs:string">xs:long(10) + xs:unsignedLong(35)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(10) + xs:nonPositiveInteger(-15)</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(10) + xs:nonPositiveInteger(-15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(10) + xs:short(15)</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(10) + xs:short(15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(10) + xs:long(145)</x:label>
      <x:variable name="expr" as="xs:string">xs:short(10) + xs:long(145)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(10) + xs:negativeInteger(-5)</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(10) + xs:negativeInteger(-5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(6) + xs:double(2) eq 8</x:label>
      <x:variable name="expr" as="xs:string">xs:double(6) + xs:double(2) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6) + xs:decimal(2) eq 8</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6) + xs:decimal(2) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6.1) + xs:decimal(2.1) eq 8.2</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6.1) + xs:decimal(2.1) eq 8.2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1 + 2.2 eq 3.3</x:label>
      <x:variable name="expr" as="xs:string">1.1 + 2.2 eq 3.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1.1) + xs:double(2.2) ne 3.3</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1.1) + xs:double(2.2) ne 3.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1.1) + xs:float(2.2) ne 3.3</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1.1) + xs:float(2.2) ne 3.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) + xs:integer(2) eq 8</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) + xs:integer(2) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(6) + xs:float(2) eq 8</x:label>
      <x:variable name="expr" as="xs:string">xs:float(6) + xs:float(2) eq 8</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:float("NaN") + 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:float("NaN") + 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:double("NaN") + 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:double("NaN") + 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 + xs:float("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 + xs:float("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 + xs:double("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 + xs:double("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) + xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) + xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) + xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) + xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) + xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) + xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) + xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) + xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) + xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) + xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) + xs:decimal(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) + xs:decimal(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) + xs:integer(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) + xs:integer(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) + xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) + xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) + xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) + xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) + xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) + xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) + xs:decimal(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) + xs:decimal(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) + xs:float(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) + xs:float(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) + xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) + xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) + xs:integer(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) + xs:integer(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) + xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) + xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) + xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) + xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1+1 eq 2</x:label>
      <x:variable name="expr" as="xs:string">1+1 eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq 1+1</x:label>
      <x:variable name="expr" as="xs:string">2 eq 1+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 + error()</x:label>
      <x:variable name="expr" as="xs:string">3 + error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() + 3</x:label>
      <x:variable name="expr" as="xs:string">error() + 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 + (error(), 4)</x:label>
      <x:variable name="expr" as="xs:string">3 + (error(), 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(4, error()) + 3</x:label>
      <x:variable name="expr" as="xs:string">(4, error()) + 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 + (4, error())</x:label>
      <x:variable name="expr" as="xs:string">3 + (4, error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 4) + 3</x:label>
      <x:variable name="expr" as="xs:string">(error(), 4) + 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2) + 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2) + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2) + ())</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2) + ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + (1, 2)</x:label>
      <x:variable name="expr" as="xs:string">1 + (1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() + (1, 2))</x:label>
      <x:variable name="expr" as="xs:string">empty(() + (1, 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() + 3</x:label>
      <x:variable name="expr" as="xs:string">error() + 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 + error()</x:label>
      <x:variable name="expr" as="xs:string">3 + error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" + "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" + "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" + xs:untypedAtomic("3")</x:label>
      <x:variable name="expr" as="xs:string">"3" + xs:untypedAtomic("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 + xs:untypedAtomic("3")) eq 6</x:label>
      <x:variable name="expr" as="xs:string">(3 + xs:untypedAtomic("3")) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") + 3.0) eq 6</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") + 3.0) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(2 + 4) * 5 eq 30</x:label>
      <x:variable name="expr" as="xs:string">(2 + 4) * 5 eq 30</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 + 4 * 5 eq 22</x:label>
      <x:variable name="expr" as="xs:string">2 + 4 * 5 eq 22</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + 2 * 4 + (1 + 2 + 3 * 4) eq 24</x:label>
      <x:variable name="expr" as="xs:string">1 + 2 * 4 + (1 + 2 + 3 * 4) eq 24</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() + ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() + ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((1, "two"), 2) + 1) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(remove((1, "two"), 2) + 1) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (1 + remove((1, "two"), 2))</x:label>
      <x:variable name="expr" as="xs:string">2 eq (1 + remove((1, "two"), 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:label>
      <x:variable name="expr" as="xs:string">2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((xs:untypedAtomic("1"), "two"), 2) + 1) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(remove((xs:untypedAtomic("1"), "two"), 2) + 1) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (1 + remove((xs:untypedAtomic("1"), "two"), 2))</x:label>
      <x:variable name="expr" as="xs:string">2 eq (1 + remove((xs:untypedAtomic("1"), "two"), 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:label>
      <x:variable name="expr" as="xs:string">2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("3") + 3 eq 6</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") + 3 eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") + 3) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") + 3) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((5, 1e0), 2) + 1) eq 6</x:label>
      <x:variable name="expr" as="xs:string">(remove((5, 1e0), 2) + 1) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 + remove((5, 1e0), 2)) eq 6</x:label>
      <x:variable name="expr" as="xs:string">(1 + remove((5, 1e0), 2)) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + subsequence("a string", 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">1 + subsequence("a string", 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence("a string", 1, 1) + 1</x:label>
      <x:variable name="expr" as="xs:string">subsequence("a string", 1, 1) + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"foo" + 1</x:label>
      <x:variable name="expr" as="xs:string">"foo" + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + "foo"</x:label>
      <x:variable name="expr" as="xs:string">1 + "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2) + (1, 2)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2) + (1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-divide.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") div xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") div xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:int("-1873914410") div xs:int("-2147483648")),10)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:int("-1873914410") div xs:int("-2147483648")),10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:int("2147483647") div xs:int("-2147483648")),10)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:int("2147483647") div xs:int("-2147483648")),10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:int("-2147483648") div xs:int("-1873914410")),10)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:int("-2147483648") div xs:int("-1873914410")),10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:int("-2147483648") div xs:int("2147483647")),10)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:int("-2147483648") div xs:int("2147483647")),10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") div xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") div xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:integer("830993497117024304") div xs:integer("-999999999999999999")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:integer("830993497117024304") div xs:integer("-999999999999999999")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") div xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") div xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:integer("-999999999999999999") div xs:integer("830993497117024304")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:integer("-999999999999999999") div xs:integer("830993497117024304")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") div xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") div xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer("-999999999999999999") div xs:integer("999999999999999999")) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer("-999999999999999999") div xs:integer("999999999999999999")) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") div xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") div xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:decimal("617375191608514839") div xs:decimal("-999999999999999999")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:decimal("617375191608514839") div xs:decimal("-999999999999999999")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") div xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") div xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:decimal("-999999999999999999") div xs:decimal("617375191608514839")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:decimal("-999999999999999999") div xs:decimal("617375191608514839")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") div xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") div xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") div xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") div xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") div xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") div xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") div xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") div xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") div xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") div xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") div xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") div xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") div xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") div xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") div xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") div xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:long("-47175562203048468") div xs:long("-92233720368547758")),17)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:long("-47175562203048468") div xs:long("-92233720368547758")),17)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") div xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") div xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:long("-92233720368547758") div xs:long("-47175562203048468")),17)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:long("-92233720368547758") div xs:long("-47175562203048468")),17)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") div xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") div xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") div xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") div xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") div xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") div xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:negativeInteger("-297014075999096793") div xs:negativeInteger("-999999999999999999")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:negativeInteger("-297014075999096793") div xs:negativeInteger("-999999999999999999")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") div xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") div xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-297014075999096793")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-297014075999096793")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") div xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") div xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") div xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") div xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") div xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") div xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") div xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:positiveInteger("1") div xs:positiveInteger("52704602390610033")),17)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:positiveInteger("1") div xs:positiveInteger("52704602390610033")),17)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") div xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") div xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") div xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") div xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") div xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") div xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") div xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") div xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:nonPositiveInteger("-475688437271870490") div xs:nonPositiveInteger("-999999999999999999")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:nonPositiveInteger("-475688437271870490") div xs:nonPositiveInteger("-999999999999999999")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") div xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") div xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:nonPositiveInteger("-999999999999999999") div xs:nonPositiveInteger("-475688437271870490")),18)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:nonPositiveInteger("-999999999999999999") div xs:nonPositiveInteger("-475688437271870490")),18)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") div xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") div xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") div xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") div xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") div xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") div xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:short("-5324") div xs:short("-32768")),5)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:short("-5324") div xs:short("-32768")),5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") div xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") div xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:round-half-to-even((xs:short("-32768") div xs:short("-5324")),5)</x:label>
      <x:variable name="expr" as="xs:string">fn:round-half-to-even((xs:short("-32768") div xs:short("-5324")),5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") div xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") div xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() div 1</x:label>
      <x:variable name="expr" as="xs:string">() div 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div '1'</x:label>
      <x:variable name="expr" as="xs:string">1 div '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 div xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(6) div xs:double(2) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double(6) div xs:double(2) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6) div xs:decimal(2) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6) div xs:decimal(2) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) div xs:integer(2) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) div xs:integer(2) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(6) div xs:float(2) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float(6) div xs:float(2) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(5) div xs:double(2) eq 2.5</x:label>
      <x:variable name="expr" as="xs:string">xs:double(5) div xs:double(2) eq 2.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(5) div xs:double(2) ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">xs:double(5) div xs:double(2) ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(5) div xs:float(2) eq 2.5</x:label>
      <x:variable name="expr" as="xs:string">xs:float(5) div xs:float(2) eq 2.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(5) div xs:float(2) ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">xs:float(5) div xs:float(2) ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(5) div xs:integer(2) eq 2.5</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(5) div xs:integer(2) eq 2.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(5) div xs:integer(2) ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(5) div xs:integer(2) ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(5) div xs:decimal(2) eq 2.5</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(5) div xs:decimal(2) eq 2.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(5) div xs:decimal(2) ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(5) div xs:decimal(2) ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 div 2 ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">5 div 2 ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5.0 div 2.0 eq 2.5</x:label>
      <x:variable name="expr" as="xs:string">5.0 div 2.0 eq 2.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5.0 div 2.0 ne 2.6</x:label>
      <x:variable name="expr" as="xs:string">5.0 div 2.0 ne 2.6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) div xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) div xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) div xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) div xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) div xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) div xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) div xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) div xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) div xs:decimal(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) div xs:decimal(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) div xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) div xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) div xs:integer(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) div xs:integer(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) div xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) div xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) div xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) div xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) div xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) div xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) div xs:decimal(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) div xs:decimal(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) div xs:float(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) div xs:float(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) div xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) div xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) div xs:integer(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) div xs:integer(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) div xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) div xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) div xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) div xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" div "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" div "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(3) div "3"</x:label>
      <x:variable name="expr" as="xs:string">xs:double(3) div "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(3) div xs:untypedAtomic("3")) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(3) div xs:untypedAtomic("3")) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") div xs:double(3)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") div xs:double(3)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 div3</x:label>
      <x:variable name="expr" as="xs:string">10 div3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10div 3</x:label>
      <x:variable name="expr" as="xs:string">10div 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10div3</x:label>
      <x:variable name="expr" as="xs:string">10div3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() div ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() div ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 div ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 div ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() div 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() div 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(xs:double(3) div ())</x:label>
      <x:variable name="expr" as="xs:string">empty(xs:double(3) div ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() div xs:decimal(1))</x:label>
      <x:variable name="expr" as="xs:string">empty(() div xs:decimal(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div 0</x:label>
      <x:variable name="expr" as="xs:string">1 div 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div 0.0</x:label>
      <x:variable name="expr" as="xs:string">1 div 0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div +0.0</x:label>
      <x:variable name="expr" as="xs:string">1 div +0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div -0.0</x:label>
      <x:variable name="expr" as="xs:string">1 div -0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div 0e0</x:label>
      <x:variable name="expr" as="xs:string">1 div 0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 div 0e0</x:label>
      <x:variable name="expr" as="xs:string">-1 div 0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">1 div xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 div xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">-1 div xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+0e0 div -0e0</x:label>
      <x:variable name="expr" as="xs:string">+0e0 div -0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+0e0 div +0e0</x:label>
      <x:variable name="expr" as="xs:string">+0e0 div +0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0e0 div -0e0</x:label>
      <x:variable name="expr" as="xs:string">-0e0 div -0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0e0 div +0e0</x:label>
      <x:variable name="expr" as="xs:string">-0e0 div +0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+3 div +0e0</x:label>
      <x:variable name="expr" as="xs:string">+3 div +0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3 div +0e0</x:label>
      <x:variable name="expr" as="xs:string">-3 div +0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+3 div -0e0</x:label>
      <x:variable name="expr" as="xs:string">+3 div -0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3 div -0e0</x:label>
      <x:variable name="expr" as="xs:string">-3 div -0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)), 
                $y in (6, xs:decimal(6), xs:float(6), xs:double(6), xs:untypedAtomic(6)),
                $result in ($x div $y)
            return 
                if ($result instance of xs:integer) then "integer"
                else if ($result instance of xs:decimal) then "decimal" 
                else if ($result instance of xs:double) then "double"
                else if ($result instance of xs:float) then "float"
                else error()</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4), xs:untypedAtomic(5)), 
                $y in (6, xs:decimal(6), xs:float(6), xs:double(6), xs:untypedAtomic(6)),
                $result in ($x div $y)
            return 
                if ($result instance of xs:integer) then "integer"
                else if ($result instance of xs:decimal) then "decimal" 
                else if ($result instance of xs:double) then "double"
                else if ($result instance of xs:float) then "float"
                else error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000000000000000000000000000.0 div 0.1 gt 0</x:label>
      <x:variable name="expr" as="xs:string">10000000000000000000000000000.0 div 0.1 gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000000000000000000000000000.0 div 0.1) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">(10000000000000000000000000000.0 div 0.1) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-equal.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") eq xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") eq xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") eq xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") eq xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") eq xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") eq xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") eq xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") eq xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") eq xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") eq xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ne xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ne xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") ne xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") ne xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") ne xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") ne xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ne xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ne xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ne xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ne xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") eq xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") eq xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") eq xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") eq xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") eq xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") eq xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") eq xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") eq xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") eq xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") eq xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ne xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ne xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") ne xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") ne xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") ne xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") ne xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ne xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ne xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ne xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ne xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") eq xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") eq xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") eq xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") eq xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") eq xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") eq xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") eq xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") eq xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") eq xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") eq xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ne xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ne xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") ne xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") ne xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") ne xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") ne xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ne xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ne xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ne xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ne xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") eq xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") eq xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") eq xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") eq xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") eq xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") eq xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") ne xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") ne xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ne xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ne xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ne xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ne xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") eq xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") eq xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") eq xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") eq xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") eq xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") eq xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") eq xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") eq xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") eq xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") eq xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ne xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ne xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") ne xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") ne xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") ne xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") ne xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ne xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ne xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ne xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ne xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") eq xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") eq xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") eq xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") eq xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") eq xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") eq xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") eq xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") eq xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") eq xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") eq xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ne xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ne xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") ne xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") ne xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") ne xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") ne xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ne xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ne xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ne xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ne xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") eq xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") eq xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") eq xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") eq xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") eq xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") eq xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") eq xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") eq xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") eq xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") eq xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ne xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ne xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") ne xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") ne xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") ne xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") ne xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ne xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ne xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ne xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ne xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") eq xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") eq xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") eq xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") eq xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") ne xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") ne xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") ne xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") ne xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") eq xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") eq xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") eq xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") eq xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") eq xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") eq xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") eq xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") eq xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") eq xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") eq xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ne xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ne xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") ne xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") ne xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") ne xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") ne xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ne xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ne xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ne xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ne xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") eq xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") eq xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") eq xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") eq xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") eq xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") eq xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") eq xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") eq xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") eq xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") eq xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ne xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ne xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") ne xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") ne xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") ne xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") ne xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ne xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ne xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ne xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ne xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") eq xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") eq xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") eq xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") eq xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") ne xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") ne xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") ne xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") ne xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") eq xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") eq xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") eq xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") eq xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") ne xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") ne xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") ne xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") ne xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") eq xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") eq xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") eq xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") eq xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") eq xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") eq xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") eq xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") eq xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") eq xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") eq xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ne xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ne xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") ne xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") ne xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") ne xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") ne xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ne xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ne xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ne xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ne xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() eq ()</x:label>
      <x:variable name="expr" as="xs:string">() eq ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) eq xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) eq xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) ne xs:integer(2)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) ne xs:integer(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) eq xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) eq xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(-1) eq xs:integer(-1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(-1) eq xs:integer(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) ne xs:integer(2)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) ne xs:integer(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1.1) eq xs:decimal(1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1.1) eq xs:decimal(1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1.1) ne xs:decimal(2.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1.1) ne xs:decimal(2.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1.1) eq xs:decimal(1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1.1) eq xs:decimal(1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(-1.1) eq xs:decimal(-1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(-1.1) eq xs:decimal(-1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1.1) ne xs:decimal(2.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1.1) ne xs:decimal(2.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(2) ne xs:decimal(2.6)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(2) ne xs:decimal(2.6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1.1) eq xs:double(1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1.1) eq xs:double(1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(-1.1) eq xs:double(-1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(-1.1) eq xs:double(-1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1.1) ne xs:double(2.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1.1) ne xs:double(2.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(-1) ne xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(-1) ne xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") ne xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") ne xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") ne xs:double(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") ne xs:double(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(0) ne xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(0) ne xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") eq xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") eq xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") eq xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") eq xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") ne xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") ne xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") ne xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") ne xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") ne xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") ne xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") ne xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") ne xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") ne xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") ne xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") ne xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") ne xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1.1) eq xs:float(1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1.1) eq xs:float(1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(-1.1) eq xs:float(-1.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(-1.1) eq xs:float(-1.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1.1) ne xs:float(2.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1.1) ne xs:float(2.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") ne xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") ne xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") ne xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") ne xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(0) ne xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(0) ne xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") eq xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") eq xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") eq xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") eq xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") ne xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") ne xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") ne xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") ne xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") ne xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") ne xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") ne xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") ne xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") ne xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") ne xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") ne xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") ne xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove(remove((current-time(), 1), 1), 1)) eq 0</x:label>
      <x:variable name="expr" as="xs:string">count(remove(remove((current-time(), 1), 1), 1)) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0 eq count((1, 2, timezone-from-time(current-time()))))</x:label>
      <x:variable name="expr" as="xs:string">not(0 eq count((1, 2, timezone-from-time(current-time()))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 ne count((1, 2, timezone-from-time(current-time())))</x:label>
      <x:variable name="expr" as="xs:string">0 ne count((1, 2, timezone-from-time(current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3"), 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3"), 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(xs:untypedAtomic("1") to 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">count(xs:untypedAtomic("1") to 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("three") + 3</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("three") + 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 := 3</x:label>
      <x:variable name="expr" as="xs:string">1 := 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-greater-than.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") gt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") gt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") gt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") gt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") gt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") gt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") gt xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") gt xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") gt xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") gt xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") gt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") gt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") gt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") gt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") gt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") gt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") gt xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") gt xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") gt xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") gt xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") gt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") gt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") gt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") gt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") gt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") gt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") gt xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") gt xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") gt xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") gt xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") gt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") gt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") gt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") gt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") gt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") gt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") gt xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") gt xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") gt xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") gt xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") gt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") gt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") gt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") gt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") gt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") gt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") gt xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") gt xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") gt xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") gt xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") gt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") gt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") gt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") gt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") gt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") gt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") gt xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") gt xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") gt xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") gt xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") gt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") gt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") gt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") gt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") gt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") gt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") gt xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") gt xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") gt xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") gt xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") gt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") gt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") gt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") gt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") gt xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") gt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") gt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") gt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") gt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") gt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") gt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") gt xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") gt xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") gt xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") gt xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") gt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") gt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") gt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") gt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") gt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") gt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") gt xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") gt xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") gt xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") gt xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") gt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") gt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") gt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") gt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") gt xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") gt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") gt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") gt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") gt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") gt xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") gt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") gt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") gt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") gt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") gt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") gt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") gt xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") gt xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") gt xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") gt xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) gt xs:integer(-1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) gt xs:integer(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) ge xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) ge xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1) gt xs:decimal(-1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1) gt xs:decimal(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(1) ge xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(1) ge xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 gt xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">0 gt xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") gt 0</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1) gt xs:double(-1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1) gt xs:double(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1) ge xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1) ge xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 gt xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">0 gt xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") gt 0</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1) gt xs:float(-1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1) gt xs:float(-1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1) ge xs:float(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1) ge xs:float(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("NaN") gt 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("NaN") gt 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("NaN") gt 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("NaN") gt 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("NaN") ge 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("NaN") ge 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("NaN") ge 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("NaN") ge 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 gt xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 gt xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 gt xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 gt xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 ge xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 ge xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 ge xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 ge xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 le count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">1 le count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) ge 1</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) ge 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) gt 0</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("100") gt xs:unsignedLong("18446744073709551615")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("100") gt xs:unsignedLong("18446744073709551615")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("18446744073709551615") gt xs:unsignedLong("100")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("18446744073709551615") gt xs:unsignedLong("100")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3") gt xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3") gt xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3") lt xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3") lt xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-integer-divide.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") idiv xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") idiv xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") idiv xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") idiv xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") idiv xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") idiv xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") idiv xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") idiv xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") idiv xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") idiv xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") idiv xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") idiv xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") idiv xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") idiv xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") idiv xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") idiv xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") idiv xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") idiv xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") idiv xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") idiv xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") idiv xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") idiv xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") idiv xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") idiv xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") idiv xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") idiv xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") idiv xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") idiv xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") idiv xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") idiv xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") idiv xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") idiv xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") idiv xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") idiv xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") idiv xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") idiv xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") idiv xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") idiv xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") idiv xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") idiv xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") idiv xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") idiv xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") idiv xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") idiv xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") idiv xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") idiv xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") idiv xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") idiv xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") idiv xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") idiv xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") idiv xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") idiv xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") idiv xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") idiv xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") idiv xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") idiv xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") idiv xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") idiv xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") idiv xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") idiv xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") idiv xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") idiv xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") idiv xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") idiv xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") idiv xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") idiv xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") idiv xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") idiv xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") idiv xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") idiv xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") idiv xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") idiv xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") idiv xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") idiv xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") idiv xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") idiv xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") idiv xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") idiv xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") idiv xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") idiv xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") idiv xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") idiv xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") idiv xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") idiv xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") idiv xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() idiv 1</x:label>
      <x:variable name="expr" as="xs:string">() idiv 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv '1'</x:label>
      <x:variable name="expr" as="xs:string">1 idiv '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 idiv xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv 0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0 div 0E0) idiv xs:integer(2)</x:label>
      <x:variable name="expr" as="xs:string">(0 div 0E0) idiv xs:integer(2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) idiv xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) idiv xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) idiv xs:decimal(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) idiv xs:decimal(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) idiv xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) idiv xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) idiv xs:decimal(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) idiv xs:decimal(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) idiv xs:decimal(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) idiv xs:decimal(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) idiv xs:decimal(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) idiv xs:decimal(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) idiv xs:float(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) idiv xs:float(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) idiv xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) idiv xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) idiv xs:float(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) idiv xs:float(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) idiv xs:float(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) idiv xs:float(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) idiv xs:double(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) idiv xs:double(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) idiv xs:decimal(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) idiv xs:decimal(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) idiv xs:float(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) idiv xs:float(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) idiv xs:double(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) idiv xs:double(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) idiv xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) idiv xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) idiv xs:double(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) idiv xs:double(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) idiv xs:double(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) idiv xs:double(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 idiv 3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">10 idiv 3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 idiv -2 eq -1</x:label>
      <x:variable name="expr" as="xs:string">3 idiv -2 eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3 idiv 2 eq -1</x:label>
      <x:variable name="expr" as="xs:string">-3 idiv 2 eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3 idiv -2 eq 1</x:label>
      <x:variable name="expr" as="xs:string">-3 idiv -2 eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5.0 idiv 2.0 eq 2</x:label>
      <x:variable name="expr" as="xs:string">5.0 idiv 2.0 eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>9.0 idiv 3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">9.0 idiv 3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3.5 idiv 3 eq -1</x:label>
      <x:variable name="expr" as="xs:string">-3.5 idiv 3 eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.0 idiv 4 eq 0</x:label>
      <x:variable name="expr" as="xs:string">3.0 idiv 4 eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.1E1 idiv 6 eq 5</x:label>
      <x:variable name="expr" as="xs:string">3.1E1 idiv 6 eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.1E1 idiv 7 eq 4</x:label>
      <x:variable name="expr" as="xs:string">3.1E1 idiv 7 eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.1 idiv 1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(1.1 idiv 1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(1.1) idiv 1.1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(1.1) idiv 1.1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 idiv 1.1 eq 2</x:label>
      <x:variable name="expr" as="xs:string">3 idiv 1.1 eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">1 idiv xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") idiv 1</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") idiv 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") idiv xs:float(3)</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") idiv xs:float(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") idiv xs:float(3)</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") idiv xs:float(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3") idiv xs:float("INF") eq xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3") idiv xs:float("INF") eq xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3") idiv xs:float("-INF") eq xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3") idiv xs:float("-INF") eq xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">1 idiv xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") idiv 1</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") idiv 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") idiv xs:double(3)</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") idiv xs:double(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") idiv xs:double(3)</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") idiv xs:double(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3") idiv xs:double("INF") eq xs:double(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3") idiv xs:double("INF") eq xs:double(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3") idiv xs:double("-INF") eq xs:double(0)</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3") idiv xs:double("-INF") eq xs:double(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10idiv 3</x:label>
      <x:variable name="expr" as="xs:string">10idiv 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 idiv3</x:label>
      <x:variable name="expr" as="xs:string">10 idiv3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10idiv3</x:label>
      <x:variable name="expr" as="xs:string">10idiv3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" idiv "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" idiv "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" idiv xs:float(3)</x:label>
      <x:variable name="expr" as="xs:string">"3" idiv xs:float(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("9") idiv xs:float(5)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("9") idiv xs:float(5)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(9) idiv xs:untypedAtomic("5")) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(9) idiv xs:untypedAtomic("5")) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("nine") idiv xs:float(5)) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("nine") idiv xs:float(5)) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(9) idiv xs:untypedAtomic("five")) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(9) idiv xs:untypedAtomic("five")) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() idiv ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() idiv ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() idiv xs:decimal(1))</x:label>
      <x:variable name="expr" as="xs:string">empty(() idiv xs:decimal(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv 0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv 0.0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv 0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv +0.0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv +0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv -0.0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv -0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv 0e0</x:label>
      <x:variable name="expr" as="xs:string">1 idiv 0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 idiv 0e0</x:label>
      <x:variable name="expr" as="xs:string">-1 idiv 0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 idiv xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">1 idiv xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 idiv xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">-1 idiv xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") idiv xs:float("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") idiv xs:float("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1") idiv xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1") idiv xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1") idiv xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1") idiv xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") idiv xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") idiv xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.5") idiv xs:float("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.5") idiv xs:float("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") idiv xs:double("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") idiv xs:double("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1") idiv xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1") idiv xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1") idiv xs:double("0.0E0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1") idiv xs:double("0.0E0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") idiv xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") idiv xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("12.78e-2") idiv xs:double("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("12.78e-2") idiv xs:double("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(2) idiv xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(2) idiv xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1.5) idiv xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1.5) idiv xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1.5) idiv xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1.5) idiv xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('1e38') idiv xs:float('1e-37')</x:label>
      <x:variable name="expr" as="xs:string">xs:float('1e38') idiv xs:float('1e-37')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-less-than.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") lt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") lt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") lt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") lt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") lt xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") lt xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") lt xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") lt xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") lt xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") lt xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ge xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ge xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") ge xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") ge xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647") ge xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647") ge xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ge xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ge xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") ge xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") ge xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") lt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") lt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") lt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") lt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") lt xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") lt xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") lt xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") lt xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") lt xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") lt xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ge xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ge xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("830993497117024304") ge xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("830993497117024304") ge xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("999999999999999999") ge xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("999999999999999999") ge xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ge xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ge xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") ge xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") ge xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") lt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") lt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") lt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") lt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") lt xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") lt xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") lt xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") lt xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") lt xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") lt xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ge xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ge xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") ge xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") ge xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") ge xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") ge xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ge xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ge xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") ge xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") ge xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") lt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") lt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") lt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") lt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") lt xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") lt xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") lt xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") lt xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") lt xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") lt xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ge xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ge xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") ge xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") ge xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") ge xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") ge xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ge xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ge xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") ge xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") ge xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") lt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") lt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") lt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") lt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") lt xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") lt xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") lt xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") lt xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") lt xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") lt xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ge xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ge xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") ge xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") ge xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") ge xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") ge xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ge xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ge xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") ge xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") ge xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") lt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") lt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") lt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") lt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") lt xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") lt xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") lt xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") lt xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") lt xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") lt xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ge xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ge xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") ge xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") ge xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("92233720368547758") ge xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("92233720368547758") ge xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ge xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ge xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") ge xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") ge xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") lt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") lt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") lt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") lt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") lt xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") lt xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") lt xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") lt xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") lt xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") lt xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ge xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ge xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") ge xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") ge xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") ge xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") ge xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ge xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ge xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") ge xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") ge xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") lt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") lt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") lt xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") lt xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") lt xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-297014075999096793") ge xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-297014075999096793") ge xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") ge xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") ge xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") ge xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") lt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") lt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") lt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") lt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") lt xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") lt xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") lt xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") lt xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") lt xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") lt xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ge xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ge xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") ge xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") ge xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") ge xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") ge xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ge xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ge xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") ge xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") ge xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") lt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") lt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") lt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") lt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") lt xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") lt xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") lt xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") lt xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") lt xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") lt xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ge xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ge xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") ge xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") ge xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") ge xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") ge xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ge xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ge xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") ge xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") ge xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") lt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") lt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") lt xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") lt xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") lt xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-475688437271870490") ge xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-475688437271870490") ge xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") ge xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") ge xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") ge xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") lt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") lt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") lt xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") lt xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") lt xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") ge xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") ge xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") ge xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") ge xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") ge xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") lt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") lt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") lt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") lt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") lt xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") lt xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") lt xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") lt xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") lt xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") lt xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ge xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ge xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") ge xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") ge xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767") ge xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767") ge xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ge xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ge xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") ge xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") ge xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(-1) lt xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(-1) lt xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(-1) le xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(-1) le xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(-1) lt xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(-1) lt xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(-1) le xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(-1) le xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 lt xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">0 lt xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") lt 0</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") lt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(-1) lt xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(-1) lt xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(-1) le xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(-1) le xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 lt xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">0 lt xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") lt 0</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") lt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(-1) lt xs:float(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(-1) lt xs:float(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(-1) le xs:float(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(-1) le xs:float(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("NaN") lt 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("NaN") lt 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("NaN") lt 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("NaN") lt 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("NaN") le 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("NaN") le 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("NaN") le 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("NaN") le 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 lt xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 lt xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 lt xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 lt xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 le xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 le xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 le xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 le xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 le count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">1 le count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 lt count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">0 lt count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("100") lt xs:unsignedLong("18446744073709551615")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("100") lt xs:unsignedLong("18446744073709551615")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("18446744073709551615") lt xs:unsignedLong("100")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("18446744073709551615") lt xs:unsignedLong("100")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-mod.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") mod xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") mod xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") mod xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") mod xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") mod xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") mod xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") mod xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") mod xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") mod xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") mod xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") mod xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") mod xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") mod xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") mod xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") mod xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") mod xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") mod xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") mod xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") mod xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") mod xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") mod xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") mod xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") mod xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") mod xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") mod xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") mod xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") mod xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") mod xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") mod xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") mod xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") mod xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") mod xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") mod xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") mod xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") mod xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") mod xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") mod xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") mod xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") mod xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") mod xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() mod 1</x:label>
      <x:variable name="expr" as="xs:string">() mod 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 mod '1'</x:label>
      <x:variable name="expr" as="xs:string">1 mod '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 mod xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 mod xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) mod xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) mod xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) mod xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) mod xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) mod xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) mod xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) mod xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) mod xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) mod xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) mod xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) mod xs:decimal(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) mod xs:decimal(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) mod xs:integer(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) mod xs:integer(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) mod xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) mod xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) mod xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) mod xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) mod xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) mod xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) mod xs:decimal(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) mod xs:decimal(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) mod xs:float(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) mod xs:float(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) mod xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) mod xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) mod xs:integer(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) mod xs:integer(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) mod xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) mod xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) mod xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) mod xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 mod 3 eq 1</x:label>
      <x:variable name="expr" as="xs:string">10 mod 3 eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 mod -2 eq 0</x:label>
      <x:variable name="expr" as="xs:string">6 mod -2 eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4.5 mod 1.2 eq 0.9</x:label>
      <x:variable name="expr" as="xs:string">4.5 mod 1.2 eq 0.9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.23E2 mod 0.6E1 eq 3.0E0</x:label>
      <x:variable name="expr" as="xs:string">1.23E2 mod 0.6E1 eq 3.0E0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 mod3</x:label>
      <x:variable name="expr" as="xs:string">10 mod3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10mod 3</x:label>
      <x:variable name="expr" as="xs:string">10mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10mod3</x:label>
      <x:variable name="expr" as="xs:string">10mod3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" mod "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" mod "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" mod 1.1</x:label>
      <x:variable name="expr" as="xs:string">"3" mod 1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("5") mod xs:double(3)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("5") mod xs:double(3)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(5) mod xs:untypedAtomic("3")) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(5) mod xs:untypedAtomic("3")) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() mod ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() mod ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(xs:float(3) mod ())</x:label>
      <x:variable name="expr" as="xs:string">empty(xs:float(3) mod ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 mod -1</x:label>
      <x:variable name="expr" as="xs:string">-1 mod -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.0 mod -1.0</x:label>
      <x:variable name="expr" as="xs:string">-1.0 mod -1.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.0e0 mod -1.0e0</x:label>
      <x:variable name="expr" as="xs:string">-1.0e0 mod -1.0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.0e0 mod xs:float(-1.0e0)</x:label>
      <x:variable name="expr" as="xs:string">-1.0e0 mod xs:float(-1.0e0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 mod -9223372036854775808</x:label>
      <x:variable name="expr" as="xs:string">-1 mod -9223372036854775808</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.0 mod -9223372036854775808.0</x:label>
      <x:variable name="expr" as="xs:string">-1.0 mod -9223372036854775808.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.0e0 mod xs:double(-9223372036854775808)</x:label>
      <x:variable name="expr" as="xs:string">-1.0e0 mod xs:double(-9223372036854775808)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(-1.0e0) mod xs:float(-9223372036854775808)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(-1.0e0) mod xs:float(-9223372036854775808)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") mod xs:float("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") mod xs:float("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") mod xs:double("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") mod xs:double("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") mod xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") mod xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-INF") mod xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-INF") mod xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") mod xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") mod xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") mod xs:double("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") mod xs:double("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") mod xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") mod xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") mod xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") mod xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") mod xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") mod xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0") mod 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0") mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod xs:float("-0")</x:label>
      <x:variable name="expr" as="xs:string">3 mod xs:float("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0") mod xs:float("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0") mod xs:float("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0") mod xs:float("4")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0") mod xs:float("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") mod xs:float("4")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") mod xs:float("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") mod xs:double("4")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") mod xs:double("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") mod xs:double("4")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") mod xs:double("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0") mod xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0") mod xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") mod xs:float("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") mod xs:float("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") mod xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") mod xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") mod xs:double("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") mod xs:double("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0") mod xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0") mod xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") mod xs:float("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") mod xs:float("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0") mod xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0") mod xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") mod xs:double("-INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") mod xs:double("-INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("10000000") mod xs:double("10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("10000000") mod xs:double("10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-10000000") mod xs:double("-10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-10000000") mod xs:double("-10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("10000000") mod xs:double("-10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("10000000") mod xs:double("-10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-10000000") mod xs:double("10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-10000000") mod xs:double("10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("10000000") mod xs:float("10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("10000000") mod xs:float("10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-10000000") mod xs:float("-10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-10000000") mod xs:float("-10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("10000000") mod xs:float("-10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("10000000") mod xs:float("-10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-10000000") mod xs:float("10000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-10000000") mod xs:float("10000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod 0</x:label>
      <x:variable name="expr" as="xs:string">3 mod 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.0 mod 0</x:label>
      <x:variable name="expr" as="xs:string">3.0 mod 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 mod 0.0</x:label>
      <x:variable name="expr" as="xs:string">3 mod 0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-multiply.xml">
    <x:scenario>
      <x:label>xs:decimal("-1.0000000000") * xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.0000000000") * xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("617375191608514839") * xs:decimal("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("617375191608514839") * xs:decimal("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("999999999999999999") * xs:decimal("-1.0000000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("999999999999999999") * xs:decimal("-1.0000000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("0") * xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("0") * xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.0000000000") * xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.0000000000") * xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.0000000000") * xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.0000000000") * xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") * xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") * xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1.7976931348623157E308") * xs:double("-1.0000000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1.7976931348623157E308") * xs:double("-1.0000000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") * xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") * xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.0000000000") * xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.0000000000") * xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.0000000000") * xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.0000000000") * xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") * xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") * xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4028235E38") * xs:float("-1.0000000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4028235E38") * xs:float("-1.0000000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") * xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") * xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.0000000000") * xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.0000000000") * xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") * xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") * xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") * xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") * xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") * xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") * xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") * xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") * xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") * xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") * xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") * xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") * xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") * xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") * xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") * xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") * xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") * xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") * xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") * xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") * xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") * xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") * xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") * xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") * xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") * xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") * xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") * xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") * xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") * xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") * xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") * xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") * xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") * xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") * xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") * xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") * xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") * xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") * xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") * xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") * xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") * xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 * ()</x:label>
      <x:variable name="expr" as="xs:string">1 * ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 * '1'</x:label>
      <x:variable name="expr" as="xs:string">1 * '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 * xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 * xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(6) * xs:double(2) eq 12</x:label>
      <x:variable name="expr" as="xs:string">xs:double(6) * xs:double(2) eq 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6) * xs:decimal(2) eq 12</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6) * xs:decimal(2) eq 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) * xs:integer(2) eq 12</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) * xs:integer(2) eq 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(6) * xs:float(2) eq 12</x:label>
      <x:variable name="expr" as="xs:string">xs:float(6) * xs:float(2) eq 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) * xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) * xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) * xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) * xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) * xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) * xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) * xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) * xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) * xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) * xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) * xs:decimal(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) * xs:decimal(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) * xs:integer(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) * xs:integer(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) * xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) * xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) * xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) * xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) * xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) * xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) * xs:decimal(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) * xs:decimal(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) * xs:float(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) * xs:float(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) * xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) * xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) * xs:integer(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) * xs:integer(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) * xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) * xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) * xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) * xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:float("NaN") * 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:float("NaN") * 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:double("NaN") * 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:double("NaN") * 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 * xs:float("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 * xs:float("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 * xs:double("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 * xs:double("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*5</x:label>
      <x:variable name="expr" as="xs:string">/*5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/ * 5</x:label>
      <x:variable name="expr" as="xs:string">/ * 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 + / * 5</x:label>
      <x:variable name="expr" as="xs:string">4 + / * 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" * "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" * "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 * "3"</x:label>
      <x:variable name="expr" as="xs:string">1 * "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 * xs:untypedAtomic(3)) eq 9</x:label>
      <x:variable name="expr" as="xs:string">(3 * xs:untypedAtomic(3)) eq 9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic(3) * 3) eq 9</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic(3) * 3) eq 9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() * ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() * ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() * 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() * 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-subtract.xml">
    <x:scenario>
      <x:label>xs:int("-2147483648") - xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") - xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1873914410") - xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1873914410") - xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1") - xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1") - xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648") - xs:int("-1873914410")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648") - xs:int("-1873914410")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-1") - xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-1") - xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-999999999999999999") - xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-999999999999999999") - xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("0") - xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("0") - xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("0") - xs:integer("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("0") - xs:integer("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-169006502882975695") - xs:integer("830993497117024304")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-169006502882975695") - xs:integer("830993497117024304")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("0") - xs:integer("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("0") - xs:integer("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-999999999999999999") - xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-999999999999999999") - xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("0") - xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("0") - xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("0") - xs:decimal("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("0") - xs:decimal("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-382624808391485160") - xs:decimal("617375191608514839")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-382624808391485160") - xs:decimal("617375191608514839")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("0") - xs:decimal("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("0") - xs:decimal("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") - xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") - xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") - xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") - xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") - xs:double("-1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") - xs:double("-1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.7976931348623157E308") - xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.7976931348623157E308") - xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("0") - xs:double("1.7976931348623157E308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("0") - xs:double("1.7976931348623157E308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") - xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") - xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") - xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") - xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") - xs:float("-3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") - xs:float("-3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-3.4028235E38") - xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-3.4028235E38") - xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("0") - xs:float("3.4028235E38")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("0") - xs:float("3.4028235E38")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") - xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") - xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-47175562203048468") - xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-47175562203048468") - xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("0") - xs:long("-92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("0") - xs:long("-92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-92233720368547758") - xs:long("-47175562203048468")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-92233720368547758") - xs:long("-47175562203048468")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("0") - xs:long("92233720368547758")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("0") - xs:long("92233720368547758")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") - xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") - xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") - xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") - xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") - xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") - xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("44633") - xs:unsignedShort("44633")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("44633") - xs:unsignedShort("44633")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535") - xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535") - xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-297014075999096793")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-297014075999096793")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999") - xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610033") - xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610033") - xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999") - xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999") - xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52704602390610034") - xs:positiveInteger("52704602390610033")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52704602390610034") - xs:positiveInteger("52704602390610033")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") - xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") - xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") - xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") - xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") - xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") - xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("130747108607674654") - xs:unsignedLong("130747108607674654")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("130747108607674654") - xs:unsignedLong("130747108607674654")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("184467440737095516") - xs:unsignedLong("184467440737095516")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("184467440737095516") - xs:unsignedLong("184467440737095516")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-475688437271870490")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("-475688437271870490")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999") - xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") - xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") - xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("303884545991464527")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("303884545991464527") - xs:nonNegativeInteger("303884545991464527")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999") - xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") - xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") - xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-5324") - xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-5324") - xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-1") - xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-1") - xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768") - xs:short("-5324")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768") - xs:short("-5324")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-1") - xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-1") - xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 - ()</x:label>
      <x:variable name="expr" as="xs:string">1 - ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 - '1'</x:label>
      <x:variable name="expr" as="xs:string">1 - '1'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 - xs:integer('1')</x:label>
      <x:variable name="expr" as="xs:string">1 - xs:integer('1')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(6) - xs:double(2) eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:double(6) - xs:double(2) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6) - xs:decimal(2) eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6) - xs:decimal(2) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) - xs:integer(2) eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) - xs:integer(2) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(5) - xs:float(1) eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:float(5) - xs:float(1) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) - xs:integer(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) - xs:integer(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) - xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) - xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) - xs:integer(2)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) - xs:integer(2)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) - xs:decimal(2)) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) - xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) - xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) - xs:decimal(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) - xs:decimal(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) - xs:integer(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) - xs:integer(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) - xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) - xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) - xs:float(2)) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) - xs:float(2)) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(6) - xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(6) - xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) - xs:decimal(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) - xs:decimal(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) - xs:float(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) - xs:float(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:float(6) - xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:float(6) - xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) - xs:integer(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) - xs:integer(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(6) - xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(6) - xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(6) - xs:double(2)) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(6) - xs:double(2)) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:float("NaN") - 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:float("NaN") - 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:double("NaN") - 3) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:double("NaN") - 3) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 - xs:float("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 - xs:float("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(3 - xs:double("NaN")) eq "NaN"</x:label>
      <x:variable name="expr" as="xs:string">string(3 - xs:double("NaN")) eq "NaN"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" - "3"</x:label>
      <x:variable name="expr" as="xs:string">"3" - "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("3") - "3"</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") - "3"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") - 3) eq 0</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") - 3) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 - xs:untypedAtomic("3")) eq 0</x:label>
      <x:variable name="expr" as="xs:string">(3 - xs:untypedAtomic("3")) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() - ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() - ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() - xs:float(3))</x:label>
      <x:variable name="expr" as="xs:string">empty(() - xs:float(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() - xs:double(3))</x:label>
      <x:variable name="expr" as="xs:string">empty(() - xs:double(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") - xs:untypedAtomic("3")) eq 0</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") - xs:untypedAtomic("3")) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") - xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") - xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("3") - 1.1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("3") - 1.1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.1 - xs:untypedAtomic("3")) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">(1.1 - xs:untypedAtomic("3")) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (remove((current-time(), 1), 1) - 0)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (remove((current-time(), 1), 1) - 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (remove((current-time(), 1), 1) + 0)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (remove((current-time(), 1), 1) + 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (0 + remove((current-time(), 1), 1))</x:label>
      <x:variable name="expr" as="xs:string">1 eq (0 + remove((current-time(), 1), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 - xs:double(0)</x:label>
      <x:variable name="expr" as="xs:string">0 - xs:double(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 - xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">0 - xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-79228162514264337593543950335.0 - 1.0 lt 0.0</x:label>
      <x:variable name="expr" as="xs:string">-79228162514264337593543950335.0 - 1.0 lt 0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-79228162514264337593543950335 - 1 lt 0</x:label>
      <x:variable name="expr" as="xs:string">-79228162514264337593543950335 - 1 lt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-79228162514264337593543950335.0 - 1.0) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">(-79228162514264337593543950335.0 - 1.0) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-unary-minus.xml">
    <x:scenario>
      <x:label>-(xs:int("-2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:int("-2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">-(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-"a string"</x:label>
      <x:variable name="expr" as="xs:string">-"a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(-3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">+(-3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">(-3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(+3) ne -3</x:label>
      <x:variable name="expr" as="xs:string">(+3) ne -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-3 eq -3</x:label>
      <x:variable name="expr" as="xs:string">-3 eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(-3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">+(-3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(+3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">-(+3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">-(3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(3) eq -3</x:label>
      <x:variable name="expr" as="xs:string">-(3) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>---------3 eq -3</x:label>
      <x:variable name="expr" as="xs:string">---------3 eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+-+-+-+-+-+-+-+3 eq -3</x:label>
      <x:variable name="expr" as="xs:string">+-+-+-+-+-+-+-+3 eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>----+-+-++-+-+-+-+++-+--+--3 eq -3</x:label>
      <x:variable name="expr" as="xs:string">----+-+-++-+-+-+-+++-+--+--3 eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>---3 eq -3</x:label>
      <x:variable name="expr" as="xs:string">---3 eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1[. gt 0]</x:label>
      <x:variable name="expr" as="xs:string">-1[. gt 0]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-xs:double(0)</x:label>
      <x:variable name="expr" as="xs:string">-xs:double(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-xs:float(0)</x:label>
      <x:variable name="expr" as="xs:string">-xs:float(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-xs:decimal(0)</x:label>
      <x:variable name="expr" as="xs:string">-xs:decimal(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-xs:integer(0)</x:label>
      <x:variable name="expr" as="xs:string">-xs:integer(0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0.0</x:label>
      <x:variable name="expr" as="xs:string">-0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(-0.0)</x:label>
      <x:variable name="expr" as="xs:string">xs:float(-0.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(-0.0)</x:label>
      <x:variable name="expr" as="xs:string">xs:double(-0.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(-())</x:label>
      <x:variable name="expr" as="xs:string">empty(-())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/numeric-unary-plus.xml">
    <x:scenario>
      <x:label>+(xs:int("-2147483648"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:int("-2147483648"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:int("2147483647"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:int("2147483647"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:integer("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:integer("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:integer("830993497117024304"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:integer("830993497117024304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:integer("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:integer("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:decimal("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:decimal("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:decimal("617375191608514839"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:decimal("617375191608514839"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:decimal("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:decimal("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:double("-1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:double("-1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:double("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:double("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:double("1.7976931348623157E308"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:double("1.7976931348623157E308"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:float("-3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:float("-3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:float("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:float("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:float("3.4028235E38"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:float("3.4028235E38"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:long("-92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:long("-92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:long("-47175562203048468"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:long("-47175562203048468"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:long("92233720368547758"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:long("92233720368547758"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedShort("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedShort("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedShort("44633"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedShort("44633"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedShort("65535"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedShort("65535"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:negativeInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:negativeInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:negativeInteger("-297014075999096793"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:negativeInteger("-297014075999096793"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:negativeInteger("-1"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:negativeInteger("-1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:positiveInteger("1"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:positiveInteger("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:positiveInteger("52704602390610033"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:positiveInteger("52704602390610033"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:positiveInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:positiveInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedLong("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedLong("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedLong("130747108607674654"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedLong("130747108607674654"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:unsignedLong("184467440737095516"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:unsignedLong("184467440737095516"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonPositiveInteger("-999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonPositiveInteger("-999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonPositiveInteger("-475688437271870490"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonPositiveInteger("-475688437271870490"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonPositiveInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonPositiveInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonNegativeInteger("0"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonNegativeInteger("0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonNegativeInteger("303884545991464527"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonNegativeInteger("303884545991464527"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:nonNegativeInteger("999999999999999999"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:nonNegativeInteger("999999999999999999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:short("-32768"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:short("-32768"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:short("-5324"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:short("-5324"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(xs:short("32767"))</x:label>
      <x:variable name="expr" as="xs:string">+(xs:short("32767"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+"a string"</x:label>
      <x:variable name="expr" as="xs:string">+"a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(+3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(+3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(+3) eq +3</x:label>
      <x:variable name="expr" as="xs:string">(+3) eq +3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(+3) eq +(3)</x:label>
      <x:variable name="expr" as="xs:string">(+3) eq +(3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">+(3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+(3) eq +3</x:label>
      <x:variable name="expr" as="xs:string">+(3) eq +3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(3) ne 3</x:label>
      <x:variable name="expr" as="xs:string">-(3) ne 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>----------3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">----------3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+++++++++++3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">+++++++++++3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-+-+-+-+-+-+-+-3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">-+-+-+-+-+-+-+-3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-+-+-+-+-+-++-+-++-+-+-+-+++3 eq 3</x:label>
      <x:variable name="expr" as="xs:string">-+-+-+-+-+-++-+-++-+-+-+-+++3 eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+++3 eq ++3</x:label>
      <x:variable name="expr" as="xs:string">+++3 eq ++3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(+())</x:label>
      <x:variable name="expr" as="xs:string">empty(+())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/QName-equal.xml">
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person") eq fn:QName("http://www.example.com/example", "person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person") eq fn:QName("http://www.example.com/example", "person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person") ne fn:QName("http://www.example.com/example", "person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person") ne fn:QName("http://www.example.com/example", "person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example1", "person") eq fn:QName("http://www.example.com/example2", "person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example1", "person") eq fn:QName("http://www.example.com/example2", "person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example1", "person") ne fn:QName("http://www.example.com/example2", "person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example1", "person") ne fn:QName("http://www.example.com/example2", "person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person1") eq fn:QName("http://www.example.com/example","person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person1") eq fn:QName("http://www.example.com/example","person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person1") ne fn:QName("http://www.example.com/example","person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person1") ne fn:QName("http://www.example.com/example","person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person") eq fn:QName("http://www.example.com/example","px1:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person") eq fn:QName("http://www.example.com/example","px1:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person") ne fn:QName("http://www.example.com/example","px1:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person") ne fn:QName("http://www.example.com/example","px1:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person") eq fn:QName("http://www.example.com/example","px2:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person") eq fn:QName("http://www.example.com/example","px2:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person") ne fn:QName("http://www.example.com/example","px2:person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person") ne fn:QName("http://www.example.com/example","px2:person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person1") eq fn:QName("http://www.example.com/example","px2:person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person1") eq fn:QName("http://www.example.com/example","px2:person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "px1:person1") ne fn:QName("http://www.example.com/example","px2:person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "px1:person1") ne fn:QName("http://www.example.com/example","px2:person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example1", "px1:person1") eq fn:QName("http://www.example.com/example2","px2:person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example1", "px1:person1") eq fn:QName("http://www.example.com/example2","px2:person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example1", "px1:person1") ne fn:QName("http://www.example.com/example2","px2:person2")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example1", "px1:person1") ne fn:QName("http://www.example.com/example2","px2:person2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("", "person") eq fn:QName("http://www.example.com/example","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("", "person") eq fn:QName("http://www.example.com/example","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("", "person") ne fn:QName("http://www.example.com/example","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("", "person") ne fn:QName("http://www.example.com/example","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person") eq fn:QName("","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person") eq fn:QName("","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("http://www.example.com/example", "person") ne fn:QName("","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("http://www.example.com/example", "person") ne fn:QName("","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("", "person") eq fn:QName("","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("", "person") eq fn:QName("","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:QName("", "person") ne fn:QName("","person")</x:label>
      <x:variable name="expr" as="xs:string">fn:QName("", "person") ne fn:QName("","person")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:QName("http://www.example.com/example", "px1:person1") eq fn:QName("http://www.example.com/example","px2:person2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:QName("http://www.example.com/example", "px1:person1") eq fn:QName("http://www.example.com/example","px2:person2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:QName("http://www.example.com/example", "px1:person1") ne fn:QName("http://www.example.com/example","px2:person2"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:QName("http://www.example.com/example", "px1:person1") ne fn:QName("http://www.example.com/example","px2:person2"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:QName("http://www.example.com/example", "px:person") eq fn:QName("http://www.example.com/example","px:person")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(fn:QName("http://www.example.com/example", "px:person") eq fn:QName("http://www.example.com/example","px:person")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:QName("http://www.example.com/example", "px:person") ne fn:QName("http://www.example.com/example","px:person")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(fn:QName("http://www.example.com/example", "px:person") ne fn:QName("http://www.example.com/example","px:person")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("example.org/") eq xs:anyURI("example.org/")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("example.org/") eq xs:anyURI("example.org/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("example.org/") ne xs:anyURI("example.org/")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("example.org/") ne xs:anyURI("example.org/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") eq QName("example.com/", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") eq QName("example.com/", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") eq QName("example.com/", "pdifferent:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") eq QName("example.com/", "pdifferent:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") ne QName("example.com/Nope", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") ne QName("example.com/Nope", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") ne QName("example.com/", "p:ncnameNope")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") ne QName("example.com/", "p:ncnameNope")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") lt 1</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") lt 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") eq xs:anyURI("org")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") eq xs:anyURI("org")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") lt QName("example.com/", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") lt QName("example.com/", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") le QName("example.com/", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") le QName("example.com/", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") gt QName("example.com/", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") gt QName("example.com/", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("example.com/", "p:ncname") ge QName("example.com/", "p:ncname")</x:label>
      <x:variable name="expr" as="xs:string">QName("example.com/", "p:ncname") ge QName("example.com/", "p:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/string-equal.xml">
    <x:scenario>
      <x:label>'equals' eq 'equals'</x:label>
      <x:variable name="expr" as="xs:string">'equals' eq 'equals'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'' eq ''</x:label>
      <x:variable name="expr" as="xs:string">'' eq ''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('nada' eq 'equalness')</x:label>
      <x:variable name="expr" as="xs:string">not('nada' eq 'equalness')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'not' ne 'equal'</x:label>
      <x:variable name="expr" as="xs:string">'not' ne 'equal'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('equal' ne 'equal')</x:label>
      <x:variable name="expr" as="xs:string">not('equal' ne 'equal')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) eq "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) eq "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) ne "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) ne "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) eq xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) eq xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) ne xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) ne xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/string-greater-than.xml">
    <x:scenario>
      <x:label>'abc' gt 'a'</x:label>
      <x:variable name="expr" as="xs:string">'abc' gt 'a'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('abc' gt 'abc')</x:label>
      <x:variable name="expr" as="xs:string">not('abc' gt 'abc')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'abc' ge 'a'</x:label>
      <x:variable name="expr" as="xs:string">'abc' ge 'a'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('a' ge 'abc')</x:label>
      <x:variable name="expr" as="xs:string">not('a' ge 'abc')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'abc' ge 'abc'</x:label>
      <x:variable name="expr" as="xs:string">'abc' ge 'abc'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) gt "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) gt "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) le "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) le "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) gt xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) gt xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) le xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) le xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/string-less-than.xml">
    <x:scenario>
      <x:label>'a' lt 'abc'</x:label>
      <x:variable name="expr" as="xs:string">'a' lt 'abc'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('abc' lt 'a')</x:label>
      <x:variable name="expr" as="xs:string">not('abc' lt 'a')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'a' le 'abc'</x:label>
      <x:variable name="expr" as="xs:string">'a' le 'abc'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('abc' le 'a')</x:label>
      <x:variable name="expr" as="xs:string">not('abc' le 'a')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'abc' le 'abc'</x:label>
      <x:variable name="expr" as="xs:string">'abc' le 'abc'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"" lt "𑅰"</x:label>
      <x:variable name="expr" as="xs:string">"" lt "𑅰"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) lt "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) lt "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(current-time()) ge "now")</x:label>
      <x:variable name="expr" as="xs:string">not(string(current-time()) ge "now")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) lt xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) lt xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic(current-time()) ge xs:untypedAtomic("now"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic(current-time()) ge xs:untypedAtomic("now"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dates.xml">
    <x:scenario>
      <x:label>xs:date("2000-10-30") - xs:date("1999-11-28")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-30") - xs:date("1999-11-28")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-30+05:00") - xs:date("1999-11-28Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-30+05:00") - xs:date("1999-11-28Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-15-05:00") - xs:date("2000-10-10+02:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-15-05:00") - xs:date("2000-10-10+02:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:date("1998-09-12Z") - xs:date("1998-09-21Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:date("1998-09-12Z") - xs:date("1998-09-21Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:date("1962-03-12Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:date("1962-03-12Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:date("1988-01-28Z") - xs:date("2001-03-02"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:date("1988-01-28Z") - xs:date("2001-03-02"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("1989-07-05Z") - xs:date("1962-09-04Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("1989-07-05Z") - xs:date("1962-09-04Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("0001-01-01Z") - xs:date("2005-07-06Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("0001-01-01Z") - xs:date("2005-07-06Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1993-12-09Z") - xs:date("1992-10-02Z"))) and fn:string((xs:date("1993-12-09Z") - xs:date("1980-10-20Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1993-12-09Z") - xs:date("1992-10-02Z"))) and fn:string((xs:date("1993-12-09Z") - xs:date("1980-10-20Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1985-07-05Z") - xs:date("1977-12-02Z"))) or fn:string((xs:date("1985-07-05Z") - xs:date("1960-11-07Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1985-07-05Z") - xs:date("1977-12-02Z"))) or fn:string((xs:date("1985-07-05Z") - xs:date("1960-11-07Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1978-12-12Z") - xs:date("1978-12-12Z")) div xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1978-12-12Z") - xs:date("1978-12-12Z")) div xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-03-02Z") - xs:date("2001-09-11Z"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-03-02Z") - xs:date("2001-09-11Z"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-05-05Z") - xs:date("1981-12-03Z"))) eq xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-05-05Z") - xs:date("1981-12-03Z"))) eq xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1979-12-12Z") - xs:date("1979-11-11Z"))) ne xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1979-12-12Z") - xs:date("1979-11-11Z"))) ne xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1978-12-12Z") - xs:date("1977-03-12Z"))) le xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1978-12-12Z") - xs:date("1977-03-12Z"))) le xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1977-12-12Z") - xs:date("1976-12-12Z"))) ge xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1977-12-12Z") - xs:date("1976-12-12Z"))) ge xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("2000-12-12Z") - xs:date("2000-11-11Z")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("2000-12-12Z") - xs:date("2000-11-11Z")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1999-10-23Z") - xs:date("1998-09-09Z"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1999-10-23Z") - xs:date("1998-09-09Z"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1999-10-23Z") - xs:date("1998-09-09Z")) * xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1999-10-23Z") - xs:date("1998-09-09Z")) * xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1999-10-23Z") - xs:date("1998-09-09Z")) + xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1999-10-23Z") - xs:date("1998-09-09Z")) + xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-07-19") - xs:date("1969-11-30") eq xs:dayTimeDuration("P10823D")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-07-19") - xs:date("1969-11-30") eq xs:dayTimeDuration("P10823D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-07-19") - xs:date("1999-07-19") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-07-19") - xs:date("1999-07-19") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") + xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") + xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") div xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") div xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") * xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") * xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-10-12") mod xs:date("1999-10-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-10-12") mod xs:date("1999-10-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-25252734927766554-12-31") - xs:date("25252734927766554-12-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-25252734927766554-12-31") - xs:date("25252734927766554-12-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-25252734927766554-12-31") - xs:date("25252734927766554-12-31+01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-25252734927766554-12-31") - xs:date("25252734927766554-12-31+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2008-12-31") - xs:date("2002-12-31+01:00") + implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2008-12-31") - xs:date("2002-12-31+01:00") + implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2002-12-31+01:00") - xs:date("2008-12-31") - implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2002-12-31+01:00") - xs:date("2008-12-31") - implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dateTimes.xml">
    <x:scenario>
      <x:label>xs:dateTime("2000-10-30T06:12:00-05:00") - xs:dateTime("1999-11-28T09:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-10-30T06:12:00-05:00") - xs:dateTime("1999-11-28T09:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-12-12T09:08:07+05:00") - xs:dateTime("1999-12-12T09:08:07+05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-12-12T09:08:07+05:00") - xs:dateTime("1999-12-12T09:08:07+05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-02-03T02:09:07-06:00") - xs:dateTime("1998-02-03T02:09:07-06:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-02-03T02:09:07-06:00") - xs:dateTime("1998-02-03T02:09:07-06:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dateTime("1998-09-12T11:12:12Z") - xs:dateTime("1996-02-02T01:01:01Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dateTime("1998-09-12T11:12:12Z") - xs:dateTime("1996-02-02T01:01:01Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dateTime("1962-03-12T10:09:09Z") - xs:dateTime("1961-02-01T20:10:10Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dateTime("1962-03-12T10:09:09Z") - xs:dateTime("1961-02-01T20:10:10Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dateTime("1988-01-28T10:09:08Z") - xs:dateTime("1987-01-01T01:01:02Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dateTime("1988-01-28T10:09:08Z") - xs:dateTime("1987-01-01T01:01:02Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("1989-07-05T02:02:02Z") - xs:dateTime("1988-01-28T03:03:03Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("1989-07-05T02:02:02Z") - xs:dateTime("1988-01-28T03:03:03Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("0001-01-01T01:01:01Z") - xs:dateTime("2005-07-06T12:12:12Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("0001-01-01T01:01:01Z") - xs:dateTime("2005-07-06T12:12:12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1993-12-09T04:04:04Z") - xs:dateTime("1992-12-09T05:05:05Z"))) and fn:string((xs:dateTime("1993-12-09T01:01:01Z") - xs:dateTime("1992-12-09T06:06:06Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1993-12-09T04:04:04Z") - xs:dateTime("1992-12-09T05:05:05Z"))) and fn:string((xs:dateTime("1993-12-09T01:01:01Z") - xs:dateTime("1992-12-09T06:06:06Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1985-07-05T07:07:07Z") - xs:dateTime("1984-07-05T08:08:08Z"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:dateTime("1984-07-05T10:10:10Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1985-07-05T07:07:07Z") - xs:dateTime("1984-07-05T08:08:08Z"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:dateTime("1984-07-05T10:10:10Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1985-07-05T07:07:07Z") - xs:dateTime("1985-07-05T07:07:07Z")) div xs:dayTimeDuration("P05DT08H11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1985-07-05T07:07:07Z") - xs:dateTime("1985-07-05T07:07:07Z")) div xs:dayTimeDuration("P05DT08H11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-03-02T11:11:11Z") - xs:dateTime("1981-12-12T12:12:12Z"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-03-02T11:11:11Z") - xs:dateTime("1981-12-12T12:12:12Z"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-05-05T13:13:13Z") - xs:dateTime("1979-10-05T14:14:14Z"))) eq xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-05-05T13:13:13Z") - xs:dateTime("1979-10-05T14:14:14Z"))) eq xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1979-12-12T16:16:16Z") - xs:dateTime("1978-12-12T17:17:17Z"))) ne xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1979-12-12T16:16:16Z") - xs:dateTime("1978-12-12T17:17:17Z"))) ne xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1978-12-12T10:09:08Z") - xs:dateTime("1977-12-12T09:08:07Z"))) le xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1978-12-12T10:09:08Z") - xs:dateTime("1977-12-12T09:08:07Z"))) le xs:string(xs:dayTimeDuration("P17DT10H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1977-12-12T01:02:02Z") - xs:dateTime("1976-12-12T02:03:04Z"))) ge xs:string(xs:dayTimeDuration("P18DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1977-12-12T01:02:02Z") - xs:dateTime("1976-12-12T02:03:04Z"))) ge xs:string(xs:dayTimeDuration("P18DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("2000-12-12T12:07:08Z") - xs:dateTime("1999-12-12T13:08:09Z")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("2000-12-12T12:07:08Z") - xs:dateTime("1999-12-12T13:08:09Z")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1999-10-23T03:02:01Z") - xs:dateTime("1998-09-09T04:04:05Z"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1999-10-23T03:02:01Z") - xs:dateTime("1998-09-09T04:04:05Z"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1999-10-23T01:01:01Z") - xs:dateTime("1998-09-09T02:02:02Z")) * xs:decimal(2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1999-10-23T01:01:01Z") - xs:dateTime("1998-09-09T02:02:02Z")) * xs:decimal(2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1999-10-23T09:08:07Z") - xs:dateTime("1998-09-09T04:03:02Z")) + xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1999-10-23T09:08:07Z") - xs:dateTime("1998-09-09T04:03:02Z")) + xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-07-19T08:23:12.765") - xs:dateTime("1999-07-19T08:23:12.765") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-07-19T08:23:12.765") - xs:dateTime("1999-07-19T08:23:12.765") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:01:23") + xs:dateTime("1999-10-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:01:23") + xs:dateTime("1999-10-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:01:23") div xs:dateTime("1999-10-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:01:23") div xs:dateTime("1999-10-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:01:23") * xs:dateTime("1999-10-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:01:23") * xs:dateTime("1999-10-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-10-12T08:01:23") mod xs:dateTime("1999-10-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-10-12T08:01:23") mod xs:dateTime("1999-10-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") - xs:dateTime("1999-08-12T08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") - xs:dateTime("1999-08-12T08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-25252734927766554-12-31T12:00:00") - xs:dateTime("25252734927766554-12-31T12:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-25252734927766554-12-31T12:00:00") - xs:dateTime("25252734927766554-12-31T12:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-25252734927766554-12-31T12:00:00") - xs:dateTime("25252734927766554-12-31T12:00:00+01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-25252734927766554-12-31T12:00:00") - xs:dateTime("25252734927766554-12-31T12:00:00+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2008-12-31T12:00:00") - xs:dateTime("2002-12-31T12:00:00+01:00") + implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2008-12-31T12:00:00") - xs:dateTime("2002-12-31T12:00:00+01:00") + implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-12-31T12:00:00+01:00") - xs:dateTime("2008-12-31T12:00:00") - implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-12-31T12:00:00+01:00") - xs:dateTime("2008-12-31T12:00:00") - implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dayTimeDuration-from-date.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-30") - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-30") - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("2000-12-12Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("2000-12-12Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1999-10-23Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1999-10-23Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:date("1998-09-12Z") - xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:date("1998-09-12Z") - xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:date("1988-01-28Z") - xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:date("1988-01-28Z") - xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("1989-07-05Z") - xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("1989-07-05Z") - xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("0001-01-01Z") - xs:dayTimeDuration("P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("0001-01-01Z") - xs:dayTimeDuration("P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1993-12-09Z") - xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:date("1993-12-09Z") - xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1993-12-09Z") - xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:date("1993-12-09Z") - xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1985-07-05Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:date("1985-07-05Z") - xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1985-07-05Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:date("1985-07-05Z") - xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-03-02Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-03-02Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-05Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:date("1980-05-05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-05Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:date("1980-05-05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1979-12-12Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:date("1979-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1979-12-12Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:date("1979-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1978-12-12Z") - xs:dayTimeDuration("P17DT10H02M")) le xs:date("1978-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1978-12-12Z") - xs:dayTimeDuration("P17DT10H02M")) le xs:date("1978-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1977-12-12Z") - xs:dayTimeDuration("P18DT02H02M")) ge xs:date("1977-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1977-12-12Z") - xs:dayTimeDuration("P18DT02H02M")) ge xs:date("1977-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-08-12") - xs:dayTimeDuration("P23DT09H32M59S") eq xs:date("1999-07-19")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-08-12") - xs:dayTimeDuration("P23DT09H32M59S") eq xs:date("1999-07-19")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dayTimeDuration-from-dateTime.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-10-30T11:12:00") - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-10-30T11:12:00") - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("2000-12-12T11:10:03Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("2000-12-12T11:10:03Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1999-10-23T03:12:23Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1999-10-23T03:12:23Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dateTime("1998-09-12T13:23:23Z") - xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dateTime("1998-09-12T13:23:23Z") - xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dateTime("1962-03-12T12:34:09Z") - xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dateTime("1962-03-12T12:34:09Z") - xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dateTime("1988-01-28T12:34:12Z") - xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dateTime("1988-01-28T12:34:12Z") - xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("1989-07-05T10:10:10Z") - xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("1989-07-05T10:10:10Z") - xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("0001-01-01T11:11:11Z") - xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("0001-01-01T11:11:11Z") - xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1993-12-09T13:13:13Z") - xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:dateTime("1993-12-09T13:13:13Z") - xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1993-12-09T13:13:13Z") - xs:dayTimeDuration("P03DT01H04M"))) and fn:string((xs:dateTime("1993-12-09T13:13:13Z") - xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1985-07-05T14:14:14Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dateTime("1985-07-05T15:15:15Z") - xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1985-07-05T14:14:14Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dateTime("1985-07-05T15:15:15Z") - xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-03-02T16:12:10Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-03-02T16:12:10Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1980-05-05T17:17:17Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:dateTime("1980-05-05T17:17:17Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1980-05-05T17:17:17Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:dateTime("1980-05-05T17:17:17Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1979-12-12T18:18:18Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:dateTime("1979-12-12T16:15:14Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1979-12-12T18:18:18Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:dateTime("1979-12-12T16:15:14Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1978-12-12T12:45:12Z") - xs:dayTimeDuration("P17DT10H02M")) le xs:dateTime("1978-12-12T16:34:23Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1978-12-12T12:45:12Z") - xs:dayTimeDuration("P17DT10H02M")) le xs:dateTime("1978-12-12T16:34:23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1977-12-12T13:12:15Z") - xs:dayTimeDuration("P18DT02H02M")) ge xs:dateTime("1977-12-12T15:56:10Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1977-12-12T13:12:15Z") - xs:dayTimeDuration("P18DT02H02M")) ge xs:dateTime("1977-12-12T15:56:10Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dayTimeDuration-from-time.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:12:00") - xs:dayTimeDuration("P3DT1H15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:12:00") - xs:dayTimeDuration("P3DT1H15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:20:00-05:00") - xs:dayTimeDuration("P23DT10H10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:20:00-05:00") - xs:dayTimeDuration("P23DT10H10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("12:12:01Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("12:12:01Z") - xs:dayTimeDuration("P19DT13H10M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:time("20:50:50Z") - xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:time("20:50:50Z") - xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:time("23:55:55Z") - xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:time("23:55:55Z") - xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:time("10:11:45Z") - xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:time("10:11:45Z") - xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:time("19:45:55Z") - xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:time("19:45:55Z") - xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("01:01:01") - xs:dayTimeDuration("-P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("01:01:01") - xs:dayTimeDuration("-P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("10:10:10Z") - xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:time("09:02:02Z") - xs:dayTimeDuration("P04DT04H04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("10:10:10Z") - xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:time("09:02:02Z") - xs:dayTimeDuration("P04DT04H04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("23:45:50Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:time("23:45:50Z") + xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("23:45:50Z") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:time("23:45:50Z") + xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("02:02:02Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("02:02:02Z") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("01:03:03Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:time("04:03:05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("01:03:03Z") - xs:dayTimeDuration("P23DT11H11M")) eq xs:time("04:03:05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("04:04:05Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:time("05:08:02Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("04:04:05Z") - xs:dayTimeDuration("P08DT08H05M")) ne xs:time("05:08:02Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("08:09:09Z") - xs:dayTimeDuration("P17DT10H02M"))) le fn:string(xs:time("09:08:10Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("08:09:09Z") - xs:dayTimeDuration("P17DT10H02M"))) le fn:string(xs:time("09:08:10Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("09:06:07Z") - xs:dayTimeDuration("P18DT02H02M"))) ge fn:string(xs:time("01:01:01Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("09:06:07Z") - xs:dayTimeDuration("P18DT02H02M"))) ge fn:string(xs:time("01:01:01Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:time("12:07:08Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:time("12:07:08Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:32") - xs:dayTimeDuration("P23DT09H32M59S") eq xs:time("22:39:33")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:32") - xs:dayTimeDuration("P23DT09H32M59S") eq xs:time("22:39:33")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y") + xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y") + xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") + xs:yearMonthDuration("P1Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") + xs:yearMonthDuration("P1Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y") - xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y") - xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") - xs:yearMonthDuration("P1Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") - xs:yearMonthDuration("P1Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-dayTimeDurations.xml">
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P15DT11H59M59S") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P15DT11H59M59S") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P31DT23H59M59S") - xs:dayTimeDuration("P0DT0H0M0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P31DT23H59M59S") - xs:dayTimeDuration("P0DT0H0M0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P15DT11H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P15DT11H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P31DT23H59M59S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P0DT0H0M0S") - xs:dayTimeDuration("P31DT23H59M59S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P2DT12H") - xs:dayTimeDuration("P1DT10H30M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P2DT12H") - xs:dayTimeDuration("P1DT10H30M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P10DT10H11M") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P10DT10H11M") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P20DT20H10M") - xs:dayTimeDuration("P19DT13H10M")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P20DT20H10M") - xs:dayTimeDuration("P19DT13H10M")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") - xs:dayTimeDuration("P02DT07H01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dayTimeDuration("P11DT12H04M") - xs:dayTimeDuration("P02DT07H01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") - xs:dayTimeDuration("P03DT08H06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dayTimeDuration("P05DT09H08M") - xs:dayTimeDuration("P03DT08H06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dayTimeDuration("P02DT06H09M") - xs:dayTimeDuration("P10DT08H01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dayTimeDuration("P02DT06H09M") - xs:dayTimeDuration("P10DT08H01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dayTimeDuration("P03DT04H08M") - xs:dayTimeDuration("P01DT09H02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dayTimeDuration("P03DT04H08M") - xs:dayTimeDuration("P01DT09H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT01H01M") - xs:dayTimeDuration("P11DT02H02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT01H01M") - xs:dayTimeDuration("P11DT02H02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P01DT02H01M") - xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:dayTimeDuration("P02DT03H03M") - xs:dayTimeDuration("P04DT04H04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P01DT02H01M") - xs:dayTimeDuration("P02DT09H02M"))) and fn:string((xs:dayTimeDuration("P02DT03H03M") - xs:dayTimeDuration("P04DT04H04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P05DT09H02M") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dayTimeDuration("P05DT05H03M") - xs:dayTimeDuration("P01DT01H03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P05DT09H02M") - xs:dayTimeDuration("P03DT01H04M"))) or fn:string((xs:dayTimeDuration("P05DT05H03M") - xs:dayTimeDuration("P01DT01H03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P42DT10H10M") - xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P20DT10H10M") - xs:dayTimeDuration("P18DT10H10M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P42DT10H10M") - xs:dayTimeDuration("P10DT10H10M")) div (xs:dayTimeDuration("P20DT10H10M") - xs:dayTimeDuration("P18DT10H10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dayTimeDuration("P10DT08H11M") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dayTimeDuration("P10DT08H11M") - xs:dayTimeDuration("P05DT08H11M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P23DT11H11M") - xs:dayTimeDuration("P23DT11H11M")) eq xs:dayTimeDuration("P23DT11H11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P23DT11H11M") - xs:dayTimeDuration("P23DT11H11M")) eq xs:dayTimeDuration("P23DT11H11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P21DT08H12M") - xs:dayTimeDuration("P08DT08H05M")) ne xs:dayTimeDuration("P08DT08H05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P21DT08H12M") - xs:dayTimeDuration("P08DT08H05M")) ne xs:dayTimeDuration("P08DT08H05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P10DT10H01M") - xs:dayTimeDuration("P17DT10H02M")) le xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P10DT10H01M") - xs:dayTimeDuration("P17DT10H02M")) le xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dayTimeDuration("P13DT09H09M") - xs:dayTimeDuration("P18DT02H02M")) ge xs:dayTimeDuration("P18DT02H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dayTimeDuration("P13DT09H09M") - xs:dayTimeDuration("P18DT02H02M")) ge xs:dayTimeDuration("P18DT02H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT4H3M3.100S") - xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT4H3M3.100S") - xs:dayTimeDuration("PT0S") eq xs:dayTimeDuration("P3DT4H3M3.100S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") - xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("-P3DT4H3M3.100S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") - xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("-P3DT4H3M3.100S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT0S") - xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("-P3DT4H3M3.100S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT0S") - xs:dayTimeDuration("P3DT4H3M3.100S") eq xs:dayTimeDuration("-P3DT4H3M3.100S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") - xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") - xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") - xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") - xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3D") - xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3D") - xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") - xs:duration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") - xs:duration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") - xs:duration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") - xs:duration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3Y3M") - xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3Y3M") - xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(current-time() - xs:dayTimeDuration("PT3H")) ne current-time()</x:label>
      <x:variable name="expr" as="xs:string">(current-time() - xs:dayTimeDuration("PT3H")) ne current-time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(current-dateTime() - xs:dayTimeDuration("PT3H")) lt current-dateTime()</x:label>
      <x:variable name="expr" as="xs:string">(current-dateTime() - xs:dayTimeDuration("PT3H")) lt current-dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-times.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") - xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") - xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") - xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") - xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") - xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") - xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:12:00Z") - xs:time("04:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:12:00Z") - xs:time("04:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:00:00-05:00") - xs:time("21:30:00+05:30")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:00:00-05:00") - xs:time("21:30:00+05:30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("17:00:00-06:00") - xs:time("08:00:00+09:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("17:00:00-06:00") - xs:time("08:00:00+09:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:time("13:00:00Z") - xs:time("14:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:time("13:00:00Z") - xs:time("14:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:time("13:00:00Z") - xs:time("10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:time("13:00:00Z") - xs:time("10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:time("13:00:00Z") - xs:time("12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:time("13:00:00Z") - xs:time("12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:time("13:00:00Z") - xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:time("13:00:00Z") - xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") - xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") - xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("13:00:00Z") - xs:time("12:00:00Z"))) and fn:string((xs:time("13:00:00Z") - xs:time("10:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("13:00:00Z") - xs:time("12:00:00Z"))) and fn:string((xs:time("13:00:00Z") - xs:time("10:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("13:00:00Z") - xs:time("17:00:00Z"))) or fn:string((xs:time("13:00:00Z") - xs:time("17:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("13:00:00Z") - xs:time("17:00:00Z"))) or fn:string((xs:time("13:00:00Z") - xs:time("17:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("23:00:00Z") - xs:time("17:00:00Z")) div (xs:time("13:00:00Z") - xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("23:00:00Z") - xs:time("17:00:00Z")) div (xs:time("13:00:00Z") - xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:time("17:00:00Z") - xs:time("13:00:00Z"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:time("17:00:00Z") - xs:time("13:00:00Z"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") - xs:time("17:00:00Z")) eq xs:dayTimeDuration("P20DT01H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") - xs:time("17:00:00Z")) eq xs:dayTimeDuration("P20DT01H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") - xs:time("17:00:00Z")) ne xs:dayTimeDuration("P10DT01H01M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") - xs:time("17:00:00Z")) ne xs:dayTimeDuration("P10DT01H01M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") - xs:time("17:00:00Z")) le xs:dayTimeDuration("P10DT02H10M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") - xs:time("17:00:00Z")) le xs:dayTimeDuration("P10DT02H10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") - xs:time("17:00:00Z")) ge xs:dayTimeDuration("P17DT10H02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") - xs:time("17:00:00Z")) ge xs:dayTimeDuration("P17DT10H02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:32") - xs:time("18:12:32") eq xs:dayTimeDuration("-PT10H")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:32") - xs:time("18:12:32") eq xs:dayTimeDuration("-PT10H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:12:32") - xs:time("08:12:32") eq xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:12:32") - xs:time("08:12:32") eq xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") - xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") - xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") - xs:date("1999-08-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") - xs:date("1999-08-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") + xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") + xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") * xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") * xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") div xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") div xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:01:23") mod xs:time("08:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:01:23") mod xs:time("08:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:00:00+01:00") - xs:time("12:00:00") - implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:00:00+01:00") - xs:time("12:00:00") - implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:00:00") - xs:time("12:00:00+01:00") + implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:00:00") - xs:time("12:00:00+01:00") + implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("12:00:00")) - fn:adjust-time-to-timezone(xs:time("08:00:00+05:00"), xs:dayTimeDuration("PT1H")) + implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("12:00:00")) - fn:adjust-time-to-timezone(xs:time("08:00:00+05:00"), xs:dayTimeDuration("PT1H")) + implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:adjust-time-to-timezone(xs:time("08:00:00+05:00"), xs:dayTimeDuration("PT1H")) - fn:adjust-time-to-timezone(xs:time("12:00:00")) - implicit-timezone()</x:label>
      <x:variable name="expr" as="xs:string">fn:adjust-time-to-timezone(xs:time("08:00:00+05:00"), xs:dayTimeDuration("PT1H")) - fn:adjust-time-to-timezone(xs:time("12:00:00")) - implicit-timezone()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-yearMonthDuration-from-date.xml">
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1983-11-17Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1983-11-17Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2030-12-31Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2030-12-31Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1970-01-01Z") - xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1970-01-01Z") - xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-30") - xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-30") - xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-02-29Z") - xs:yearMonthDuration("P1Y")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-02-29Z") - xs:yearMonthDuration("P1Y")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-10-31-05:00") - xs:yearMonthDuration("P1Y1M")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-10-31-05:00") - xs:yearMonthDuration("P1Y1M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:date("1998-09-12Z") - xs:yearMonthDuration("P20Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:date("1998-09-12Z") - xs:yearMonthDuration("P20Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:yearMonthDuration("P10Y01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:date("1962-03-12Z") - xs:yearMonthDuration("P10Y01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:date("1988-01-28Z") - xs:yearMonthDuration("P09Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:date("1988-01-28Z") - xs:yearMonthDuration("P09Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("1989-07-05Z") - xs:yearMonthDuration("P08Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("1989-07-05Z") - xs:yearMonthDuration("P08Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("0001-01-01Z") - xs:yearMonthDuration("-P20Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("0001-01-01Z") - xs:yearMonthDuration("-P20Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1993-12-09Z") - xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:date("1993-12-09Z") - xs:yearMonthDuration("P03Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1993-12-09Z") - xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:date("1993-12-09Z") - xs:yearMonthDuration("P03Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1985-07-05Z") - xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:date("1985-07-05Z") - xs:yearMonthDuration("P02Y02M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1985-07-05Z") - xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:date("1985-07-05Z") - xs:yearMonthDuration("P02Y02M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1980-03-02Z") - xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1980-03-02Z") - xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1980-05-05Z") - xs:yearMonthDuration("P23Y11M")) eq xs:date("1980-05-05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1980-05-05Z") - xs:yearMonthDuration("P23Y11M")) eq xs:date("1980-05-05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1979-12-12Z") - xs:yearMonthDuration("P08Y08M")) ne xs:date("1979-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1979-12-12Z") - xs:yearMonthDuration("P08Y08M")) ne xs:date("1979-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1978-12-12Z") - xs:yearMonthDuration("P17Y12M")) le xs:date("1978-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1978-12-12Z") - xs:yearMonthDuration("P17Y12M")) le xs:date("1978-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:date("1977-12-12Z") - xs:yearMonthDuration("P18Y02M")) ge xs:date("1977-12-12Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:date("1977-12-12Z") - xs:yearMonthDuration("P18Y02M")) ge xs:date("1977-12-12Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:date("2000-12-12Z") - xs:yearMonthDuration("P18Y11M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:date("2000-12-12Z") - xs:yearMonthDuration("P18Y11M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:date("1999-10-23Z") - xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:date("1999-10-23Z") - xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-08-12") - xs:yearMonthDuration("P3Y7M") eq xs:date("1996-01-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-08-12") - xs:yearMonthDuration("P3Y7M") eq xs:date("1996-01-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-yearMonthDuration-from-dateTime.xml">
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1996-04-07T01:40:52Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1996-04-07T01:40:52Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2030-12-31T23:59:59Z") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2030-12-31T23:59:59Z") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1970-01-01T00:00:00Z") - xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-10-30T11:12:00") - xs:yearMonthDuration("P1Y2M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-10-30T11:12:00") - xs:yearMonthDuration("P1Y2M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("2000-12-12T12:12:12Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("2000-12-12T12:12:12Z") - xs:dayTimeDuration("P12DT10H07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1999-10-23T13:45:45Z") - xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1999-10-23T13:45:45Z") - xs:yearMonthDuration("P19Y12M"))) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:dateTime("1998-09-12T13:56:12Z") - xs:yearMonthDuration("P20Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:dateTime("1998-09-12T13:56:12Z") - xs:yearMonthDuration("P20Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:dateTime("1962-03-12T10:12:34Z") - xs:yearMonthDuration("P10Y01M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:dateTime("1962-03-12T10:12:34Z") - xs:yearMonthDuration("P10Y01M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:dateTime("1988-01-28T13:45:23Z") - xs:yearMonthDuration("P09Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:dateTime("1988-01-28T13:45:23Z") - xs:yearMonthDuration("P09Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:dateTime("1989-07-05T14:34:36Z") - xs:yearMonthDuration("P08Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:dateTime("1989-07-05T14:34:36Z") - xs:yearMonthDuration("P08Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("0001-01-01T01:01:01Z") - xs:yearMonthDuration("-P20Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("0001-01-01T01:01:01Z") - xs:yearMonthDuration("-P20Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1993-12-09T10:10:10Z") - xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:dateTime("1993-12-09T10:10:10Z") - xs:yearMonthDuration("P03Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1993-12-09T10:10:10Z") - xs:yearMonthDuration("P03Y03M"))) and fn:string((xs:dateTime("1993-12-09T10:10:10Z") - xs:yearMonthDuration("P03Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:yearMonthDuration("P02Y02M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:yearMonthDuration("P02Y02M"))) or fn:string((xs:dateTime("1985-07-05T09:09:09Z") - xs:yearMonthDuration("P02Y02M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:dateTime("1980-03-02T02:02:02Z") - xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:dateTime("1980-03-02T02:02:02Z") - xs:yearMonthDuration("P05Y05M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1980-05-05T05:05:05Z") - xs:yearMonthDuration("P23Y11M")) eq xs:dateTime("1980-05-05T05:05:05Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1980-05-05T05:05:05Z") - xs:yearMonthDuration("P23Y11M")) eq xs:dateTime("1980-05-05T05:05:05Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1979-12-12T09:09:09Z") - xs:yearMonthDuration("P08Y08M")) ne xs:dateTime("1979-12-12T09:09:09Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1979-12-12T09:09:09Z") - xs:yearMonthDuration("P08Y08M")) ne xs:dateTime("1979-12-12T09:09:09Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1978-12-12T07:07:07Z") - xs:yearMonthDuration("P17Y12M")) le xs:dateTime("1978-12-12T07:07:07Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1978-12-12T07:07:07Z") - xs:yearMonthDuration("P17Y12M")) le xs:dateTime("1978-12-12T07:07:07Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:dateTime("1977-12-12T03:03:03Z") - xs:yearMonthDuration("P18Y02M")) ge xs:dateTime("1977-12-12T03:03:03Z")</x:label>
      <x:variable name="expr" as="xs:string">(xs:dateTime("1977-12-12T03:03:03Z") - xs:yearMonthDuration("P18Y02M")) ge xs:dateTime("1977-12-12T03:03:03Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-07-19T08:23:01.765") - xs:yearMonthDuration("P3Y35M") eq xs:dateTime("1993-08-19T08:23:01.765")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-07-19T08:23:01.765") - xs:yearMonthDuration("P3Y35M") eq xs:dateTime("1993-08-19T08:23:01.765")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/subtract-yearMonthDurations.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") - xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") - xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") - xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P2Y11M") - xs:yearMonthDuration("P3Y3M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P2Y11M") - xs:yearMonthDuration("P3Y3M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P10Y11M") - xs:yearMonthDuration("P12Y07M")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P10Y11M") - xs:yearMonthDuration("P12Y07M")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P20Y10M") - xs:yearMonthDuration("P19Y10M")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P20Y10M") - xs:yearMonthDuration("P19Y10M")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(fn:string(xs:yearMonthDuration("P11Y04M") - xs:yearMonthDuration("P02Y11M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(fn:string(xs:yearMonthDuration("P11Y04M") - xs:yearMonthDuration("P02Y11M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") - xs:yearMonthDuration("P03Y06M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:boolean(fn:string(xs:yearMonthDuration("P05Y08M") - xs:yearMonthDuration("P03Y06M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:number(xs:yearMonthDuration("P02Y09M") - xs:yearMonthDuration("P10Y01M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:number(xs:yearMonthDuration("P02Y09M") - xs:yearMonthDuration("P10Y01M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string(xs:yearMonthDuration("P03Y08M") - xs:yearMonthDuration("P01Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:yearMonthDuration("P03Y08M") - xs:yearMonthDuration("P01Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") - xs:yearMonthDuration("P11Y02M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") - xs:yearMonthDuration("P11Y02M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P01Y01M") - xs:yearMonthDuration("P02Y02M"))) and fn:string((xs:yearMonthDuration("P02Y03M") - xs:yearMonthDuration("P04Y04M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P01Y01M") - xs:yearMonthDuration("P02Y02M"))) and fn:string((xs:yearMonthDuration("P02Y03M") - xs:yearMonthDuration("P04Y04M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P05Y02M") - xs:yearMonthDuration("P03Y04M"))) or fn:string((xs:yearMonthDuration("P05Y03M") - xs:yearMonthDuration("P01Y03M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P05Y02M") - xs:yearMonthDuration("P03Y04M"))) or fn:string((xs:yearMonthDuration("P05Y03M") - xs:yearMonthDuration("P01Y03M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P42Y10M") - xs:yearMonthDuration("P20Y10M")) div (xs:yearMonthDuration("P20Y11M") - xs:yearMonthDuration("P18Y11M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P42Y10M") - xs:yearMonthDuration("P20Y10M")) div (xs:yearMonthDuration("P20Y11M") - xs:yearMonthDuration("P18Y11M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:string((xs:yearMonthDuration("P10Y11M") - xs:yearMonthDuration("P05Y07M"))) and (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">fn:string((xs:yearMonthDuration("P10Y11M") - xs:yearMonthDuration("P05Y07M"))) and (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P23Y11M") - xs:yearMonthDuration("P23Y11M")) eq xs:yearMonthDuration("P23Y11M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P23Y11M") - xs:yearMonthDuration("P23Y11M")) eq xs:yearMonthDuration("P23Y11M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P21Y12M") - xs:yearMonthDuration("P08Y05M")) ne xs:yearMonthDuration("P08Y05M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P21Y12M") - xs:yearMonthDuration("P08Y05M")) ne xs:yearMonthDuration("P08Y05M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") - xs:yearMonthDuration("P17Y02M")) le xs:yearMonthDuration("P17Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") - xs:yearMonthDuration("P17Y02M")) le xs:yearMonthDuration("P17Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P13Y09M") - xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P13Y09M") - xs:yearMonthDuration("P18Y02M")) ge xs:yearMonthDuration("P18Y02M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") - xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") - xs:yearMonthDuration("P0M") eq xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0M") - xs:yearMonthDuration("P3Y3M") eq xs:yearMonthDuration("-P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0M") - xs:yearMonthDuration("P3Y3M") eq xs:yearMonthDuration("-P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P32Y43M") - xs:yearMonthDuration("P12Y13M") eq xs:yearMonthDuration("P22Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P32Y43M") - xs:yearMonthDuration("P12Y13M") eq xs:yearMonthDuration("P22Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") + xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") + xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") + xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") + xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3D") + xs:yearMonthDuration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3D") + xs:yearMonthDuration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P3Y3M") + xs:duration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P3Y3M") + xs:duration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3D") + xs:duration("P3Y3M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3D") + xs:duration("P3Y3M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P3Y3M") + xs:dayTimeDuration("P3D")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P3Y3M") + xs:dayTimeDuration("P3D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/time-equal.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") eq xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") eq xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") eq xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") eq xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") eq xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") eq xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") eq xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") eq xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") eq xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") eq xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ne xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ne xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") ne xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") ne xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") ne xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") ne xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ne xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ne xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ne xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ne xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:04.12") eq xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:04.12") eq xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:04.12") eq xs:time("23:01:04.13"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:04.12") eq xs:time("23:01:04.13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:05.12") ne xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:05.12") ne xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:04.12") ne xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:04.12") ne xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("16:00:12.345-00:00") eq xs:time("16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("16:00:12.345-00:00") eq xs:time("16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("16:00:12.345+00:00") eq xs:time("16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("16:00:12.345+00:00") eq xs:time("16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("16:00:12.345Z") eq xs:time("16:00:12.345Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("16:00:12.345Z") eq xs:time("16:00:12.345Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("16:00:12.345-00:00") eq xs:time("16:00:12.345+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("16:00:12.345-00:00") eq xs:time("16:00:12.345+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") eq xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") eq xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") ne xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") ne xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") le xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") le xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") lt xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") lt xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") ge xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") ge xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:12:23") gt xs:date("1999-12-04")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:12:23") gt xs:date("1999-12-04")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") eq xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") eq xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") ne xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") ne xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") le xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") le xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") lt xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") lt xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") ge xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") ge xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-04") gt xs:time("12:12:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-04") gt xs:time("12:12:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("01:01:01-03:00") ne xs:time("01:01:01+03:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("01:01:01-03:00") ne xs:time("01:01:01+03:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") eq xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") eq xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") eq xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") eq xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:01+01:00") eq xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:01+01:00") eq xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00") eq xs:time("00:00:01+01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00") eq xs:time("00:00:01+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") ne xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") ne xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") ne xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") ne xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:01+01:00") ne xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:01+01:00") ne xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00") ne xs:time("00:00:01+01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00") ne xs:time("00:00:01+01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00+12:00") eq xs:time("00:00:01")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00+12:00") eq xs:time("00:00:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00+12:00") ne xs:time("00:00:01")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00+12:00") ne xs:time("00:00:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:time("12:00:00+02:00") eq xs:time("12:00:00")
            else xs:time("12:00:00+01:00") eq xs:time("12:00:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() eq xs:dayTimeDuration('PT1H'))
            then xs:time("12:00:00+02:00") eq xs:time("12:00:00")
            else xs:time("12:00:00+01:00") eq xs:time("12:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/time-greater-than.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") gt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") gt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") gt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") gt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") gt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") gt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") gt xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") gt xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") gt xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") gt xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") le xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") le xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") le xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") le xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("08:00:00+09:00") gt xs:time("17:00:00-06:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("08:00:00+09:00") gt xs:time("17:00:00-06:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("08:00:00+09:00") ge xs:time("17:00:00-06:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("08:00:00+09:00") ge xs:time("17:00:00-06:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:time("14:00:00Z") gt xs:time("13:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:time("14:00:00Z") gt xs:time("13:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") ge xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") ge xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") gt xs:time("14:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") gt xs:time("14:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) and (xs:time("13:00:00Z") gt xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) and (xs:time("13:00:00Z") gt xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) and (xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) and (xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (xs:time("13:00:00Z") gt xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (xs:time("13:00:00Z") gt xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (xs:time("13:00:00Z") ge xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") gt xs:time("17:00:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") ge xs:time("17:00:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:03.12") lt xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:03.12") lt xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:04.12") lt xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:04.12") lt xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:05.12") lt xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:05.12") lt xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:04.12") le xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:04.12") le xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:03.12") le xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:03.12") le xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:05.12") le xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:05.12") le xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") gt xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") gt xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") gt xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") gt xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") gt xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") gt xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") gt xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") gt xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") gt xs:time("00:00:00")
            else xs:time("00:00:00") gt xs:time("00:00:00+01:01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") gt xs:time("00:00:00")
            else xs:time("00:00:00") gt xs:time("00:00:00+01:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") le xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") le xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") le xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") le xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") le xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") le xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") le xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") le xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") le xs:time("00:00:00")
            else xs:time("00:00:00") le xs:time("00:00:00+01:01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") le xs:time("00:00:00")
            else xs:time("00:00:00") le xs:time("00:00:00+01:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/time-less-than.xml">
    <x:scenario>
      <x:label>xs:time("00:00:00Z") lt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") lt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") lt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") lt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") lt xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") lt xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") lt xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") lt xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") lt xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") lt xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("08:03:35Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("08:03:35Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:59Z") ge xs:time("00:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:59Z") ge xs:time("00:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("08:03:35Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("08:03:35Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("00:00:00Z") ge xs:time("23:59:59Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("00:00:00Z") ge xs:time("23:59:59Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("12:00:00-05:00") lt xs:time("23:00:00+06:00"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("12:00:00-05:00") lt xs:time("23:00:00+06:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:00:00-05:00") lt xs:time("17:00:00Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:00:00-05:00") lt xs:time("17:00:00Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:time("13:00:00Z") lt xs:time("14:00:00Z")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:time("13:00:00Z") lt xs:time("14:00:00Z")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") le xs:time("14:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") le xs:time("14:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") lt xs:time("10:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") lt xs:time("10:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:time("13:00:00Z") le xs:time("12:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:time("13:00:00Z") le xs:time("12:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) and (xs:time("13:00:00Z") lt xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) and (xs:time("13:00:00Z") lt xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") le xs:time("17:00:00Z")) and (xs:time("13:00:00Z") le xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") le xs:time("17:00:00Z")) and (xs:time("13:00:00Z") le xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (xs:time("13:00:00Z") lt xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (xs:time("13:00:00Z") lt xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (xs:time("13:00:00Z") le xs:time("17:00:00Z"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (xs:time("13:00:00Z") le xs:time("17:00:00Z"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") lt xs:time("17:00:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:time("13:00:00Z") le xs:time("17:00:00Z")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:05.12") gt xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:05.12") gt xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:03.12") gt xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:03.12") gt xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:04.12") gt xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:04.12") gt xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:04.12") ge xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:04.12") ge xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:01:05.12") ge xs:time("23:01:04.12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:01:05.12") ge xs:time("23:01:04.12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("23:01:03.12") ge xs:time("23:01:04.12"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("23:01:03.12") ge xs:time("23:01:04.12"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") lt xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") lt xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") lt xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") lt xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") lt xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") lt xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") lt xs:time("00:00:00+01:00")
            else xs:time("00:00:00+01:01") lt xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00+01:00") lt xs:time("00:00:00")
            else xs:time("00:00:00") lt xs:time("00:00:00+01:01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00+01:00") lt xs:time("00:00:00")
            else xs:time("00:00:00") lt xs:time("00:00:00+01:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("14:00:00-12:00") ge xs:time("02:00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("14:00:00-12:00") ge xs:time("02:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("02:00:00") ge xs:time("14:00:00-12:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("02:00:00") ge xs:time("14:00:00-12:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") ge xs:time("00:00:01+01:00")  
            else xs:time("00:00:00+01:01") ge xs:time("00:00:00")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:00") ge xs:time("00:00:01+01:00")  
            else xs:time("00:00:00+01:01") ge xs:time("00:00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") ge xs:time("00:00:00")
            else xs:time("00:00:00") ge xs:time("00:00:00+01:01")</x:label>
      <x:variable name="expr" as="xs:string">if (implicit-timezone() gt xs:dayTimeDuration('PT1H'))
            then xs:time("00:00:01+01:00") ge xs:time("00:00:00")
            else xs:time("00:00:00") ge xs:time("00:00:00+01:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/to.xml">
    <x:scenario>
      <x:label>(10, 1 to 4)</x:label>
      <x:variable name="expr" as="xs:string">(10, 1 to 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 to 10</x:label>
      <x:variable name="expr" as="xs:string">10 to 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(15 to 10)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(15 to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:reverse(10 to 15)</x:label>
      <x:variable name="expr" as="xs:string">fn:reverse(10 to 15)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((1, 2 to ()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((1, 2 to ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1+2) to (2+2))</x:label>
      <x:variable name="expr" as="xs:string">((1+2) to (2+2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-4,-3 to 2)</x:label>
      <x:variable name="expr" as="xs:string">(-4,-3 to 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-4, -3 to -1)</x:label>
      <x:variable name="expr" as="xs:string">(-4, -3 to -1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(1) to 5)</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(1) to 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to xs:integer(5))</x:label>
      <x:variable name="expr" as="xs:string">(1 to xs:integer(5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(1) to xs:integer(5))</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(1) to xs:integer(5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:min((1,2)) to 5)</x:label>
      <x:variable name="expr" as="xs:string">(fn:min((1,2)) to 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:max((1,2)) to 5)</x:label>
      <x:variable name="expr" as="xs:string">(fn:max((1,2)) to 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:min((1,2)) to fn:max((6,7)))</x:label>
      <x:variable name="expr" as="xs:string">(fn:min((1,2)) to fn:max((6,7)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:min((1 to 5))</x:label>
      <x:variable name="expr" as="xs:string">fn:min((1 to 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:max((1 to 5))</x:label>
      <x:variable name="expr" as="xs:string">fn:max((1 to 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:avg((1 to 5))</x:label>
      <x:variable name="expr" as="xs:string">fn:avg((1 to 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((1 to 5))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((1 to 5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((3*2) to 10)</x:label>
      <x:variable name="expr" as="xs:string">((3*2) to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to (3*2))</x:label>
      <x:variable name="expr" as="xs:string">(1 to (3*2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1*2) to (3*2))</x:label>
      <x:variable name="expr" as="xs:string">((1*2) to (3*2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((3 - 2) to 10)</x:label>
      <x:variable name="expr" as="xs:string">((3 - 2) to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to (3 - 2))</x:label>
      <x:variable name="expr" as="xs:string">(1 to (3 - 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((2 - 1) to (7 - 1))</x:label>
      <x:variable name="expr" as="xs:string">((2 - 1) to (7 - 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((6 idiv 2) to 10)</x:label>
      <x:variable name="expr" as="xs:string">((6 idiv 2) to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to (10 idiv 2))</x:label>
      <x:variable name="expr" as="xs:string">(1 to (10 idiv 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((5 idiv 5) to (8 idiv 2))</x:label>
      <x:variable name="expr" as="xs:string">((5 idiv 5) to (8 idiv 2))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>18446744073709551616 to 18446744073709551620</x:label>
      <x:variable name="expr" as="xs:string">18446744073709551616 to 18446744073709551620</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(18446744073709551616 to 18446744073709551620)</x:label>
      <x:variable name="expr" as="xs:string">count(18446744073709551616 to 18446744073709551620)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>11 to 11 to 12</x:label>
      <x:variable name="expr" as="xs:string">11 to 11 to 12</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3+1 to 4+1</x:label>
      <x:variable name="expr" as="xs:string">3+1 to 4+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) = 1 to 5000</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) = 1 to 5000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) = 5000 to 10000</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) = 5000 to 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) to 4000 = 1500 to 2500</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) to 4000 = 1500 to 2500</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1000 = 1 to year-from-date(current-date())[. gt 3000]</x:label>
      <x:variable name="expr" as="xs:string">1000 = 1 to year-from-date(current-date())[. gt 3000]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 to 5000 = year-from-date(current-date())[. gt 3000]</x:label>
      <x:variable name="expr" as="xs:string">1 to 5000 = year-from-date(current-date())[. gt 3000]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 5000)[position() = 2001 to 2020]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 5000)[position() = 2001 to 2020]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 to 1 eq 1</x:label>
      <x:variable name="expr" as="xs:string">1 to 1 eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(30 to 3)</x:label>
      <x:variable name="expr" as="xs:string">empty(30 to 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(0 to -3)</x:label>
      <x:variable name="expr" as="xs:string">empty(0 to -3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 to ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 to ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() to 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() to 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(-1 to -3)</x:label>
      <x:variable name="expr" as="xs:string">empty(-1 to -3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(1 to 4) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(1 to 4) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(0 to 4) eq 5</x:label>
      <x:variable name="expr" as="xs:string">count(0 to 4) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-5 to -0) eq 6</x:label>
      <x:variable name="expr" as="xs:string">count(-5 to -0) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((10, 1 to 4)) eq 5</x:label>
      <x:variable name="expr" as="xs:string">count((10, 1 to 4)) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(-3 to -1, 1, 1) eq -3</x:label>
      <x:variable name="expr" as="xs:string">subsequence(-3 to -1, 1, 1) eq -3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(-3 to -1, 3, 1) eq -1</x:label>
      <x:variable name="expr" as="xs:string">subsequence(-3 to -1, 3, 1) eq -1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse(4 to 1))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse(4 to 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(reverse(1 to 3), 1, 1) eq 3</x:label>
      <x:variable name="expr" as="xs:string">subsequence(reverse(1 to 3), 1, 1) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(reverse(1 to 3), 3, 1) eq 1</x:label>
      <x:variable name="expr" as="xs:string">subsequence(reverse(1 to 3), 3, 1) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(reverse(1 to 4), 2, 1) eq 3</x:label>
      <x:variable name="expr" as="xs:string">subsequence(reverse(1 to 4), 2, 1) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(reverse(1 to 4), 3, 1) eq 2</x:label>
      <x:variable name="expr" as="xs:string">subsequence(reverse(1 to 4), 3, 1) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(reverse(-4 to -1), 2, 1) eq -2</x:label>
      <x:variable name="expr" as="xs:string">subsequence(reverse(-4 to -1), 2, 1) eq -2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((-1, -2, -3, -4), reverse(-4 to -1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((-1, -2, -3, -4), reverse(-4 to -1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((), reverse(0 to -5))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((), reverse(0 to -5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, -1, -2, -3, -4, -5), reverse(-5 to 0))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, -1, -2, -3, -4, -5), reverse(-5 to 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse(-5 to -2)) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(reverse(-5 to -2)) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse(-5 to -0)) eq 6</x:label>
      <x:variable name="expr" as="xs:string">count(reverse(-5 to -0)) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(reverse(1 to 4)) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(reverse(1 to 4)) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 to 0)</x:label>
      <x:variable name="expr" as="xs:string">empty(1 to 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(0 to -5)</x:label>
      <x:variable name="expr" as="xs:string">empty(0 to -5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(-4 to -5)</x:label>
      <x:variable name="expr" as="xs:string">empty(-4 to -5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse(1 to 0))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse(1 to 0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse(0 to -5))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse(0 to -5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(reverse(-4 to -5))</x:label>
      <x:variable name="expr" as="xs:string">empty(reverse(-4 to -5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((2.e0, 4), 1) treat as xs:integer to 4)</x:label>
      <x:variable name="expr" as="xs:string">(remove((2.e0, 4), 1) treat as xs:integer to 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(4 to remove((2e0, 4), 1) treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">(4 to remove((2e0, 4), 1) treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1 to 3</x:label>
      <x:variable name="expr" as="xs:string">1.1 to 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 to 1.1</x:label>
      <x:variable name="expr" as="xs:string">3 to 1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1 to 3.3</x:label>
      <x:variable name="expr" as="xs:string">1.1 to 3.3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + 1.1 to 5</x:label>
      <x:variable name="expr" as="xs:string">1 + 1.1 to 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1e3 to 3</x:label>
      <x:variable name="expr" as="xs:string">1e3 to 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 to 1e3</x:label>
      <x:variable name="expr" as="xs:string">3 to 1e3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in 1 to 3 return $i</x:label>
      <x:variable name="expr" as="xs:string">for $i in 1 to 3 return $i</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 to 3</x:label>
      <x:variable name="expr" as="xs:string">3 to 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(3 to 3)</x:label>
      <x:variable name="expr" as="xs:string">count(3 to 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 to 3)[1]</x:label>
      <x:variable name="expr" as="xs:string">(3 to 3)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = 3 to 3</x:label>
      <x:variable name="expr" as="xs:string">3 = 3 to 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 &gt; 3 to 3</x:label>
      <x:variable name="expr" as="xs:string">4 &gt; 3 to 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-33 to -33</x:label>
      <x:variable name="expr" as="xs:string">-33 to -33</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-33 to -33)</x:label>
      <x:variable name="expr" as="xs:string">count(-33 to -33)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-33 to -33)[1]</x:label>
      <x:variable name="expr" as="xs:string">(-33 to -33)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-33 = -33 to -33</x:label>
      <x:variable name="expr" as="xs:string">-33 = -33 to -33</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-33 to -33 &gt; -34</x:label>
      <x:variable name="expr" as="xs:string">-33 to -33 &gt; -34</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 to 0</x:label>
      <x:variable name="expr" as="xs:string">0 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(0 to 0)</x:label>
      <x:variable name="expr" as="xs:string">count(0 to 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0 to 0)[1]</x:label>
      <x:variable name="expr" as="xs:string">(0 to 0)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = 0 to 0</x:label>
      <x:variable name="expr" as="xs:string">1 = 0 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 &gt; 0 to 0</x:label>
      <x:variable name="expr" as="xs:string">-1 &gt; 0 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 to 0</x:label>
      <x:variable name="expr" as="xs:string">10 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(10 to 0)</x:label>
      <x:variable name="expr" as="xs:string">count(10 to 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10 to 0)[1]</x:label>
      <x:variable name="expr" as="xs:string">(10 to 0)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 = 10 to 0</x:label>
      <x:variable name="expr" as="xs:string">10 = 10 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10 &gt; 10 to 0</x:label>
      <x:variable name="expr" as="xs:string">10 &gt; 10 to 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 to -10</x:label>
      <x:variable name="expr" as="xs:string">0 to -10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(0 to -10)</x:label>
      <x:variable name="expr" as="xs:string">count(0 to -10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0 to -10)[1]</x:label>
      <x:variable name="expr" as="xs:string">(0 to -10)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 to 10</x:label>
      <x:variable name="expr" as="xs:string">1 to 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(1 to 10)</x:label>
      <x:variable name="expr" as="xs:string">count(1 to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[3]</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 = 1 to 10</x:label>
      <x:variable name="expr" as="xs:string">6 = 1 to 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 &gt; 1 to 10</x:label>
      <x:variable name="expr" as="xs:string">6 &gt; 1 to 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 to 10 &gt; 6</x:label>
      <x:variable name="expr" as="xs:string">1 to 10 &gt; 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(1 to 10)</x:label>
      <x:variable name="expr" as="xs:string">reverse(1 to 10)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-200000 to -199997</x:label>
      <x:variable name="expr" as="xs:string">-200000 to -199997</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-200000 to -199997)</x:label>
      <x:variable name="expr" as="xs:string">count(-200000 to -199997)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-200000 to -199997)[3]</x:label>
      <x:variable name="expr" as="xs:string">(-200000 to -199997)[3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12345 &gt; -200000 to -199997</x:label>
      <x:variable name="expr" as="xs:string">12345 &gt; -200000 to -199997</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-200000 to -199997 &gt; 54321</x:label>
      <x:variable name="expr" as="xs:string">-200000 to -199997 &gt; 54321</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(-200000 to -199997)</x:label>
      <x:variable name="expr" as="xs:string">reverse(-200000 to -199997)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>100000000000 to 100000000003</x:label>
      <x:variable name="expr" as="xs:string">100000000000 to 100000000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(100000000000 to 100000000003)</x:label>
      <x:variable name="expr" as="xs:string">count(100000000000 to 100000000003)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(100000000000 to 100000000003)[3]</x:label>
      <x:variable name="expr" as="xs:string">(100000000000 to 100000000003)[3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>100000000002 = 100000000000 to 100001000003</x:label>
      <x:variable name="expr" as="xs:string">100000000002 = 100000000000 to 100001000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>100001000002 &lt; 100000000000 to 100001000003</x:label>
      <x:variable name="expr" as="xs:string">100001000002 &lt; 100000000000 to 100001000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(100000000000 to 100000000003)</x:label>
      <x:variable name="expr" as="xs:string">reverse(100000000000 to 100000000003)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1000000000000000000000 to 1000000000000000000003</x:label>
      <x:variable name="expr" as="xs:string">1000000000000000000000 to 1000000000000000000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(1000000000000000000000 to 1000000000000000000003)</x:label>
      <x:variable name="expr" as="xs:string">count(1000000000000000000000 to 1000000000000000000003)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1000000000000000000000 to 1000000000000000000003)[2]</x:label>
      <x:variable name="expr" as="xs:string">(1000000000000000000000 to 1000000000000000000003)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1000000000000000020001 = 1000000000000000000000 to 1000000000000010000003</x:label>
      <x:variable name="expr" as="xs:string">1000000000000000020001 = 1000000000000000000000 to 1000000000000010000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1000000000000000020001 &lt; 1000000000000000000000 to 1000000000000500000003</x:label>
      <x:variable name="expr" as="xs:string">1000000000000000020001 &lt; 1000000000000000000000 to 1000000000000500000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(1000000000000000000000 to 1000000000000000000003)</x:label>
      <x:variable name="expr" as="xs:string">reverse(1000000000000000000000 to 1000000000000000000003)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-100000000003 to -100000000000</x:label>
      <x:variable name="expr" as="xs:string">-100000000003 to -100000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-100000000003 to -100000000000)</x:label>
      <x:variable name="expr" as="xs:string">count(-100000000003 to -100000000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-100000000003 to -100000000000)[2]</x:label>
      <x:variable name="expr" as="xs:string">(-100000000003 to -100000000000)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-100000000003 = -100000000003 to -100000000000</x:label>
      <x:variable name="expr" as="xs:string">-100000000003 = -100000000003 to -100000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-100000000008 &lt; -100000000006 to -100000000003</x:label>
      <x:variable name="expr" as="xs:string">-100000000008 &lt; -100000000006 to -100000000003</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(-100000000003 to -100000000000)</x:label>
      <x:variable name="expr" as="xs:string">reverse(-100000000003 to -100000000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1000000000000000000003 to -1000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">-1000000000000000000003 to -1000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-1000000000000000000003 to -1000000000000000000000)</x:label>
      <x:variable name="expr" as="xs:string">count(-1000000000000000000003 to -1000000000000000000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-1000000000000000000003 to -1000000000000000000000)[4]</x:label>
      <x:variable name="expr" as="xs:string">(-1000000000000000000003 to -1000000000000000000000)[4]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1000000000000000000000 = -1000000000000000000003 to -1000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">-1000000000000000000000 = -1000000000000000000003 to -1000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1000000000000000000000 &lt; -1000000000000000500003 to -1000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">-1000000000000000000000 &lt; -1000000000000000500003 to -1000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(-1000000000000000000003 to -1000000000000000000000)</x:label>
      <x:variable name="expr" as="xs:string">reverse(-1000000000000000000003 to -1000000000000000000000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-5 to +5</x:label>
      <x:variable name="expr" as="xs:string">-5 to +5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(-5 to +5)</x:label>
      <x:variable name="expr" as="xs:string">count(-5 to +5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-5 to +5)[6]</x:label>
      <x:variable name="expr" as="xs:string">(-5 to +5)[6]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = -5 to +5</x:label>
      <x:variable name="expr" as="xs:string">3 = -5 to +5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-5 to +5 &gt; 29</x:label>
      <x:variable name="expr" as="xs:string">-5 to +5 &gt; 29</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(-5 to +5)</x:label>
      <x:variable name="expr" as="xs:string">reverse(-5 to +5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 to year-from-date(current-date()) idiv 1000</x:label>
      <x:variable name="expr" as="xs:string">0 to year-from-date(current-date()) idiv 1000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(0 to year-from-date(current-date()) idiv 1000)</x:label>
      <x:variable name="expr" as="xs:string">count(0 to year-from-date(current-date()) idiv 1000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0 to year-from-date(current-date()) idiv 1000)[2]</x:label>
      <x:variable name="expr" as="xs:string">(0 to year-from-date(current-date()) idiv 1000)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 = 0 to year-from-date(current-date()) idiv 1000</x:label>
      <x:variable name="expr" as="xs:string">2 = 0 to year-from-date(current-date()) idiv 1000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 &gt;= 0 to year-from-date(current-date()) idiv 1000</x:label>
      <x:variable name="expr" as="xs:string">3 &gt;= 0 to year-from-date(current-date()) idiv 1000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>reverse(0 to year-from-date(current-date()) idiv 1000)</x:label>
      <x:variable name="expr" as="xs:string">reverse(0 to year-from-date(current-date()) idiv 1000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) idiv 1000 to 5</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) idiv 1000 to 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(year-from-date(current-date()) idiv 1000 to 5)</x:label>
      <x:variable name="expr" as="xs:string">count(year-from-date(current-date()) idiv 1000 to 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(year-from-date(current-date()) idiv 1000 to 5)[2]</x:label>
      <x:variable name="expr" as="xs:string">(year-from-date(current-date()) idiv 1000 to 5)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) idiv 1000 to 5 = 4</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) idiv 1000 to 5 = 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) idiv 1000 to 5 &gt; 6</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) idiv 1000 to 5 &gt; 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) idiv 1000 to 2</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) idiv 1000 to 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(year-from-date(current-date()) idiv 1000 to 2)</x:label>
      <x:variable name="expr" as="xs:string">count(year-from-date(current-date()) idiv 1000 to 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(year-from-date(current-date()) idiv 1000 to 2)[1]</x:label>
      <x:variable name="expr" as="xs:string">(year-from-date(current-date()) idiv 1000 to 2)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date()) idiv 1000 to -42</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date()) idiv 1000 to -42</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(year-from-date(current-date()) idiv 1000 to -42)</x:label>
      <x:variable name="expr" as="xs:string">count(year-from-date(current-date()) idiv 1000 to -42)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(year-from-date(current-date()) idiv 1000 to -42)[2]</x:label>
      <x:variable name="expr" as="xs:string">(year-from-date(current-date()) idiv 1000 to -42)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>year-from-date(current-date())[. lt 0] to 10</x:label>
      <x:variable name="expr" as="xs:string">year-from-date(current-date())[. lt 0] to 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 to year-from-date(current-date())[. lt 0]</x:label>
      <x:variable name="expr" as="xs:string">1 to year-from-date(current-date())[. lt 0]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/union.xml">
    <x:scenario>
      <x:label>/bib/book[3]/title union /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title union /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/bib/book/title | /bib/book)/local-name()</x:label>
      <x:variable name="expr" as="xs:string">(/bib/book/title | /bib/book)/local-name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title | root(fn:exactly-one(/bib/book[3]/title))</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title | root(fn:exactly-one(/bib/book[3]/title))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title/text() union /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title/text() union /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction() union /bib/book[2]/title</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction() union /bib/book[2]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction(PI1) union /bib/book[3]/title</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction(PI1) union /bib/book[3]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/comment() union /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/comment() union /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/bib/book[3]/title/text() | /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/bib/book[3]/title/text() | /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction() | /bib/book[2]/title</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction() | /bib/book[2]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction(PI1) | /bib/book[3]/title</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction(PI1) | /bib/book[3]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/comment() | /bib/book[1]/title</x:label>
      <x:variable name="expr" as="xs:string">/comment() | /bib/book[1]/title</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author union //nonexisting</x:label>
      <x:variable name="expr" as="xs:string">//author union //nonexisting</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//author | ()</x:label>
      <x:variable name="expr" as="xs:string">//author | ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() | ()</x:label>
      <x:variable name="expr" as="xs:string">() | ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) union (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) union (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) union (/atomic:root/atomic:integer)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) union (/atomic:root/atomic:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:integer) | (/atomic:root/atomic:string)</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:integer) | (/atomic:root/atomic:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:duration/text()) | (/atomic:root/atomic:duration/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:duration/text()) | (/atomic:root/atomic:duration/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:date/text()) | (/atomic:root/atomic:date/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:date/text()) | (/atomic:root/atomic:date/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:base64Binary/text()) | (/atomic:root/atomic:base64Binary/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:base64Binary/text()) | (/atomic:root/atomic:base64Binary/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:QName/text()) | (/atomic:root/atomic:QName/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:QName/text()) | (/atomic:root/atomic:QName/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/atomic:root/atomic:idrefs/text()) | (/atomic:root/atomic:idrefs/text())</x:label>
      <x:variable name="expr" as="xs:string">(/atomic:root/atomic:idrefs/text()) | (/atomic:root/atomic:idrefs/text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(for $node in ((//price/text()) , (//price/text())) union ((//price/text()) , (//price/text())) return $node, "|")</x:label>
      <x:variable name="expr" as="xs:string">string-join(for $node in ((//price/text()) , (//price/text())) union ((//price/text()) , (//price/text())) return $node, "|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) union (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) union (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//employee[location = "Denver"] union //employee[last()])</x:label>
      <x:variable name="expr" as="xs:string">boolean(//employee[location = "Denver"] union //employee[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(//employee[location = "Denver"] | //employee[last()])</x:label>
      <x:variable name="expr" as="xs:string">boolean(//employee[location = "Denver"] | //employee[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1|2|3</x:label>
      <x:variable name="expr" as="xs:string">1|2|3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 union 2 union 3</x:label>
      <x:variable name="expr" as="xs:string">1 union 2 union 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/yearMonthDuration-greater-than.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") gt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") gt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") gt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") gt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") gt xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") le xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") le xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") le xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:yearMonthDuration("P20Y123M") gt xs:yearMonthDuration("P20Y11M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:yearMonthDuration("P20Y123M") gt xs:yearMonthDuration("P20Y11M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P20Y10M") ge xs:yearMonthDuration("P20Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P20Y10M") ge xs:yearMonthDuration("P20Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P20Y09M") gt xs:yearMonthDuration("P20Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P20Y09M") gt xs:yearMonthDuration("P20Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P10Y07M") ge xs:yearMonthDuration("P10Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P10Y07M") ge xs:yearMonthDuration("P10Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y09M") gt xs:yearMonthDuration("P09Y10M")) and (xs:yearMonthDuration("P10Y01M") gt xs:yearMonthDuration("P08Y06M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y09M") gt xs:yearMonthDuration("P09Y10M")) and (xs:yearMonthDuration("P10Y01M") gt xs:yearMonthDuration("P08Y06M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y09M") ge xs:yearMonthDuration("P10Y01M")) and (xs:yearMonthDuration("P02Y04M") ge xs:yearMonthDuration("P09Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y09M") ge xs:yearMonthDuration("P10Y01M")) and (xs:yearMonthDuration("P02Y04M") ge xs:yearMonthDuration("P09Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y08M") gt xs:yearMonthDuration("P10Y07M")) or (xs:yearMonthDuration("P10Y09M") gt xs:yearMonthDuration("P10Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y08M") gt xs:yearMonthDuration("P10Y07M")) or (xs:yearMonthDuration("P10Y09M") gt xs:yearMonthDuration("P10Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") ge xs:yearMonthDuration("P09Y06M")) or (xs:yearMonthDuration("P15Y01M") ge xs:yearMonthDuration("P02Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") ge xs:yearMonthDuration("P09Y06M")) or (xs:yearMonthDuration("P15Y01M") ge xs:yearMonthDuration("P02Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y02M") gt xs:yearMonthDuration("P01Y10M")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y02M") gt xs:yearMonthDuration("P01Y10M")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") ge xs:yearMonthDuration("P09Y05M")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") ge xs:yearMonthDuration("P09Y05M")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P30Y10M") gt xs:yearMonthDuration("P01Y02M")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P30Y10M") gt xs:yearMonthDuration("P01Y02M")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y05M") ge xs:yearMonthDuration("P20Y10M")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y05M") ge xs:yearMonthDuration("P20Y10M")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y9M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y9M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y11M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") gt xs:yearMonthDuration("P1999Y11M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y11M") ge xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y11M") ge xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") ge xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") ge xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y9M") ge xs:yearMonthDuration("P1999Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y9M") ge xs:yearMonthDuration("P1999Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/op/yearMonthDuration-less-than.xml">
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") lt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") lt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") lt xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") lt xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") lt xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1000Y6M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1000Y6M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P2030Y12M") ge xs:yearMonthDuration("P0Y0M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P2030Y12M") ge xs:yearMonthDuration("P0Y0M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P1000Y6M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P1000Y6M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P2030Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P0Y0M") ge xs:yearMonthDuration("P2030Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not((xs:yearMonthDuration("P20Y10M") lt xs:yearMonthDuration("P20Y11M")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:yearMonthDuration("P20Y10M") lt xs:yearMonthDuration("P20Y11M")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P20Y10M") le xs:yearMonthDuration("P20Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P20Y10M") le xs:yearMonthDuration("P20Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P20Y10M") lt xs:yearMonthDuration("P20Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P20Y10M") lt xs:yearMonthDuration("P20Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:not(xs:yearMonthDuration("P10Y09M") le xs:yearMonthDuration("P10Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">fn:not(xs:yearMonthDuration("P10Y09M") le xs:yearMonthDuration("P10Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y09M") lt xs:yearMonthDuration("P09Y10M")) and (xs:yearMonthDuration("P10Y01M") lt xs:yearMonthDuration("P08Y06M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y09M") lt xs:yearMonthDuration("P09Y10M")) and (xs:yearMonthDuration("P10Y01M") lt xs:yearMonthDuration("P08Y06M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y09M") le xs:yearMonthDuration("P10Y01M")) and (xs:yearMonthDuration("P02Y04M") le xs:yearMonthDuration("P09Y07M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y09M") le xs:yearMonthDuration("P10Y01M")) and (xs:yearMonthDuration("P02Y04M") le xs:yearMonthDuration("P09Y07M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y08M") lt xs:yearMonthDuration("P10Y07M")) or (xs:yearMonthDuration("P10Y09M") lt xs:yearMonthDuration("P10Y09M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y08M") lt xs:yearMonthDuration("P10Y07M")) or (xs:yearMonthDuration("P10Y09M") lt xs:yearMonthDuration("P10Y09M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") le xs:yearMonthDuration("P09Y06M")) or (xs:yearMonthDuration("P15Y01M") le xs:yearMonthDuration("P02Y04M"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") le xs:yearMonthDuration("P09Y06M")) or (xs:yearMonthDuration("P15Y01M") le xs:yearMonthDuration("P02Y04M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y02M") lt xs:yearMonthDuration("P01Y10M")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y02M") lt xs:yearMonthDuration("P01Y10M")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y01M") le xs:yearMonthDuration("P09Y05M")) or (fn:true())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y01M") le xs:yearMonthDuration("P09Y05M")) or (fn:true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P30Y10M") lt xs:yearMonthDuration("P01Y02M")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P30Y10M") lt xs:yearMonthDuration("P01Y02M")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:yearMonthDuration("P10Y05M") le xs:yearMonthDuration("P20Y10M")) or (fn:false())</x:label>
      <x:variable name="expr" as="xs:string">(xs:yearMonthDuration("P10Y05M") le xs:yearMonthDuration("P20Y10M")) or (fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y9M") lt xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y9M") lt xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") lt xs:yearMonthDuration("P1999Y10M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") lt xs:yearMonthDuration("P1999Y10M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") lt xs:yearMonthDuration("P1999Y9M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") lt xs:yearMonthDuration("P1999Y9M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y10M") le xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y10M") le xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y9M") le xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y9M") le xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1999Y10M") le xs:yearMonthDuration("P1999Y9M"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1999Y10M") le xs:yearMonthDuration("P1999Y9M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.abbr.xml">
    <x:scenario>
      <x:label>for $h in (/works/employee[4]) return $h/hours/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[4]) return $h/hours/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return $h/text()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return $h/text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[10]) return $h/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[10]) return $h/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[1]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[1]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[fn:last()]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[fn:last()]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/*/hours/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/*/hours/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works/employee[5]/hours[2]</x:label>
      <x:variable name="expr" as="xs:string">/works/employee[5]/hours[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee//hours/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee//hours/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h//hours/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h//hours/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h//overtime/day/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h//overtime/day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/.//day/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/.//day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[12]/overtime) return $h/../@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[12]/overtime) return $h/../@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[@name="Jane Doe 11"]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[@name="Jane Doe 11"]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[@gender="female"][5]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[@gender="female"][5]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[5][@gender="female"]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[5][@gender="female"]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[status="active"]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[status="active"]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[overtime]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[overtime]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[@name and @type]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[@name and @type]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee/(status|overtime)/day/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee/(status|overtime)/day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee/(status union overtime)/day/string()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee/(status union overtime)/day/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/employee[@name = "Jane Doe 13" or @type="FT"]/@name</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/employee[@name = "Jane Doe 13" or @type="FT"]/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.ancestor-or-self.xml">
    <x:scenario>
      <x:label>(200)/ancestor-or-self::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/ancestor-or-self::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/ancestor-or-self::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/ancestor-or-self::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) is exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) &lt;&lt; exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/ancestor-or-self::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor-or-self::works) &gt;&gt; exactly-one(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/works/employee[12]/*/day/ancestor-or-self::overtime) | (/works/employee[12]/*/day/ancestor-or-self::overtime))/count(*)</x:label>
      <x:variable name="expr" as="xs:string">((/works/employee[12]/*/day/ancestor-or-self::overtime) | (/works/employee[12]/*/day/ancestor-or-self::overtime))/count(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/works/employee[12]/*/day[1]/ancestor-or-self::overtime) | (/works/employee[12]/*/day[2]/ancestor-or-self::overtime))/count(*)</x:label>
      <x:variable name="expr" as="xs:string">((/works/employee[12]/*/day[1]/ancestor-or-self::overtime) | (/works/employee[12]/*/day[2]/ancestor-or-self::overtime))/count(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((/works/employee[12]/overtime/day/ancestor-or-self::employee) intersect (/works/employee[12]/overtime/day/ancestor-or-self::employee))/@name</x:label>
      <x:variable name="expr" as="xs:string">((/works/employee[12]/overtime/day/ancestor-or-self::employee) intersect (/works/employee[12]/overtime/day/ancestor-or-self::employee))/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[ancestor-or-self::overtime]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[ancestor-or-self::overtime]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) except (/works/employee[12]/overtime/day[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor-or-self::overtime]) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works/employee[12]/overtime/ancestor-or-self::works,/works/employee[12]/overtime/ancestor-or-self::works)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works/employee[12]/overtime/ancestor-or-self::works,/works/employee[12]/overtime/ancestor-or-self::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(for $h in (/works/employee[1]/hours) return $h/ancestor-or-self::employee)/@name</x:label>
      <x:variable name="expr" as="xs:string">(for $h in (/works/employee[1]/hours) return $h/ancestor-or-self::employee)/@name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.ancestor.xml">
    <x:scenario>
      <x:label>(200)/ancestor::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/ancestor::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/ancestor::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/ancestor::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) is exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1]/ancestor::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1]/ancestor::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) &lt;&lt; exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]) &gt;&gt; exactly-one(/works/employee[1]/ancestor::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]) &gt;&gt; exactly-one(/works/employee[1]/ancestor::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) &gt;&gt; exactly-one(/works/employee[1]/ancestor::works)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) &gt;&gt; exactly-one(/works/employee[1]/ancestor::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[1]/ancestor::works) &gt;&gt; exactly-one(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[1]/ancestor::works) &gt;&gt; exactly-one(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day/ancestor::overtime) | (/works/employee[12]/*/day/ancestor::overtime)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day/ancestor::overtime) | (/works/employee[12]/*/day/ancestor::overtime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[1]/ancestor::overtime) | (/works/employee[12]/*/day[2]/ancestor::overtime)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[1]/ancestor::overtime) | (/works/employee[12]/*/day[2]/ancestor::overtime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day/ancestor::employee) intersect (/works/employee[12]/overtime/day/ancestor::employee)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day/ancestor::employee) intersect (/works/employee[12]/overtime/day/ancestor::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[ancestor::overtime]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[ancestor::overtime]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor::overtime]) except (/works/employee[12]/overtime/day[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor::overtime]) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/overtime/day[ancestor::overtime]) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works/employee[12]/overtime/ancestor::works,/works/employee[12]/overtime/ancestor::works)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works/employee[12]/overtime/ancestor::works,/works/employee[12]/overtime/ancestor::works)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]/hours) return $h/ancestor::employee</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]/hours) return $h/ancestor::employee</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.following-sibling.xml">
    <x:scenario>
      <x:label>(200)/following-sibling::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/following-sibling::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/following-sibling::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/following-sibling::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[12]/following-sibling::employee) is exactly-one(/works/employee[13])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[12]/following-sibling::employee) is exactly-one(/works/employee[13])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following-sibling::employee) is exactly-one(/works[1]/employee[12])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following-sibling::employee) is exactly-one(/works[1]/employee[12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/overtime/day[1]/following-sibling::day) &lt;&lt; exactly-one(/works[1]/employee[13])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/overtime/day[1]/following-sibling::day) &lt;&lt; exactly-one(/works[1]/employee[13])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following-sibling::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following-sibling::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following-sibling::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/overtime[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following-sibling::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/overtime[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following-sibling::employee) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following-sibling::employee) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]) &gt;&gt; exactly-one(/works[1]/employee[12]/following-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1]/following-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1]/following-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[1]/following-sibling::day) | (/works/employee[12]/*/day[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day) intersect (/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day) intersect (/works[1]/employee[12]/overtime[1]/day[1]/following-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works[1]/employee[12]/following-sibling::employee) except (/works[1]/employee[12]/following-sibling::employee))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works[1]/employee[12]/following-sibling::employee) except (/works[1]/employee[12]/following-sibling::employee))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[1]/following-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[1]/following-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following-sibling::employee) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following-sibling::employee) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following-sibling::employee) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following-sibling::employee) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following-sibling::employee) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following-sibling::employee) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following-sibling::employee) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following-sibling::employee) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works[1]/employee[12]/following-sibling::employee,/works[1]/employee[12]/following-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works[1]/employee[12]/following-sibling::employee,/works[1]/employee[12]/following-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return $h/following-sibling::employee[fn:position() = 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return $h/following-sibling::employee[fn:position() = 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.following.xml">
    <x:scenario>
      <x:label>(200)/following::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/following::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/following::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/following::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[12]/following::employee) is exactly-one(/works/employee[13])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[12]/following::employee) is exactly-one(/works/employee[13])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following::employee) is exactly-one(/works[1]/employee[12])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following::employee) is exactly-one(/works[1]/employee[12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[11]/following::employee[1]) &lt;&lt; (/works[1]/employee[13])</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[11]/following::employee[1]) &lt;&lt; (/works[1]/employee[13])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/following::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/following::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/overtime[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following::employee) &lt;&lt; exactly-one(/works[1]/employee[12]/overtime[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[1]/following::day)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[1]/following::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]/following::employee) &gt;&gt; exactly-one(/works[1]/employee[12]/following::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]/following::employee) &gt;&gt; exactly-one(/works[1]/employee[12]/following::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[12]) &gt;&gt; exactly-one(/works[1]/employee[12]/following::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[12]) &gt;&gt; exactly-one(/works[1]/employee[12]/following::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[1]/following::day) | (/works/employee[12]/*/day[1]/following::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[1]/following::day) | (/works/employee[12]/*/day[1]/following::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[1]/following::day) | (/works/employee[12]/*/day[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[1]/following::day) | (/works/employee[12]/*/day[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime[1]/day[1]/following::day) intersect (/works[1]/employee[12]/overtime[1]/day[1]/following::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime[1]/day[1]/following::day) intersect (/works[1]/employee[12]/overtime[1]/day[1]/following::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works[1]/employee[12]/following::employee) except (/works[1]/employee[12]/following::employee))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works[1]/employee[12]/following::employee) except (/works[1]/employee[12]/following::employee))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[1]/following::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[1]/following::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following::employee) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following::employee) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following::employee) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following::employee) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following::employee) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following::employee) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/following::employee) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/following::employee) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works[1]/employee[12]/following::employee,/works[1]/employee[12]/following::employee)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works[1]/employee[12]/following::employee,/works[1]/employee[12]/following::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(//employee[@name="John Doe 10"]/following::text()[.='Monday'])</x:label>
      <x:variable name="expr" as="xs:string">exists(//employee[@name="John Doe 10"]/following::text()[.='Monday'])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.preceding-sibling.xml">
    <x:scenario>
      <x:label>(200)/preceding-sibling::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/preceding-sibling::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/preceding-sibling::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/preceding-sibling::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[2]/preceding-sibling::employee) is exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[2]/preceding-sibling::employee) is exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[2]/preceding-sibling::employee) is exactly-one(/works[1]/employee[2])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[2]/preceding-sibling::employee) is exactly-one(/works[1]/employee[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/preceding-sibling::employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/preceding-sibling::employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[2]/preceding-sibling::employee) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[2]/preceding-sibling::employee) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[2]/preceding-sibling::day) | (/works/employee[12]/*/day[2]/preceding-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[2]/preceding-sibling::day) | (/works/employee[12]/*/day[2]/preceding-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[2]/preceding-sibling::day) | (/works/employee[12]/*/day[2])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[2]/preceding-sibling::day) | (/works/employee[12]/*/day[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime[1]/day[2]/preceding-sibling::day) intersect (/works[1]/employee[12]/overtime[1]/day[2]/preceding-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime[1]/day[2]/preceding-sibling::day) intersect (/works[1]/employee[12]/overtime[1]/day[2]/preceding-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works[1]/employee[12]/preceding-sibling::employee) except (/works[1]/employee[12]/preceding-sibling::employee))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works[1]/employee[12]/preceding-sibling::employee) except (/works[1]/employee[12]/preceding-sibling::employee))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[2]/preceding-sibling::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[2]/preceding-sibling::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding-sibling::employee) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding-sibling::employee) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding-sibling::employee) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding-sibling::employee) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding-sibling::employee) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding-sibling::employee) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding-sibling::employee) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding-sibling::employee) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works[1]/employee[12]/preceding-sibling::employee,/works[1]/employee[12]/preceding-sibling::employee)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works[1]/employee[12]/preceding-sibling::employee,/works[1]/employee[12]/preceding-sibling::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return $h/preceding-sibling::employee[fn:position() = 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return $h/preceding-sibling::employee[fn:position() = 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.preceding.xml">
    <x:scenario>
      <x:label>(200)/preceding::*</x:label>
      <x:variable name="expr" as="xs:string">(200)/preceding::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/works/employee[1]/preceding::noSuchNode)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/works/employee[1]/preceding::noSuchNode)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works/employee[2]/preceding::employee) is exactly-one(/works/employee[1])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works/employee[2]/preceding::employee) is exactly-one(/works/employee[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[2]/preceding::employee) is exactly-one(/works[1]/employee[2])</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[2]/preceding::employee) is exactly-one(/works[1]/employee[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[2]/preceding::employee) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[2]/preceding::employee) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding::employee)</x:label>
      <x:variable name="expr" as="xs:string">exactly-one(/works[1]/employee[13]) &gt;&gt; exactly-one(/works[1]/employee[2]/preceding::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2]/preceding::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2]/preceding::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[12]/*/day[2]/preceding::day) | (/works/employee[12]/*/day[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day) intersect (/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime[1]/day[2]/preceding::day) intersect (/works[1]/employee[12]/overtime[1]/day[2]/preceding::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((/works[1]/employee[12]/preceding::employee) except (/works[1]/employee[12]/preceding::employee))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((/works[1]/employee[12]/preceding::employee) except (/works[1]/employee[12]/preceding::employee))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[2]/preceding::day)</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/overtime/day) except (/works[1]/employee[12]/overtime/day[2]/preceding::day)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding::employee) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding::employee) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding::employee) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding::employee) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding::employee) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding::employee) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]/employee[12]/preceding::employee) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]/employee[12]/preceding::employee) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:deep-equal(/works[1]/employee[12]/preceding::employee,/works[1]/employee[12]/preceding::employee)</x:label>
      <x:variable name="expr" as="xs:string">fn:deep-equal(/works[1]/employee[12]/preceding::employee,/works[1]/employee[12]/preceding::employee)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.static-typing.xml">
    <x:scenario>
      <x:label>fn:count(//center/self::nowhere)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/self::nowhere)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-2/self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-2/self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-3/self::center-attr-3)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-3/self::center-attr-3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-1/self::nowhere)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-1/self::nowhere)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/self::center)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/self::center)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-1/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-1/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-2/descendant-or-self::far-south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-2/descendant-or-self::far-south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-2/descendant-or-self::center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-2/descendant-or-self::center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/parent::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/parent::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/..)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.unabbr.xml">
    <x:scenario>
      <x:label>for $h in (/works/employee) return $h/child::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/child::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/child::*</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/child::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works[1]/employee[2]) return $h/child::text()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works[1]/employee[2]) return $h/child::text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/child::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/child::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[2]) return $h/child::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return $h/child::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]/hours) return $h/parent::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]/hours) return $h/parent::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee) return $h/descendant::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/descendant::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/descendant-or-self::employee</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/descendant-or-self::employee</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/self::employee</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/self::employee</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee/descendant::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee/descendant::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::*/child::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::*/child::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/descendant::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/descendant::employee/child::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::employee/child::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = fn:last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = fn:last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/descendant::employee[fn:position() = 12]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::employee[fn:position() = 12]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]</x:label>
      <x:variable name="expr" as="xs:string">/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[attribute::name eq "Jane Doe 11"]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[attribute::name eq "Jane Doe 11"]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[child::empnum = 'E3']</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[child::empnum = 'E3']</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[child::status]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[child::status]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/AxisStep.xml">
    <x:scenario>
      <x:label>fn:count(//center/child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/south-east)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/south-east)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west/@west-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west/@west-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count( / )</x:label>
      <x:variable name="expr" as="xs:string">fn:count( / )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/parent::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/parent::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/far-north/parent::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/far-north/parent::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/parent::near-north)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/parent::near-north)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/parent::nowhere)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/parent::nowhere)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/far-north/parent::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/far-north/parent::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/..)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/..)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/self::center)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/self::center)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-3/self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-3/self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::center)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::center)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::center)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::center)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/@center-attr-3/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/@center-attr-3/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center/text()/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center/text()/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::far-north)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::far-north)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::far-north)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::far-north)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/far-north)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/far-north)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/far-north)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/far-north)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(/descendant-or-self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(/descendant-or-self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//attribute::mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//attribute::mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//@mark)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//@mark)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//self::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//self::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//self::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//self::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//child::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//child::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//south)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//south)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//attribute::center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//attribute::center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//attribute::center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//attribute::center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//attribute::center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//attribute::center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//attribute::center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//attribute::center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//attribute::node())</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//attribute::node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//west//@*)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//west//@*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//@center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//@center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//@center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//@center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//@center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//@center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(//center//@center-attr-2)</x:label>
      <x:variable name="expr" as="xs:string">fn:count(//center//@center-attr-2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/</x:label>
      <x:variable name="expr" as="xs:string">/*/</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace-node()</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace-node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::namespace-node()</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::namespace-node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::*[self::namespace-node()]</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::*[self::namespace-node()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::*</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::*/..</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::*/..</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::*/name()</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::*/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(/*/namespace::xlink)</x:label>
      <x:variable name="expr" as="xs:string">string(/*/namespace::xlink)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::xlink is /*/*[1]/namespace::xlink</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::xlink is /*/*[1]/namespace::xlink</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::xlink is /*/namespace::*[. = 'http://www.w3.org/1999/xlink']</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::xlink is /*/namespace::*[. = 'http://www.w3.org/1999/xlink']</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/namespace::*[not(name())]</x:label>
      <x:variable name="expr" as="xs:string">/*/namespace::*[not(name())]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/*/namespace::*[not(name())]</x:label>
      <x:variable name="expr" as="xs:string">/*/*/namespace::*[not(name())]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/*/*/namespace::*[not(name())]</x:label>
      <x:variable name="expr" as="xs:string">/*/*/*/namespace::*[not(name())]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*:(:hey:)ncname</x:label>
      <x:variable name="expr" as="xs:string">*:(:hey:)ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*(:hey:):ncname</x:label>
      <x:variable name="expr" as="xs:string">*(:hey:):ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>* :ncname</x:label>
      <x:variable name="expr" as="xs:string">* :ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*(:hey:):ncname</x:label>
      <x:variable name="expr" as="xs:string">*(:hey:):ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ncname :*</x:label>
      <x:variable name="expr" as="xs:string">ncname :*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>name(:hey:):*</x:label>
      <x:variable name="expr" as="xs:string">name(:hey:):*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>* :ncname</x:label>
      <x:variable name="expr" as="xs:string">* :ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ncname: *</x:label>
      <x:variable name="expr" as="xs:string">ncname: *</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*(:hey:):ncname</x:label>
      <x:variable name="expr" as="xs:string">*(:hey:):ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>ncname:(:hey:)*</x:label>
      <x:variable name="expr" as="xs:string">ncname:(:hey:)*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*(:hey:):(:hey:) ncname</x:label>
      <x:variable name="expr" as="xs:string">*(:hey:):(:hey:) ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*:(:hey:)ncname</x:label>
      <x:variable name="expr" as="xs:string">*:(:hey:)ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>*:</x:label>
      <x:variable name="expr" as="xs:string">*:</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>preceding-or-ancestor::*</x:label>
      <x:variable name="expr" as="xs:string">preceding-or-ancestor::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nametest//</x:label>
      <x:variable name="expr" as="xs:string">nametest//</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nametest/</x:label>
      <x:variable name="expr" as="xs:string">nametest/</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>parent::self()</x:label>
      <x:variable name="expr" as="xs:string">parent::self()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>123[..]</x:label>
      <x:variable name="expr" as="xs:string">123[..]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1[element()]</x:label>
      <x:variable name="expr" as="xs:string">1[element()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 5 * /)[1]</x:label>
      <x:variable name="expr" as="xs:string">(1, 5 * /)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, /)[1]</x:label>
      <x:variable name="expr" as="xs:string">(1, /)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/, 1)[2]</x:label>
      <x:variable name="expr" as="xs:string">(/, 1)[2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//</x:label>
      <x:variable name="expr" as="xs:string">//</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1/3</x:label>
      <x:variable name="expr" as="xs:string">1/3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1]/(1, 2)[last()]/"a string"</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1]/(1, 2)[last()]/"a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()/@attr)</x:label>
      <x:variable name="expr" as="xs:string">empty(()/@attr)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()/name)</x:label>
      <x:variable name="expr" as="xs:string">empty(()/name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>preceeding::node()</x:label>
      <x:variable name="expr" as="xs:string">preceeding::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix:</x:label>
      <x:variable name="expr" as="xs:string">prefix:</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix:</x:label>
      <x:variable name="expr" as="xs:string">prefix:</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>declare</x:label>
      <x:variable name="expr" as="xs:string">declare</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>eclare function</x:label>
      <x:variable name="expr" as="xs:string">eclare function</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>declare function name</x:label>
      <x:variable name="expr" as="xs:string">declare function name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>declare function local:foo() external;</x:label>
      <x:variable name="expr" as="xs:string">declare function local:foo() external;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xquery, version, encoding, default, declare, function, option, collation, schema, import</x:label>
      <x:variable name="expr" as="xs:string">xquery, version, encoding, default, declare, function, option, collation, schema, import</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/child::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/child::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/self::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/self::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/attribute::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/attribute::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/parent::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/parent::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/descendant::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/descendant::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10)/descendant-or-self::*</x:label>
      <x:variable name="expr" as="xs:string">(10)/descendant-or-self::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/CastableExpr.xml">
    <x:scenario>
      <x:label>xs:untypedAtomic("INF") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("INF") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0E0") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0E0") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("INF") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("INF") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0E0") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0E0") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-10000000") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-10000000") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-10000000") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-10000000") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("5.5432") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("5.5432") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-1.1234") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-1.1234") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P1Y2M3DT10H30M23S") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P1Y2M3DT10H30M23S") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P24M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P24M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P21M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P21M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P3DT10H30M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P3DT10H30M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-PT100M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-PT100M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31T13:20:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31T13:20:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-1999-05-31T13:20:00+14:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-1999-05-31T13:20:00+14:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("2000-01-16T00:00:00Z") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("2000-01-16T00:00:00Z") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:00-05:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:00-05:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:02.123") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:02.123") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:00Z") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:00Z") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-12-03-05:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-12-03-05:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31Z") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31Z") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-12-05:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-12-05:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05Z") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05Z") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999Z") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999Z") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31+14:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31+14:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31Z") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31Z") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---31") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---31") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---03-05:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---03-05:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---31Z") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---31Z") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--12-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--12-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05Z") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05Z") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("00000000") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("00000000") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("D74D35D35D35") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("D74D35D35D35") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("010010101") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("010010101") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0fb7") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0fb7") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("D74D35D35D35") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("D74D35D35D35") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("http://www.example.com/~b%C3%A9b%C3%A9") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("http://www.example.com/~b%C3%A9b%C3%A9") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("INF") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("INF") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0E0") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0E0") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("INF") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("INF") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0E0") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0E0") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-10000000") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-10000000") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-10000000") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-10000000") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("5.5432") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("5.5432") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-1.1234") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-1.1234") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P1Y2M3DT10H30M23S") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P1Y2M3DT10H30M23S") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P24M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P24M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P21M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P21M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P3DT10H30M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P3DT10H30M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-PT100M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-PT100M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31T13:20:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31T13:20:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-1999-05-31T13:20:00+14:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-1999-05-31T13:20:00+14:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("2000-01-16T00:00:00Z") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("2000-01-16T00:00:00Z") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:00-05:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:00-05:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:02.123") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:02.123") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:00Z") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:00Z") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-12-03-05:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-12-03-05:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31Z") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31Z") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-12-05:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-12-05:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05Z") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05Z") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999Z") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999Z") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31+14:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31+14:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31Z") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31Z") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---31") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---31") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---03-05:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---03-05:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---31Z") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---31Z") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--12-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--12-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05Z") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05Z") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("00000000") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("00000000") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("D74D35D35D35") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("D74D35D35D35") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("010010101") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("010010101") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0fb7") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0fb7") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("D74D35D35D35") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("D74D35D35D35") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://www.example.com/~b%C3%A9b%C3%A9") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://www.example.com/~b%C3%A9b%C3%A9") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.75e-3") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.75e-3") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.75e-3") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.75e-3") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.75e-3") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.75e-3") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e8") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e8") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("5.4321E-1001") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("5.4321E-1001") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.75e-3") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.75e-3") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("5.4321E-1001") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("5.4321E-1001") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.75e-3") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.75e-3") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.75e-3") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.75e-3") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("5.5432") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("5.5432") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("1") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("1") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P24M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P24M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P24M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P24M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P21M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P21M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT24H") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT24H") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P14D") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P14D") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-01-16T00:00:00Z") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-01-16T00:00:00Z") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:02.123") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:02.123") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00Z") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00Z") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("-0012-12-05:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("-0012-12-05:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("-0012-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("-0012-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999Z") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999Z") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--12-03-05:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--12-03-05:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31Z") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31Z") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03-05:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03-05:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31Z") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31Z") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--12-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--12-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05Z") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05Z") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("00000000") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("00000000") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aA+zZ/09") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aA+zZ/09") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0fb7") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0fb7") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("d74d35d35d35") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("d74d35d35d35") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"ABC" castable as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">"ABC" castable as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[salary castable as xs:integer][xs:integer(salary) gt 65000])</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[salary castable as xs:integer][xs:integer(salary) gt 65000])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(//employee[if (salary castable as xs:integer) then xs:integer(salary) gt 65000 else false()])</x:label>
      <x:variable name="expr" as="xs:string">count(//employee[if (salary castable as xs:integer) then xs:integer(salary) gt 65000 else false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as xs:string*</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as xs:string*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as xs:string+</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as xs:string+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("one", "two") castable as xs:string+</x:label>
      <x:variable name="expr" as="xs:string">("one", "two") castable as xs:string+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as xs:anyAtomicType</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as xs:anyAtomicType</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"notation is abstract" castable as xs:NOTATION?</x:label>
      <x:variable name="expr" as="xs:string">"notation is abstract" castable as xs:NOTATION?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() castable as xs:NOTATION?</x:label>
      <x:variable name="expr" as="xs:string">() castable as xs:NOTATION?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"notation is abstract" castable as xs:NOTATION</x:label>
      <x:variable name="expr" as="xs:string">"notation is abstract" castable as xs:NOTATION</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() castable as xs:NOTATION</x:label>
      <x:variable name="expr" as="xs:string">() castable as xs:NOTATION</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as node()</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as attribute()</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as attribute()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' castable as empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">'string' castable as empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(QName("", "lname") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(QName("", "lname") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>QName("", "lname") castable as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">QName("", "lname") castable as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"ncname" castable as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">"ncname" castable as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(() castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() castable as xs:QName?</x:label>
      <x:variable name="expr" as="xs:string">() castable as xs:QName?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("ncname") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("ncname") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(("one", "two") castable as xs:string?)</x:label>
      <x:variable name="expr" as="xs:string">not(("one", "two") castable as xs:string?)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not('string' castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not('string' castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'true' castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">'true' castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1) castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1) castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1) castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1) castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(1) castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float(1) castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("example.com/") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("example.com/") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("three" castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not("three" castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("three" castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not("three" castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("three" castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not("three" castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("three" castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not("three" castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, 3) castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, 3) castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(() castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">() castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1) castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">(1) castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(("one", "two") castable as xs:string?)</x:label>
      <x:variable name="expr" as="xs:string">not(("one", "two") castable as xs:string?)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName("http://example.com/ANamespace", "ncname"), QName("http://example.com/ANamespace", "ncname2"), QName("http://example.com/ANamespace", "ncname3")) castable as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">(QName("http://example.com/ANamespace", "ncname"), QName("http://example.com/ANamespace", "ncname2"), QName("http://example.com/ANamespace", "ncname3")) castable as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(QName("http://example.com/ANamespace", "ncname"), QName("http://example.com/ANamespace", "ncname2"), QName("http://example.com/ANamespace", "ncname3")) castable as xs:QName?</x:label>
      <x:variable name="expr" as="xs:string">(QName("http://example.com/ANamespace", "ncname"), QName("http://example.com/ANamespace", "ncname2"), QName("http://example.com/ANamespace", "ncname3")) castable as xs:QName?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 div 0) castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">(1 div 0) castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("2007-01-3", 1 div 0) castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">concat("2007-01-3", 1 div 0) castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("52") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("52") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"%" castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">"%" castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("%") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("%") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("http:\\invalid&gt;URI\someURI") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">("http:\\invalid&gt;URI\someURI") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>128 castable as xs:byte</x:label>
      <x:variable name="expr" as="xs:string">128 castable as xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-129 castable as xs:byte</x:label>
      <x:variable name="expr" as="xs:string">-129 castable as xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"128" castable as xs:byte</x:label>
      <x:variable name="expr" as="xs:string">"128" castable as xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-129" castable as xs:byte</x:label>
      <x:variable name="expr" as="xs:string">"-129" castable as xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-25252734927766555-06-06" castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">"-25252734927766555-06-06" castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"25252734927766555-07-29" castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">"25252734927766555-07-29" castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-25252734927766555-06-06T00:00:00Z" castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">"-25252734927766555-06-06T00:00:00Z" castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"25252734927766555-07-29T00:00:00Z" castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">"25252734927766555-07-29T00:00:00Z" castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"P11768614336404564651D" castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">"P11768614336404564651D" castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-P11768614336404564651D" castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">"-P11768614336404564651D" castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('NaN') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float('NaN') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('-INF') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float('-INF') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('INF') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float('INF') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double('NaN') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double('NaN') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double('-INF') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double('-INF') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double('INF') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double('INF') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.7976931348623157E+308 castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">1.7976931348623157E+308 castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.7976931348623157E+308 castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">-1.7976931348623157E+308 castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('3.402823e38') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float('3.402823e38') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('-3.402823e38') castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float('-3.402823e38') castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-P768614336404564651Y" castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">"-P768614336404564651Y" castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"P768614336404564651Y" castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">"P768614336404564651Y" castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2147483648 castable as xs:int</x:label>
      <x:variable name="expr" as="xs:string">2147483648 castable as xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-2147483649 castable as xs:int</x:label>
      <x:variable name="expr" as="xs:string">-2147483649 castable as xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"2147483648" castable as xs:int</x:label>
      <x:variable name="expr" as="xs:string">"2147483648" castable as xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-2147483649" castable as xs:int</x:label>
      <x:variable name="expr" as="xs:string">"-2147483649" castable as xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.7976931348623157E+308 castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1.7976931348623157E+308 castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1.7976931348623157E+308 castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">-1.7976931348623157E+308 castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('3.402823e38') castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float('3.402823e38') castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float('-3.402823e38') castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float('-3.402823e38') castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language('en-gb') castable as xs:language</x:label>
      <x:variable name="expr" as="xs:string">xs:language('en-gb') castable as xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.0 castable as xs:language</x:label>
      <x:variable name="expr" as="xs:string">1.0 castable as xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'en-gb' castable as xs:language</x:label>
      <x:variable name="expr" as="xs:string">'en-gb' castable as xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"gobbledygook" castable as xs:language</x:label>
      <x:variable name="expr" as="xs:string">"gobbledygook" castable as xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>9223372036854775808 castable as xs:long</x:label>
      <x:variable name="expr" as="xs:string">9223372036854775808 castable as xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-9223372036854775809 castable as xs:long</x:label>
      <x:variable name="expr" as="xs:string">-9223372036854775809 castable as xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"9223372036854775808" castable as xs:long</x:label>
      <x:variable name="expr" as="xs:string">"9223372036854775808" castable as xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-9223372036854775809" castable as xs:long</x:label>
      <x:variable name="expr" as="xs:string">"-9223372036854775809" castable as xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NCName('NCName') castable as xs:Name</x:label>
      <x:variable name="expr" as="xs:string">xs:NCName('NCName') castable as xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() castable as xs:Name</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() castable as xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'NCName' castable as xs:Name</x:label>
      <x:variable name="expr" as="xs:string">'NCName' castable as xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'N A M E' castable as xs:Name</x:label>
      <x:variable name="expr" as="xs:string">'N A M E' castable as xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ID('id') castable as xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:ID('id') castable as xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:current-time() castable as xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">fn:current-time() castable as xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'NCName' castable as xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">'NCName' castable as xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'NC:Name' castable as xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">'NC:Name' castable as xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 castable as xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">0 castable as xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"0" castable as xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">"0" castable as xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN('NMTOKEN') castable as xs:NMTOKEN</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN('NMTOKEN') castable as xs:NMTOKEN</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&#xD;
	 foobar 
&#xD;	" castable as xs:NMTOKEN</x:label>
      <x:variable name="expr" as="xs:string">"&#xD;
	 foobar 
&#xD;	" castable as xs:NMTOKEN</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 castable as xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">-1 castable as xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-1" castable as xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">"-1" castable as xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 castable as xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">1 castable as xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"1" castable as xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">"1" castable as xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 castable as xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">0 castable as xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"0" castable as xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">"0" castable as xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>32768 castable as xs:short</x:label>
      <x:variable name="expr" as="xs:string">32768 castable as xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-32769 castable as xs:short</x:label>
      <x:variable name="expr" as="xs:string">-32769 castable as xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"32769" castable as xs:short</x:label>
      <x:variable name="expr" as="xs:string">"32769" castable as xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-32769" castable as xs:short</x:label>
      <x:variable name="expr" as="xs:string">"-32769" castable as xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>256 castable as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">256 castable as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 castable as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">-1 castable as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"256" castable as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">"256" castable as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-1" castable as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">"-1" castable as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4294967296 castable as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">4294967296 castable as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 castable as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">-1 castable as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"4294967296" castable as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">"4294967296" castable as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-1" castable as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">"-1" castable as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>18446744073709551616 castable as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">18446744073709551616 castable as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 castable as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">-1 castable as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"18446744073709551616" castable as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">"18446744073709551616" castable as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-1" castable as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">"-1" castable as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65536 castable as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">65536 castable as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1 castable as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">-1 castable as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"65536" castable as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">"65536" castable as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-1" castable as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">"-1" castable as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-P768614336404564651Y" castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">"-P768614336404564651Y" castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"P768614336404564651Y" castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">"P768614336404564651Y" castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-00" castable as xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">"-00" castable as xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"+00" castable as xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">"+00" castable as xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-00" castable as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">"-00" castable as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-00" castable as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">"-00" castable as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-00" castable as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">"-00" castable as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-00" castable as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">"-00" castable as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"99999999999999999999999999999" castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">"99999999999999999999999999999" castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"99999999999999999999999999999-01" castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">"99999999999999999999999999999-01" castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"99999999999999999999999999999-XX" castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">"99999999999999999999999999999-XX" castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"0000" castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">"0000" castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-0000" castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">"-0000" castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"0000-05" castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">"0000-05" castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-0000-05" castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">"-0000-05" castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/CastExpr.derived.xml">
    <x:scenario>
      <x:label>for $string in ("&#xD;
	 foobar 
&#xD;	" cast as xs:NMTOKEN) return not(contains($string, '	') or contains($string, '
') or contains($string, '&#xD;') or string-length($string) ne 6)</x:label>
      <x:variable name="expr" as="xs:string">for $string in ("&#xD;
	 foobar 
&#xD;	" cast as xs:NMTOKEN) return not(contains($string, '	') or contains($string, '
') or contains($string, '&#xD;') or string-length($string) ne 6)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $string in ("&#xD; foo 	 bar 
" cast as xs:normalizedString)
        return not(contains($string, '	') or 
                   contains($string, '
') or 
                   contains($string, '&#xD;') or 
                   string-length($string) ne 13)</x:label>
      <x:variable name="expr" as="xs:string">for $string in ("&#xD; foo 	 bar 
" cast as xs:normalizedString)
        return not(contains($string, '	') or 
                   contains($string, '
') or 
                   contains($string, '&#xD;') or 
                   string-length($string) ne 13)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $string in ("&#xD; foo 	 bar 
" cast as xs:token) 
        return not(contains($string, '	') or 
                   contains($string, '
') or 
                   contains($string, '&#xD;') or 
                   string-length($string) ne 7)</x:label>
      <x:variable name="expr" as="xs:string">for $string in ("&#xD; foo 	 bar 
" cast as xs:token) 
        return not(contains($string, '	') or 
                   contains($string, '
') or 
                   contains($string, '&#xD;') or 
                   string-length($string) ne 7)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/CastExpr.xml">
    <x:scenario>
      <x:label>(5 + 5) cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(5 + 5) cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(5 + 5) cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(5 + 5) cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(5 + 5) cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(5 + 5) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">(5 + 5) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String" cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">"A String" cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(2.1E3) cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float(2.1E3) cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(2.1E3) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float(2.1E3) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(2.1E3) cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float(2.1E3) cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(2.1E3) cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float(2.1E3) cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1267.43233E12) cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1267.43233E12) cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1267.43233E12) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1267.43233E12) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:double(1267.43233E12) cast as xs:float) eq xs:float(1267.43233E12)</x:label>
      <x:variable name="expr" as="xs:string">(xs:double(1267.43233E12) cast as xs:float) eq xs:float(1267.43233E12)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1267.43233E12) cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1267.43233E12) cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(12678967.543233) cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(12678967.543233) cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12678967543233) cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12678967543233) cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:integer(12678967543233) cast as xs:float) eq xs:float(12678967543233)</x:label>
      <x:variable name="expr" as="xs:string">(xs:integer(12678967543233) cast as xs:float) eq xs:float(12678967543233)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12678967543233) cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12678967543233) cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12678967543233) cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12678967543233) cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12678967543233) cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12678967543233) cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12678967543233) cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12678967543233) cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:00:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:00:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("12:00:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("12:00:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">fn:true() cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("A String") cast as xs:NOTATION</x:label>
      <x:variable name="expr" as="xs:string">xs:string("A String") cast as xs:NOTATION</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("INF") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("INF") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0E0") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0E0") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("INF") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("INF") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0E0") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0E0") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-10000000") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-10000000") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-10000000") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-10000000") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("5.5432") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("5.5432") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0.0E0") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0.0E0") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("NaN") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("NaN") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1e-5") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1e-5") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-1.1234") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-1.1234") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P1Y2M3DT10H30M23S") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P1Y2M3DT10H30M23S") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P24M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P24M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P21M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P21M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P3DT10H30M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P3DT10H30M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-PT100M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-PT100M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31T13:20:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31T13:20:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("2000-01-16T00:00:00Z") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("2000-01-16T00:00:00Z") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:00-05:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:00-05:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:02.123") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:02.123") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("13:20:00Z") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("13:20:00Z") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-12-03-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-12-03-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05-31Z") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05-31Z") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-12-05:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-12-05:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999-05Z") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999-05Z") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("-0012-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("-0012-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1999Z") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1999Z") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31+14:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31+14:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05-31Z") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05-31Z") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---31") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---31") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---03-05:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---03-05:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("---31Z") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("---31Z") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--12-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--12-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("--05Z") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("--05Z") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0.0") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0.0") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("00000000") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("00000000") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("D74D35D35D35") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("D74D35D35D35") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("010010101") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("010010101") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0fb7") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0fb7") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("D74D35D35D35") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("D74D35D35D35") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("INF") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("INF") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0E0") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0E0") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("INF") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("INF") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0E0") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0E0") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-10000000") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-10000000") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-10000000") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-10000000") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("5.5432") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("5.5432") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0.0E0") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0.0E0") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("NaN") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("NaN") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1e-5") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1e-5") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-1.1234") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-1.1234") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P1Y2M3DT10H30M23S") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P1Y2M3DT10H30M23S") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P24M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P24M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P21M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P21M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("P3DT10H30M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("P3DT10H30M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-PT100M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-PT100M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31T13:20:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31T13:20:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("2000-01-16T00:00:00Z") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("2000-01-16T00:00:00Z") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:00-05:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:00-05:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:02.123") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:02.123") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("13:20:00Z") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("13:20:00Z") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-12-03-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-12-03-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05-31Z") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05-31Z") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-12-05:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-12-05:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999-05Z") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999-05Z") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("-0012-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("-0012-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("1999Z") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("1999Z") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31+14:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31+14:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05-31Z") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05-31Z") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---31") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---31") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---03-05:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---03-05:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("---31Z") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("---31Z") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--12-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--12-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("--05Z") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("--05Z") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0.0") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0.0") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("00000000") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("00000000") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("D74D35D35D35") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("D74D35D35D35") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("010010101") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("010010101") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("0fb7") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("0fb7") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("D74D35D35D35") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:string("D74D35D35D35") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("true") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("true") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:string("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.75e-3") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.75e-3") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:float("-1.75e-3") cast as xs:decimal,5)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:float("-1.75e-3") cast as xs:decimal,5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("INF") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:float("INF") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-1.75e-3") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-1.75e-3") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-0.0E0") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-0.0E0") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("1e5") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("1e5") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-INF") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-INF") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("5.4321E-100") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:float("5.4321E-100") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e8") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e8") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("5.4321E-1001") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("5.4321E-1001") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.75e-3") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.75e-3") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("5.4321E-1001") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("5.4321E-1001") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>round-half-to-even(xs:double("-1.75e-3") cast as xs:decimal,5)</x:label>
      <x:variable name="expr" as="xs:string">round-half-to-even(xs:double("-1.75e-3") cast as xs:decimal,5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-0.0E0") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-0.0E0") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-1.75e-3") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-1.75e-3") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("INF") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("INF") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("NaN") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:double("NaN") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("1e5") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:double("1e5") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("5.5432") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("5.5432") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-1.1234") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-1.1234") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("1") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("1") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("-100") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("-100") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P24M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P24M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("PT10H") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("PT10H") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P24M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P24M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M23S") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M23S") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P21M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P21M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y2M") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y2M") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PT24H") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PT24H") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P14D") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P14D") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-PT100M") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-PT100M") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H30M") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H30M") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2000-01-16T00:00:00Z") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2000-01-16T00:00:00Z") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-05-31T13:20:00") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-05-31T13:20:00") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:02.123") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:02.123") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00Z") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00Z") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:00-05:00") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:00-05:00") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-0012-12-03-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-0012-12-03-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31Z") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31Z") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-05-31") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-05-31") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("-0012-12-05:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("-0012-12-05:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-05Z") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-05Z") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("-0012-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("-0012-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999Z") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999Z") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--12-03-05:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--12-03-05:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31Z") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31Z") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--05-31") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--05-31") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03-05:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03-05:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31Z") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31Z") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---31") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---31") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--12-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--12-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05Z") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05Z") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--05") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--05") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("false") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("false") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("01001010") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("01001010") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("00000000") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("00000000") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aA+zZ/09") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aA+zZ/09") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("0FB7") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("0FB7") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("10010101") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("10010101") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0fb7") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0fb7") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("d74d35d35d35") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("d74d35d35d35") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("D74D35D35D35") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("D74D35D35D35") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(2.123456789123456789) cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:string(2.123456789123456789) cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(-20) cast as xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:string(-20) cast as xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(20) cast as xs:long</x:label>
      <x:variable name="expr" as="xs:string">xs:string(20) cast as xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(200) cast as xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:string(200) cast as xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(-201) cast as xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:string(-201) cast as xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(20) cast as xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:string(20) cast as xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(20) cast as xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">xs:string(20) cast as xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(300) cast as xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:string(300) cast as xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(30) cast as xs:short</x:label>
      <x:variable name="expr" as="xs:string">xs:string(30) cast as xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(300) cast as xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">xs:string(300) cast as xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(120) cast as xs:byte</x:label>
      <x:variable name="expr" as="xs:string">xs:string(120) cast as xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(12) cast as xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">xs:string(12) cast as xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(12) cast as xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">xs:string(12) cast as xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("9999-12-31T23:59:59.9999999") cast as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("9999-12-31T23:59:59.9999999") cast as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(xs:normalizedString(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(xs:normalizedString(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-to-codepoints(xs:token(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:label>
      <x:variable name="expr" as="xs:string">string-to-codepoints(xs:token(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime('2017-07-19T12:00:00-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime('2017-07-19T12:00:00-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time('12:00:00-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:time('12:00:00-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date('2017-07-19-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:date('2017-07-19-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear('2017-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear('2017-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth('2017-07-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth('2017-07-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth('--07-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth('--07-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay('--07-12-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay('--07-12-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay('---12-00:30')</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay('---12-00:30')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(12345678901234567.3)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(12345678901234567.3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(99e100)</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(99e100)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(99e100)</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(99e100)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' cast as xs:string*</x:label>
      <x:variable name="expr" as="xs:string">'string' cast as xs:string*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' cast as xs:string+</x:label>
      <x:variable name="expr" as="xs:string">'string' cast as xs:string+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'string' cast as xs:anyAtomicType</x:label>
      <x:variable name="expr" as="xs:string">'string' cast as xs:anyAtomicType</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 cast as prefixDoesNotExist:integer</x:label>
      <x:variable name="expr" as="xs:string">3 cast as prefixDoesNotExist:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'1' cast as xs:boolean eq true()</x:label>
      <x:variable name="expr" as="xs:string">'1' cast as xs:boolean eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'true' cast as xs:boolean eq true()</x:label>
      <x:variable name="expr" as="xs:string">'true' cast as xs:boolean eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'false' cast as xs:boolean eq false()</x:label>
      <x:variable name="expr" as="xs:string">'false' cast as xs:boolean eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'0' cast as xs:boolean eq false()</x:label>
      <x:variable name="expr" as="xs:string">'0' cast as xs:boolean eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() cast as xs:boolean eq false()</x:label>
      <x:variable name="expr" as="xs:string">false() cast as xs:boolean eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(true() cast as xs:boolean eq false())</x:label>
      <x:variable name="expr" as="xs:string">not(true() cast as xs:boolean eq false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:double(3)) eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:double(3)) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:string(1)) eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:string(1)) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:integer(3)) eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:integer(3)) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:decimal(3)) eq true()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:decimal(3)) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:double(0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:double(0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:string(0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:string(0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:integer(0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:integer(0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:decimal(0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:decimal(0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:decimal(0.0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:decimal(0.0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(+0) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(+0) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(-0) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(-0) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:double(+0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:double(+0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:double(-0)) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:double(-0)) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(0.0E0) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(0.0E0) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:double("NaN")) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:double("NaN")) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:float("NaN")) eq false()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:float("NaN")) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'12312' cast as xs:boolean eq false()</x:label>
      <x:variable name="expr" as="xs:string">'12312' cast as xs:boolean eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() cast as xs:string eq "false"</x:label>
      <x:variable name="expr" as="xs:string">false() cast as xs:string eq "false"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() cast as xs:string eq "true"</x:label>
      <x:variable name="expr" as="xs:string">true() cast as xs:string eq "true"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>('1' cast as xs:boolean) cast as xs:string eq 'true'</x:label>
      <x:variable name="expr" as="xs:string">('1' cast as xs:boolean) cast as xs:string eq 'true'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean('0') cast as xs:string eq 'false'</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean('0') cast as xs:string eq 'false'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>" white space left alone" cast as xs:string eq xs:string(" white space left alone")</x:label>
      <x:variable name="expr" as="xs:string">" white space left alone" cast as xs:string eq xs:string(" white space left alone")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:QName("fn:local-name") cast as xs:string) eq "fn:local-name"</x:label>
      <x:variable name="expr" as="xs:string">(xs:QName("fn:local-name") cast as xs:string) eq "fn:local-name"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:QName("local-name") cast as xs:string) eq "local-name"</x:label>
      <x:variable name="expr" as="xs:string">(xs:QName("local-name") cast as xs:string) eq "local-name"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:anyURI('example.com/')) eq 'example.com/'</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:anyURI('example.com/')) eq 'example.com/'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:double(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:double(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:string(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:string(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:integer(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:integer(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:decimal(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:decimal(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"untyped a " cast as xs:untypedAtomic eq xs:untypedAtomic("untyped a ")</x:label>
      <x:variable name="expr" as="xs:string">"untyped a " cast as xs:untypedAtomic eq xs:untypedAtomic("untyped a ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() cast as xs:untypedAtomic eq xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">false() cast as xs:untypedAtomic eq xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() cast as xs:untypedAtomic eq xs:untypedAtomic("true")</x:label>
      <x:variable name="expr" as="xs:string">true() cast as xs:untypedAtomic eq xs:untypedAtomic("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">false() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">true() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:QName("local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("local-name")</x:label>
      <x:variable name="expr" as="xs:string">(xs:QName("local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("local-name")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:QName("fn:local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("fn:local-name")</x:label>
      <x:variable name="expr" as="xs:string">(xs:QName("fn:local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("fn:local-name")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:anyURI('example.com/')) eq 'example.com/'</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:anyURI('example.com/')) eq 'example.com/'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:double(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:double(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:string(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:string(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:integer(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:integer(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:decimal(3)) eq '3'</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:decimal(3)) eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"notation is abstract" cast as xs:NOTATION</x:label>
      <x:variable name="expr" as="xs:string">"notation is abstract" cast as xs:NOTATION</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"notation is abstract" cast as xs:NOTATION?</x:label>
      <x:variable name="expr" as="xs:string">"notation is abstract" cast as xs:NOTATION?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() cast as xs:NOTATION?</x:label>
      <x:variable name="expr" as="xs:string">() cast as xs:NOTATION?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() cast as xs:NOTATION</x:label>
      <x:variable name="expr" as="xs:string">() cast as xs:NOTATION</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NOTATION(xs:anyURI('example.com/'))</x:label>
      <x:variable name="expr" as="xs:string">xs:NOTATION(xs:anyURI('example.com/'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NOTATION(QName('example.com', 'p:foo'))</x:label>
      <x:variable name="expr" as="xs:string">xs:NOTATION(QName('example.com', 'p:foo'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">() cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">3 cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>. cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">. cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:QName("local-name") cast as xs:QName) eq xs:QName("local-name")</x:label>
      <x:variable name="expr" as="xs:string">(xs:QName("local-name") cast as xs:QName) eq xs:QName("local-name")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"example.com/" cast as xs:anyURI eq xs:anyURI('example.com/')</x:label>
      <x:variable name="expr" as="xs:string">"example.com/" cast as xs:anyURI eq xs:anyURI('example.com/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:double(3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(3.1) eq 3.1</x:label>
      <x:variable name="expr" as="xs:string">xs:double(3.1) eq 3.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(6) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double(6) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:double("INF")) eq "INF"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:double("INF")) eq "INF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:double("-INF")) eq "-INF"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:double("-INF")) eq "-INF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:float(3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(3.1) eq 3.1</x:label>
      <x:variable name="expr" as="xs:string">xs:float(3.1) eq 3.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(6) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float(6) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:float("INF")) eq "INF"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:float("INF")) eq "INF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:float("-INF")) eq "-INF"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:float("-INF")) eq "-INF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(3.1) eq 3.1</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(3.1) eq 3.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(6) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(6) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(3.1) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(3.1) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(3.1) eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(3.1) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(6) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(6) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("FFF")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("FFxF")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FFxF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0xFF")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0xFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("F")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("F")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("x")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("x")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:hexBinary("Ab08bcFFAA08b6"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:hexBinary("Ab08bcFFAA08b6"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:hexBinary("FF"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:hexBinary("FF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:hexBinary("aa"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:hexBinary("aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(xs:hexBinary(xs:hexBinary("03"))) eq 1</x:label>
      <x:variable name="expr" as="xs:string">count(xs:hexBinary(xs:hexBinary("03"))) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("aa")) eq "AA"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("aa")) eq "AA"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("0a")) eq "0A"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("0a")) eq "0A"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("a0")) eq "A0"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("a0")) eq "A0"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("a4")) eq "A4"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("a4")) eq "A4"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("c0")) eq "C0"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("c0")) eq "C0"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("fA")) eq "FA"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("fA")) eq "FA"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("10")) eq "10"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("10")) eq "10"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("031a34123b")) eq "031A34123B"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("031a34123b")) eq "031A34123B"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("03")) eq "03"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("03")) eq "03"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("0c")) eq "0C"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("0c")) eq "0C"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("0b")) eq "0B"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("0b")) eq "0B"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("3a")) eq "3A"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("3a")) eq "3A"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary("")) eq ""</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary("")) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("=aaabbcd"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("=aaabbcd"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("F==="))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("F==="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("a"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("a"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaaa===="))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaaa===="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaaa=bcd"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaaa=bcd"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaaaa======="))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaaaa======="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaaabcd"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaaabcd"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaaabcd|"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaaabcd|"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aabb=d=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aabb=d=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aabbcd=a"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aabbcd=a"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("abcdefghi"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("abcdefghi"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("0w==")) eq "0w=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("0w==")) eq "0w=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("aaa a")) eq "aaaa"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("aaa a")) eq "aaaa"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("frfhforlksid7453")) eq "frfhforlksid7453"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("frfhforlksid7453")) eq "frfhforlksid7453"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("frfhforlksid745323==")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("frfhforlksid745323==")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("03"))) eq "Aw=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("03"))) eq "Aw=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("0f3c"))) eq "Dzw="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("0f3c"))) eq "Dzw="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("12"))) eq "Eg=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("12"))) eq "Eg=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("3B"))) eq "Ow=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("3B"))) eq "Ow=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("69A69A"))) eq "aaaa"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("69A69A"))) eq "aaaa"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("F43D1234ce8f"))) eq "9D0SNM6P"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("F43D1234ce8f"))) eq "9D0SNM6P"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("f0"))) eq "8A=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("f0"))) eq "8A=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("ffaabbddcceeff0134f001d8ca9bc77899c83e6f7d"))) eq "/6q73czu/wE08AHYypvHeJnIPm99"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("ffaabbddcceeff0134f001d8ca9bc77899c83e6f7d"))) eq "/6q73czu/wE08AHYypvHeJnIPm99"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("ffff"))) eq "//8="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("ffff"))) eq "//8="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary(xs:hexBinary("ffff34564321deac9876"))) eq "//80VkMh3qyYdg=="</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary(xs:hexBinary("ffff34564321deac9876"))) eq "//80VkMh3qyYdg=="</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary(xs:base64Binary("Ow=="))) eq "3B"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary(xs:base64Binary("Ow=="))) eq "3B"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:hexBinary(xs:base64Binary("aaa a"))) eq "69A69A"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:hexBinary(xs:base64Binary("aaa a"))) eq "69A69A"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:base64Binary("")) eq ""</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:base64Binary("")) eq ""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(remove(("3B", 1.1), 2) treat as xs:string)</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(remove(("3B", 1.1), 2) treat as xs:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:decimal(remove((3e3, 1.1), 1))) eq 1.1</x:label>
      <x:variable name="expr" as="xs:string">(xs:decimal(remove((3e3, 1.1), 1))) eq 1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(remove((1, 2, 3), 1))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(remove((1, 2, 3), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("+P1Y2M123DT10H30M99S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("+P1Y2M123DT10H30M99S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M123DT10H30M99S+08:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M123DT10H30M99S+08:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("1Y2M123DT10H30M99S")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("1Y2M123DT10H30M99S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("-P")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("-P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y24MT")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y24MT")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P24H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P24H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P0010Y0010M0010DT0010H0010M0010S")) eq "P10Y10M10DT10H10M10S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P0010Y0010M0010DT0010H0010M0010S")) eq "P10Y10M10DT10H10M10S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P0Y0M0DT00H00M00.000S")) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P0Y0M0DT00H00M00.000S")) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("-PT8H23M0S")) eq "-PT8H23M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("-PT8H23M0S")) eq "-PT8H23M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("-P2000Y11M5DT0H0M0.000S")) eq "-P2000Y11M5D"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("-P2000Y11M5DT0H0M0.000S")) eq "-P2000Y11M5D"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P365D")) eq "P365D"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P365D")) eq "P365D"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P12M")) eq "P1Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P12M")) eq "P1Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P31D")) eq "P31D"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P31D")) eq "P31D"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("P3Y0M")) eq "P3Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("P3Y0M")) eq "P3Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration("-PT0S")) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration("-PT0S")) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration(xs:yearMonthDuration("P543Y456M"))) eq "P581Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration(xs:yearMonthDuration("P543Y456M"))) eq "P581Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:duration(xs:yearMonthDuration("-P543Y456M"))) eq "-P581Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:duration(xs:yearMonthDuration("-P543Y456M"))) eq "-P581Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("+P3DT10H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("+P3DT10H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT10H+08:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT10H+08:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("3DT10H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("3DT10H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("-P")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("-P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P1DT")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P1DT")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("P0DT00H00M00.000S")) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("P0DT00H00M00.000S")) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P1Y12M1D")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P1Y12M1D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P24M1D")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P24M1D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("PDT3H2M10.001S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("PDT3H2M10.001S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("P0010DT0010H0010M0010S")) eq "P10DT10H10M10S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("P0010DT0010H0010M0010S")) eq "P10DT10H10M10S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("-PT8H23M0S")) eq "-PT8H23M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("-PT8H23M0S")) eq "-PT8H23M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("-P5DT0H0M0.000S")) eq "-P5D"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("-P5DT0H0M0.000S")) eq "-P5D"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("P9876DT1M")) eq "P9876DT1M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("P9876DT1M")) eq "P9876DT1M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("PT9876H1M")) eq "P411DT12H1M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("PT9876H1M")) eq "P411DT12H1M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("PT6000M")) eq "P4DT4H"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("PT6000M")) eq "P4DT4H"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("PT1M1231.432S")) eq "PT21M31.432S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("PT1M1231.432S")) eq "PT21M31.432S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("-PT0S")) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("-PT0S")) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration(xs:yearMonthDuration("P543Y456M"))) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration(xs:yearMonthDuration("P543Y456M"))) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration(xs:yearMonthDuration("-P543Y456M"))) eq "PT0S"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration(xs:yearMonthDuration("-P543Y456M"))) eq "PT0S"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dayTimeDuration("P3D")) eq "P3D"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dayTimeDuration("P3D")) eq "P3D"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("+P20Y15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("+P20Y15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P20Y15M+08:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P20Y15M+08:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("20Y15M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("20Y15M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y24MT")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y24MT")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P731D")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P731D")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("-P3")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("-P3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("P0010Y0010M")) eq "P10Y10M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("P0010Y0010M")) eq "P10Y10M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("-P0010Y0010M")) eq "-P10Y10M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("-P0010Y0010M")) eq "-P10Y10M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("P0Y0M")) eq "P0M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("P0Y0M")) eq "P0M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("P2Y323M")) eq "P28Y11M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("P2Y323M")) eq "P28Y11M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("-P543Y456M")) eq "-P581Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("-P543Y456M")) eq "-P581Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration("-P0M")) eq "P0M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration("-P0M")) eq "P0M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P3Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P3Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P0M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P0M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P3Y"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P3Y"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:yearMonthDuration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "P0M"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:yearMonthDuration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "P0M"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("867")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("867")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("+1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("+1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("+1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("+1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("+0000")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("+0000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1111-")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1111-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1111a")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1111a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("a1111")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("a1111")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1 111")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1 111")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1111 Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1111 Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1111 Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1111 Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("02004")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("02004")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1956-10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1956-10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYear("1999-00:00")) eq "1999Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYear("1999-00:00")) eq "1999Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYear("1999+00:00")) eq "1999Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYear("1999+00:00")) eq "1999Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYear("1999Z")) eq "1999Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYear("1999Z")) eq "1999Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---321")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---321")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("--01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("--01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("E---01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("E---01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01E")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01E")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---01-")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---01-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---001")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---32")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---32")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("+--08")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("+--08")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("+--08")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("+--08")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("+---08")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("+---08")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08 Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08 Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---08-10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---08-10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gDay("---01-00:00")) eq "---01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gDay("---01-00:00")) eq "---01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gDay("---01+00:00")) eq "---01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gDay("---01+00:00")) eq "---01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gDay("---01Z")) eq "---01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gDay("---01Z")) eq "---01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("---01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("---01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("+--01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("+--01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--13")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--431")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--431")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11-")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--08-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--08-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--08+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--08+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--08+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--08+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--08-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--08-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--08-10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--08-10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonth("--01-00:00")) eq "--01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonth("--01-00:00")) eq "--01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonth("--01+00:00")) eq "--01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonth("--01+00:00")) eq "--01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonth("--01Z")) eq "--01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonth("--01Z")) eq "--01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("--1999-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("--1999-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("+1999-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("+1999-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-12-")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-12-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999--12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999--12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("02004-08")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("02004-08")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-08-10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-08-10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-01-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-01-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYearMonth("1999-01-00:00")) eq "1999-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYearMonth("1999-01-00:00")) eq "1999-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYearMonth("1999-01+00:00")) eq "1999-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYearMonth("1999-01+00:00")) eq "1999-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gYearMonth("1999-01Z")) eq "1999-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gYearMonth("1999-01Z")) eq "1999-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("-01-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("-01-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("+--01-12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("+--01-12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("01-12-")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("01-12-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01--12")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01--12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--00-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--00-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--13-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--13-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--111-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--111-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--1967-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--1967-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--02-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--02-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-08-10")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-08-10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--02-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--02-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--04-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--04-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-31")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-31")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--01-01-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--01-01-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonthDay("--01-01-00:00")) eq "--01-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonthDay("--01-01-00:00")) eq "--01-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonthDay("--01-01+00:00")) eq "--01-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonthDay("--01-01+00:00")) eq "--01-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:gMonthDay("--01-01Z")) eq "--01-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:gMonthDay("--01-01Z")) eq "--01-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--02-29+00:00") eq xs:gMonthDay("--02-29+00:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--02-29+00:00") eq xs:gMonthDay("--02-29+00:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("+2004-08-01T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("+2004-08-01T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("02004-08-01T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("02004-08-01T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("00004-08-01T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("00004-08-01T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2004-32-01T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2004-32-01T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-30T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-30T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-002-15T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-002-15T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-150T12:44:05")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-150T12:44:05")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-15T24:00:00.001")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-15T24:00:00.001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-15T24:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-15T24:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-15T25:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-15T25:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-15T21:60:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-15T21:60:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-02-15T21:01:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-02-15T21:01:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("--2002-02-15T21:01:23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("--2002-02-15T21:01:23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01T23:59:12.432-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01T23:59:12.432-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01T23:59:12.432+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01T23:59:12.432+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01T23:59:12.432+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01T23:59:12.432+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01T23:59:12.432-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01T23:59:12.432-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01T23:59:12.999-00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01T23:59:12.999-00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYear("2002Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYear("2002Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYear("2002-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYear("2002-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYearMonth("2002-11Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYearMonth("2002-11Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonth("--11Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonth("--11Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonth("--11-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonth("--11-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonthDay("--11-23Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonthDay("--11-23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gDay("---23Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gDay("---23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gDay("---23-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gDay("---23-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:date("2002-11-23Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:date("2002-11-23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:date("2002-11-23-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:date("2002-11-23-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:time("22:12:23.867Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:time(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:time("22:12:23.867Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:time("22:12:23.867-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:time(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:time("22:12:23.867-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("1999-12-01T23:59:12.999-00:00")) eq "1999-12-01T23:59:12.999Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("1999-12-01T23:59:12.999-00:00")) eq "1999-12-01T23:59:12.999Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("1999-12-01T23:59:12.432+00:00")) eq "1999-12-01T23:59:12.432Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("1999-12-01T23:59:12.432+00:00")) eq "1999-12-01T23:59:12.432Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.000")) eq "2002-02-15T21:01:23"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.000")) eq "2002-02-15T21:01:23"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.100")) eq "2002-02-15T21:01:23.1"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.100")) eq "2002-02-15T21:01:23.1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.001")) eq "2002-02-15T21:01:23.001"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.001")) eq "2002-02-15T21:01:23.001"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.010")) eq "2002-02-15T21:01:23.01"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.010")) eq "2002-02-15T21:01:23.01"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.435")) eq "2002-02-15T21:01:23.435"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.435")) eq "2002-02-15T21:01:23.435"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.11")) eq "2002-02-15T21:01:23.11"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.11")) eq "2002-02-15T21:01:23.11"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:dateTime("2002-02-15T21:01:23.110")) eq "2002-02-15T21:01:23.11"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:dateTime("2002-02-15T21:01:23.110")) eq "2002-02-15T21:01:23.11"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:dateTime("2000-08-01T12:44:05")) eq "2000-08-01T12:44:05"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:dateTime("2000-08-01T12:44:05")) eq "2000-08-01T12:44:05"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:dateTime("2004-03-31T24:00:00")) eq "2004-04-01T00:00:00"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:dateTime("2004-03-31T24:00:00")) eq "2004-04-01T00:00:00"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("24:00:00.001")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("24:00:00.001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("24:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("24:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("25:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("25:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("21:60:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("21:60:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("21:01:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("21:01:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("+21:01:50")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("+21:01:50")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("-21:01:50")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("-21:01:50")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("2002-02-15T08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("2002-02-15T08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:12.432-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:12.432-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:12.432+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:12.432+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:12.432+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:12.432+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("23:59:12.432-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("23:59:12.432-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("T23:59:12.999-03")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("T23:59:12.999-03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:time("12:44:05")) eq "12:44:05"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:time("12:44:05")) eq "12:44:05"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("23:59:12.999-00:00")) eq "23:59:12.999Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("23:59:12.999-00:00")) eq "23:59:12.999Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("23:59:12.432+00:00")) eq "23:59:12.432Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("23:59:12.432+00:00")) eq "23:59:12.432Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.000")) eq "21:01:23"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.000")) eq "21:01:23"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.100")) eq "21:01:23.1"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.100")) eq "21:01:23.1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.001")) eq "21:01:23.001"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.001")) eq "21:01:23.001"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.010")) eq "21:01:23.01"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.010")) eq "21:01:23.01"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.435")) eq "21:01:23.435"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.435")) eq "21:01:23.435"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.11")) eq "21:01:23.11"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.11")) eq "21:01:23.11"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:time("21:01:23.110")) eq "21:01:23.11"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:time("21:01:23.110")) eq "21:01:23.11"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(xs:time("24:00:00")) eq "00:00:00"</x:label>
      <x:variable name="expr" as="xs:string">string(xs:time("24:00:00")) eq "00:00:00"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("+2004-08-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("+2004-08-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("02004-08-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("02004-08-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("00004-08-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("00004-08-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-32-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-32-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2002-02-30")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2002-02-30")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2002-002-15")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2002-002-15")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2002-02-150")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2002-02-150")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("--2002-02-15")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("--2002-02-15")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2002-02-15T08:12:12")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2002-02-15T08:12:12")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-01-15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-01-15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-01+15:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-01+15:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-01+10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-01+10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1999-12-01-10:60")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1999-12-01-10:60")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("1999-12-01-03")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("1999-12-01-03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(xs:date("2002-11-23Z")) eq xs:gYear("2002Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(xs:date("2002-11-23Z")) eq xs:gYear("2002Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(xs:date("2002-11-23-13:37")) eq xs:gYear("2002-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(xs:date("2002-11-23-13:37")) eq xs:gYear("2002-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(xs:date("2002-11-23Z")) eq xs:gYearMonth("2002-11Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(xs:date("2002-11-23Z")) eq xs:gYearMonth("2002-11Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(xs:date("2002-11-23-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(xs:date("2002-11-23-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(xs:date("2002-11-23-00:00")) eq xs:gMonth("--11Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(xs:date("2002-11-23-00:00")) eq xs:gMonth("--11Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(xs:date("2002-11-23-13:37")) eq xs:gMonth("--11-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(xs:date("2002-11-23-13:37")) eq xs:gMonth("--11-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(xs:date("2002-11-23-00:00")) eq xs:gMonthDay("--11-23Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(xs:date("2002-11-23-00:00")) eq xs:gMonthDay("--11-23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(xs:date("2002-11-23-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(xs:date("2002-11-23-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(xs:date("2002-11-23-00:00")) eq xs:gDay("---23Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(xs:date("2002-11-23-00:00")) eq xs:gDay("---23Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(xs:date("2002-11-23-13:37")) eq xs:gDay("---23-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(xs:date("2002-11-23-13:37")) eq xs:gDay("---23-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime(xs:date("2002-11-23-00:00")) eq xs:dateTime("2002-11-23T00:00:00.000Z")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime(xs:date("2002-11-23-00:00")) eq xs:dateTime("2002-11-23T00:00:00.000Z")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime(xs:date("2002-11-23-13:37")) eq xs:dateTime("2002-11-23T00:00:00.000-13:37")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime(xs:date("2002-11-23-13:37")) eq xs:dateTime("2002-11-23T00:00:00.000-13:37")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("1999-12-01-00:00")) eq "1999-12-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("1999-12-01-00:00")) eq "1999-12-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("1999-12-01+00:00")) eq "1999-12-01Z"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("1999-12-01+00:00")) eq "1999-12-01Z"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" , "an arbitrary string(untypedAtomic source)" )</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" , "an arbitrary string(untypedAtomic source)" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:untypedAtomic("an arbitrary string(untypedAtomic source)")), 3, 1) instance of xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:untypedAtomic("an arbitrary string(untypedAtomic source)")), 3, 1) instance of xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ") eq xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ") eq xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("") eq xs:untypedAtomic("")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("") eq xs:untypedAtomic("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" )) eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" )) eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:untypedAtomic("an arbitrary string(untypedAtomic source)"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:untypedAtomic("an arbitrary string(untypedAtomic source)"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:untypedAtomic eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:untypedAtomic eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string()</x:label>
      <x:variable name="expr" as="xs:string">xs:string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string( "an arbitrary string" , "an arbitrary string" )</x:label>
      <x:variable name="expr" as="xs:string">xs:string( "an arbitrary string" , "an arbitrary string" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:string("an arbitrary string")), 3, 1) instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:string("an arbitrary string")), 3, 1) instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(" an arbitrary string ") eq xs:string(" an arbitrary string ")</x:label>
      <x:variable name="expr" as="xs:string">xs:string(" an arbitrary string ") eq xs:string(" an arbitrary string ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("") eq xs:string("")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("") eq xs:string("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:untypedAtomic( "an arbitrary string" )) eq xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:untypedAtomic( "an arbitrary string" )) eq xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:string("an arbitrary string"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:string("an arbitrary string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("an arbitrary string") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("an arbitrary string") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("an arbitrary string") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:string("an arbitrary string") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("an arbitrary string") cast as xs:string eq xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:string("an arbitrary string") cast as xs:string eq xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("an arbitrary string") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:string("an arbitrary string") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string("an arbitrary string") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string("an arbitrary string") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float()</x:label>
      <x:variable name="expr" as="xs:string">xs:float()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float( "3.4e5" , "3.4e5" )</x:label>
      <x:variable name="expr" as="xs:string">xs:float( "3.4e5" , "3.4e5" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:float("3.4e5")), 3, 1) instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:float("3.4e5")), 3, 1) instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(" 3.4e5 ") eq xs:float(" 3.4e5 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(" 3.4e5 ") eq xs:float(" 3.4e5 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:untypedAtomic( "3.4e5" )) eq xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:untypedAtomic( "3.4e5" )) eq xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:float("3.4e5"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:float("3.4e5"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:float eq xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:float eq xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:double ne xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:double ne xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:boolean eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:boolean eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("3.4e5") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:float("3.4e5") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("3.4e5") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("3.4e5") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double()</x:label>
      <x:variable name="expr" as="xs:string">xs:double()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double( "3.3e3" , "3.3e3" )</x:label>
      <x:variable name="expr" as="xs:string">xs:double( "3.3e3" , "3.3e3" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:double("3.3e3")), 3, 1) instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:double("3.3e3")), 3, 1) instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(" 3.3e3 ") eq xs:double(" 3.3e3 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(" 3.3e3 ") eq xs:double(" 3.3e3 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:untypedAtomic( "3.3e3" )) eq xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:untypedAtomic( "3.3e3" )) eq xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:double("3.3e3"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:double("3.3e3"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:float ne xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:float ne xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:double eq xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:double eq xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:boolean eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:boolean eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3.3e3") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3.3e3") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("3.3e3") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("3.3e3") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal()</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal( "10.01" , "10.01" )</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal( "10.01" , "10.01" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:decimal("10.01")), 3, 1) instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:decimal("10.01")), 3, 1) instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(" 10.01 ") eq xs:decimal(" 10.01 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(" 10.01 ") eq xs:decimal(" 10.01 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:untypedAtomic( "10.01" )) eq xs:decimal("10.01")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:untypedAtomic( "10.01" )) eq xs:decimal("10.01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:decimal("10.01"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:decimal("10.01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:float ne xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:float ne xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:double ne xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:double ne xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:decimal eq xs:decimal("10.01")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:decimal eq xs:decimal("10.01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:integer ne xs:integer("6789")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:integer ne xs:integer("6789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:boolean eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:boolean eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("10.01") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("10.01") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:decimal("10.01") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:decimal("10.01") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer()</x:label>
      <x:variable name="expr" as="xs:string">xs:integer()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer( "6789" , "6789" )</x:label>
      <x:variable name="expr" as="xs:string">xs:integer( "6789" , "6789" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:integer("6789")), 3, 1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:integer("6789")), 3, 1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(" 6789 ") eq xs:integer(" 6789 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(" 6789 ") eq xs:integer(" 6789 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:untypedAtomic( "6789" )) eq xs:integer("6789")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:untypedAtomic( "6789" )) eq xs:integer("6789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:integer("6789"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:integer("6789"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:float ne xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:float ne xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:double ne xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:double ne xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:decimal ne xs:decimal("10.01")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:decimal ne xs:decimal("10.01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:integer eq xs:integer("6789")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:integer eq xs:integer("6789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:boolean eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:boolean eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("6789") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("6789") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:integer("6789") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:integer("6789") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration()</x:label>
      <x:variable name="expr" as="xs:string">xs:duration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration( "P1Y2M3DT10H30M" , "P1Y2M3DT10H30M" )</x:label>
      <x:variable name="expr" as="xs:string">xs:duration( "P1Y2M3DT10H30M" , "P1Y2M3DT10H30M" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:duration("P1Y2M3DT10H30M")), 3, 1) instance of xs:duration</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:duration("P1Y2M3DT10H30M")), 3, 1) instance of xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration(" P1Y2M3DT10H30M ") eq xs:duration(" P1Y2M3DT10H30M ")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration(" P1Y2M3DT10H30M ") eq xs:duration(" P1Y2M3DT10H30M ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration(xs:untypedAtomic( "P1Y2M3DT10H30M" )) eq xs:duration("P1Y2M3DT10H30M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration(xs:untypedAtomic( "P1Y2M3DT10H30M" )) eq xs:duration("P1Y2M3DT10H30M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:duration("P1Y2M3DT10H30M"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:duration("P1Y2M3DT10H30M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:duration eq xs:duration("P1Y2M3DT10H30M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:duration eq xs:duration("P1Y2M3DT10H30M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:duration("P1Y2M3DT10H30M") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:duration("P1Y2M3DT10H30M") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:duration("P1Y2M3DT10H30M") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:duration("P1Y2M3DT10H30M") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration()</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration( "P1Y12M" , "P1Y12M" )</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration( "P1Y12M" , "P1Y12M" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:yearMonthDuration("P1Y12M")), 3, 1) instance of xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:yearMonthDuration("P1Y12M")), 3, 1) instance of xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration(" P1Y12M ") eq xs:yearMonthDuration(" P1Y12M ")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration(" P1Y12M ") eq xs:yearMonthDuration(" P1Y12M ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration(xs:untypedAtomic( "P1Y12M" )) eq xs:yearMonthDuration("P1Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration(xs:untypedAtomic( "P1Y12M" )) eq xs:yearMonthDuration("P1Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:yearMonthDuration("P1Y12M"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:yearMonthDuration("P1Y12M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:yearMonthDuration eq xs:yearMonthDuration("P1Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:yearMonthDuration eq xs:yearMonthDuration("P1Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1Y12M") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1Y12M") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:yearMonthDuration("P1Y12M") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:yearMonthDuration("P1Y12M") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration()</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration( "P3DT2H" , "P3DT2H" )</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration( "P3DT2H" , "P3DT2H" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:dayTimeDuration("P3DT2H")), 3, 1) instance of xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:dayTimeDuration("P3DT2H")), 3, 1) instance of xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration(" P3DT2H ") eq xs:dayTimeDuration(" P3DT2H ")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration(" P3DT2H ") eq xs:dayTimeDuration(" P3DT2H ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration(xs:untypedAtomic( "P3DT2H" )) eq xs:dayTimeDuration("P3DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration(xs:untypedAtomic( "P3DT2H" )) eq xs:dayTimeDuration("P3DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:dayTimeDuration("P3DT2H"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:dayTimeDuration("P3DT2H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") castable as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") castable as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") castable as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") castable as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:dayTimeDuration eq xs:dayTimeDuration("P3DT2H")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:dayTimeDuration eq xs:dayTimeDuration("P3DT2H")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") castable as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") castable as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT2H") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT2H") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dayTimeDuration("P3DT2H") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dayTimeDuration("P3DT2H") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime()</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime( "2002-10-10T12:00:00-05:00" , "2002-10-10T12:00:00-05:00" )</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime( "2002-10-10T12:00:00-05:00" , "2002-10-10T12:00:00-05:00" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:dateTime("2002-10-10T12:00:00-05:00")), 3, 1) instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:dateTime("2002-10-10T12:00:00-05:00")), 3, 1) instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime(" 2002-10-10T12:00:00-05:00 ") eq xs:dateTime(" 2002-10-10T12:00:00-05:00 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime(" 2002-10-10T12:00:00-05:00 ") eq xs:dateTime(" 2002-10-10T12:00:00-05:00 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime(xs:untypedAtomic( "2002-10-10T12:00:00-05:00" )) eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime(xs:untypedAtomic( "2002-10-10T12:00:00-05:00" )) eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dateTime eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dateTime eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:time ne xs:time("03:20:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:time ne xs:time("03:20:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:date ne xs:date("2004-10-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:date ne xs:date("2004-10-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYear ne xs:gYear("1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYear ne xs:gYear("1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gDay ne xs:gDay("---03")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gDay ne xs:gDay("---03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonth ne xs:gMonth("--11")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonth ne xs:gMonth("--11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time()</x:label>
      <x:variable name="expr" as="xs:string">xs:time()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time( "03:20:00-05:00" , "03:20:00-05:00" )</x:label>
      <x:variable name="expr" as="xs:string">xs:time( "03:20:00-05:00" , "03:20:00-05:00" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:time("03:20:00-05:00")), 3, 1) instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:time("03:20:00-05:00")), 3, 1) instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time(" 03:20:00-05:00 ") eq xs:time(" 03:20:00-05:00 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:time(" 03:20:00-05:00 ") eq xs:time(" 03:20:00-05:00 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time(xs:untypedAtomic( "03:20:00-05:00" )) eq xs:time("03:20:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time(xs:untypedAtomic( "03:20:00-05:00" )) eq xs:time("03:20:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:time("03:20:00-05:00"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:time("03:20:00-05:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:time eq xs:time("03:20:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:time eq xs:time("03:20:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") castable as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") castable as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("03:20:00-05:00") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:time("03:20:00-05:00") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:time("03:20:00-05:00") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:time("03:20:00-05:00") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date()</x:label>
      <x:variable name="expr" as="xs:string">xs:date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date( "2004-10-13" , "2004-10-13" )</x:label>
      <x:variable name="expr" as="xs:string">xs:date( "2004-10-13" , "2004-10-13" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:date("2004-10-13")), 3, 1) instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:date("2004-10-13")), 3, 1) instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(" 2004-10-13 ") eq xs:date(" 2004-10-13 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(" 2004-10-13 ") eq xs:date(" 2004-10-13 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(xs:untypedAtomic( "2004-10-13" )) eq xs:date("2004-10-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(xs:untypedAtomic( "2004-10-13" )) eq xs:date("2004-10-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:date("2004-10-13"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:date("2004-10-13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:dateTime ne xs:dateTime("2002-10-10T12:00:00-05:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:dateTime ne xs:dateTime("2002-10-10T12:00:00-05:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:date eq xs:date("2004-10-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:date eq xs:date("2004-10-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:gYear ne xs:gYear("1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:gYear ne xs:gYear("1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:gDay ne xs:gDay("---03")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:gDay ne xs:gDay("---03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:gMonth ne xs:gMonth("--11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:gMonth ne xs:gMonth("--11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2004-10-13") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2004-10-13") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:date("2004-10-13") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:date("2004-10-13") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth()</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth( "1999-11" , "1999-11" )</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth( "1999-11" , "1999-11" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:gYearMonth("1999-11")), 3, 1) instance of xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:gYearMonth("1999-11")), 3, 1) instance of xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(" 1999-11 ") eq xs:gYearMonth(" 1999-11 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(" 1999-11 ") eq xs:gYearMonth(" 1999-11 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth(xs:untypedAtomic( "1999-11" )) eq xs:gYearMonth("1999-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth(xs:untypedAtomic( "1999-11" )) eq xs:gYearMonth("1999-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:gYearMonth("1999-11"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:gYearMonth("1999-11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:gYearMonth eq xs:gYearMonth("1999-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:gYearMonth eq xs:gYearMonth("1999-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") castable as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") castable as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("1999-11") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("1999-11") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYearMonth("1999-11") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYearMonth("1999-11") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear()</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear( "1999" , "1999" )</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear( "1999" , "1999" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:gYear("1999")), 3, 1) instance of xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:gYear("1999")), 3, 1) instance of xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(" 1999 ") eq xs:gYear(" 1999 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(" 1999 ") eq xs:gYear(" 1999 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear(xs:untypedAtomic( "1999" )) eq xs:gYear("1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear(xs:untypedAtomic( "1999" )) eq xs:gYear("1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:gYear("1999"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:gYear("1999"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gYear eq xs:gYear("1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gYear eq xs:gYear("1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") castable as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") castable as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("1999") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("1999") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gYear("1999") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gYear("1999") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay()</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay( "--11-13" , "--11-13" )</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay( "--11-13" , "--11-13" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:gMonthDay("--11-13")), 3, 1) instance of xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:gMonthDay("--11-13")), 3, 1) instance of xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(" --11-13 ") eq xs:gMonthDay(" --11-13 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(" --11-13 ") eq xs:gMonthDay(" --11-13 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay(xs:untypedAtomic( "--11-13" )) eq xs:gMonthDay("--11-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay(xs:untypedAtomic( "--11-13" )) eq xs:gMonthDay("--11-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:gMonthDay("--11-13"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:gMonthDay("--11-13"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:gMonthDay eq xs:gMonthDay("--11-13")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:gMonthDay eq xs:gMonthDay("--11-13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") castable as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") castable as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonthDay("--11-13") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonthDay("--11-13") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonthDay("--11-13") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonthDay("--11-13") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay()</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay( "---03" , "---03" )</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay( "---03" , "---03" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:gDay("---03")), 3, 1) instance of xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:gDay("---03")), 3, 1) instance of xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(" ---03 ") eq xs:gDay(" ---03 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(" ---03 ") eq xs:gDay(" ---03 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay(xs:untypedAtomic( "---03" )) eq xs:gDay("---03")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay(xs:untypedAtomic( "---03" )) eq xs:gDay("---03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:gDay("---03"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:gDay("---03"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:gDay eq xs:gDay("---03")</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:gDay eq xs:gDay("---03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") castable as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") castable as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gDay("---03") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:gDay("---03") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gDay("---03") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gDay("---03") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth()</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth( "--11" , "--11" )</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth( "--11" , "--11" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:gMonth("--11")), 3, 1) instance of xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:gMonth("--11")), 3, 1) instance of xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(" --11 ") eq xs:gMonth(" --11 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(" --11 ") eq xs:gMonth(" --11 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth(xs:untypedAtomic( "--11" )) eq xs:gMonth("--11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth(xs:untypedAtomic( "--11" )) eq xs:gMonth("--11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:gMonth("--11"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:gMonth("--11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:gMonth eq xs:gMonth("--11")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:gMonth eq xs:gMonth("--11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") castable as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") castable as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--11") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--11") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:gMonth("--11") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:gMonth("--11") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean()</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean( "true" , "true" )</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean( "true" , "true" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:boolean("true")), 3, 1) instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:boolean("true")), 3, 1) instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(" true ") eq xs:boolean(" true ")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(" true ") eq xs:boolean(" true ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean(xs:untypedAtomic( "true" )) eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean(xs:untypedAtomic( "true" )) eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:boolean("true"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:boolean("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:float ne xs:float("3.4e5")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:float ne xs:float("3.4e5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:double ne xs:double("3.3e3")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:double ne xs:double("3.3e3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:decimal ne xs:decimal("10.01")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:decimal ne xs:decimal("10.01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:integer ne xs:integer("6789")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:integer ne xs:integer("6789")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:boolean eq xs:boolean("true")</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:boolean eq xs:boolean("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") castable as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") castable as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:boolean("true") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:boolean("true") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary()</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary( "aaaa" , "aaaa" )</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary( "aaaa" , "aaaa" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:base64Binary("aaaa")), 3, 1) instance of xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:base64Binary("aaaa")), 3, 1) instance of xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(" aaaa ") eq xs:base64Binary(" aaaa ")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(" aaaa ") eq xs:base64Binary(" aaaa ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("") eq xs:base64Binary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("") eq xs:base64Binary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:untypedAtomic( "aaaa" )) eq xs:base64Binary("aaaa")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:untypedAtomic( "aaaa" )) eq xs:base64Binary("aaaa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:base64Binary("aaaa"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:base64Binary("aaaa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:base64Binary eq xs:base64Binary("aaaa")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:base64Binary eq xs:base64Binary("aaaa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:hexBinary ne xs:hexBinary("0FB7")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:hexBinary ne xs:hexBinary("0FB7")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("aaaa") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("aaaa") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:base64Binary("aaaa") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:base64Binary("aaaa") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary()</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary( "0FB7" , "0FB7" )</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary( "0FB7" , "0FB7" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:hexBinary("0FB7")), 3, 1) instance of xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:hexBinary("0FB7")), 3, 1) instance of xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(" 0FB7 ") eq xs:hexBinary(" 0FB7 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(" 0FB7 ") eq xs:hexBinary(" 0FB7 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("") eq xs:hexBinary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("") eq xs:hexBinary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:untypedAtomic( "0FB7" )) eq xs:hexBinary("0FB7")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:untypedAtomic( "0FB7" )) eq xs:hexBinary("0FB7")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:hexBinary("0FB7"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:hexBinary("0FB7"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:base64Binary ne xs:base64Binary("aaaa")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:base64Binary ne xs:base64Binary("aaaa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:hexBinary eq xs:hexBinary("0FB7")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:hexBinary eq xs:hexBinary("0FB7")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") castable as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") castable as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary("0FB7") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("0FB7") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:hexBinary("0FB7") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("0FB7") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI()</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI( "http://www.example.com/an/arbitrary/URI.ext" , "http://www.example.com/an/arbitrary/URI.ext" )</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI( "http://www.example.com/an/arbitrary/URI.ext" , "http://www.example.com/an/arbitrary/URI.ext" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")), 3, 1) instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")), 3, 1) instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ") eq xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ") eq xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("") eq xs:anyURI("")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("") eq xs:anyURI("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(xs:untypedAtomic( "http://www.example.com/an/arbitrary/URI.ext" )) 
      eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(xs:untypedAtomic( "http://www.example.com/an/arbitrary/URI.ext" )) 
      eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:untypedAtomic
      ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:untypedAtomic
      ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:anyURI eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:anyURI eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName()</x:label>
      <x:variable name="expr" as="xs:string">xs:QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName( "ncname" , "ncname" )</x:label>
      <x:variable name="expr" as="xs:string">xs:QName( "ncname" , "ncname" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence(("dummy", 1.1, xs:QName("ncname")), 3, 1) instance of xs:QName</x:label>
      <x:variable name="expr" as="xs:string">subsequence(("dummy", 1.1, xs:QName("ncname")), 3, 1) instance of xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName(" ncname ") eq xs:QName(" ncname ")</x:label>
      <x:variable name="expr" as="xs:string">xs:QName(" ncname ") eq xs:QName(" ncname ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("")</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean(xs:QName("ncname"))</x:label>
      <x:variable name="expr" as="xs:string">boolean(xs:QName("ncname"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") castable as xs:untypedAtomic</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") castable as xs:untypedAtomic</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:string ne xs:string("an arbitrary string")</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:string ne xs:string("an arbitrary string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") castable as xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") castable as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:duration</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:duration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:yearMonthDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:yearMonthDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:dayTimeDuration</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:dayTimeDuration</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:gYearMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:gYearMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:gYear</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:gYear</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:gMonthDay</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:gMonthDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:gDay</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:gDay</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:gMonth</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:gMonth</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:hexBinary</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:hexBinary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") cast as xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") cast as xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:QName("ncname") castable as xs:QName</x:label>
      <x:variable name="expr" as="xs:string">xs:QName("ncname") castable as xs:QName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:QName("ncname") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:QName("ncname") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NOTATION()</x:label>
      <x:variable name="expr" as="xs:string">xs:NOTATION()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NOTATION( "prefix:local" , "prefix:local" )</x:label>
      <x:variable name="expr" as="xs:string">xs:NOTATION( "prefix:local" , "prefix:local" )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:untypedAtomic)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:untypedAtomic)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:string)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:float)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:float)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:double)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:double)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:decimal)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:decimal)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:duration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:duration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:yearMonthDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:yearMonthDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:dayTimeDuration)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:dayTimeDuration)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:dateTime)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:dateTime)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:time)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:time)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:date)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:date)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:gYearMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:gYearMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:gYear)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:gYear)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:gMonthDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:gMonthDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:gDay)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:gDay)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:gMonth)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:gMonth)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:base64Binary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:base64Binary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:hexBinary)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:hexBinary)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:anyURI)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:anyURI)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:NOTATION("prefix:local") castable as xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:NOTATION("prefix:local") castable as xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"myPrefix:ncname" cast as xs:QName eq QName("http://example.com/", "anotherPrefix:ncname")</x:label>
      <x:variable name="expr" as="xs:string">"myPrefix:ncname" cast as xs:QName eq QName("http://example.com/", "anotherPrefix:ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() cast as xs:QName?)</x:label>
      <x:variable name="expr" as="xs:string">empty(() cast as xs:QName?)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("9223372036854775807")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("9223372036854775807")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("-128")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("-128")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-9223372036854775808")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-9223372036854775808")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32767")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32767")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("127")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("127")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("18446744073709551615")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("18446744073709551615")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("4294967295")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("4294967295")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("65535")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("65535")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("255")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("255")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("999999999999999999")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("999999999999999999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:long(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:long(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:int(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:int(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:short(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:short(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("+0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("+0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("--0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("--0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("--1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("--1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("--0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("--0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("--1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("--1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("++1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("++1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("++1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("++1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("++0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("++0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("-9223372036854775809")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("-9223372036854775809")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("-2147483649")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("-2147483649")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-32769")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-32769")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("-129")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("-129")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("9223372036854775808")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("9223372036854775808")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("2147483648")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("2147483648")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("128")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("128")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("3.0")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("3.0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("- 0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("- 0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("+ 0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("+ 0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("- 3")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("- 3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("+ 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("+ 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("+ 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("+ 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("+ 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("+ 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("+ 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("+ 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("- 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("- 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("- 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("- 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("- 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("- 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("- 5")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("- 5")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("+ 0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("+ 0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("- 0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("- 0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("+ 3")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("+ 3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("-000000000")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("-000000000")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("000000001")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("000000001")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-0x1")</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-0x1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("0x9223372036854775807")</x:label>
      <x:variable name="expr" as="xs:string">xs:long("0x9223372036854775807")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("0x2147483647")</x:label>
      <x:variable name="expr" as="xs:string">xs:int("0x2147483647")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("-0x32768")</x:label>
      <x:variable name="expr" as="xs:string">xs:short("-0x32768")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("-0x128")</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("-0x128")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0x0")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0x0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("0x1")</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("0x1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(false())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(true())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcdefjhl")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcdefjhl")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("a1a")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("a1a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("a.a")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("a.a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("a*a")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("a*a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc--ab")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc--ab")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-ab-")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-ab-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-abcdefikl")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-abcdefikl")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-abcdef.k")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-abcdef.k")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-ab1efikl")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-ab1efikl")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-a-1b1efikl")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-a-1b1efikl")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-a-1-1b1efil")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-a-1-1b1efil")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc-a-1-1b01efil")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc-a-1-1b01efil")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:language(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:short("1"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:short("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(current-date())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(current-time())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(current-dateTime())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(current-dateTime())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:name("input")</x:label>
      <x:variable name="expr" as="xs:string">xs:name("input")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("1abc")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("1abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("ab\c")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("ab\c")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("ab|")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("ab|")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("a c")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("a c")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("::::")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("::::")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("_")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("_")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name(":")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name(":")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("a")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name(" a ")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name(" a ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("a1123-_--__-__--....-.--.-..12309asd")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("a1123-_--__-__--....-.--.-..12309asd")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString("")</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token("")</x:label>
      <x:variable name="expr" as="xs:string">xs:token("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN("")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("")</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NCName("")</x:label>
      <x:variable name="expr" as="xs:string">xs:NCName("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ID("")</x:label>
      <x:variable name="expr" as="xs:string">xs:ID("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:IDREF("")</x:label>
      <x:variable name="expr" as="xs:string">xs:IDREF("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ENTITY("")</x:label>
      <x:variable name="expr" as="xs:string">xs:ENTITY("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-uri-from-QName(xs:QName("ncname"))</x:label>
      <x:variable name="expr" as="xs:string">namespace-uri-from-QName(xs:QName("ncname"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN(" ::::...:SDA21455313 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN(" ::::...:SDA21455313 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN(" f f")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN(" f f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN("")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN(" ")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN(" ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN(";")</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN(";")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http:\\invalid&gt;URI\someURI")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http:\\invalid&gt;URI\someURI")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>concat("b", xs:anyURI(" "), "b")</x:label>
      <x:variable name="expr" as="xs:string">concat("b", xs:anyURI(" "), "b")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("〜")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("〜")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/file%GF.html")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/file%GF.html")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:positiveInteger("52"))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:positiveInteger("52"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:int("-1873914410"))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:int("-1873914410"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("+Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("+Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("+Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("+Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(" NaN ")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(" NaN ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(" NaN ")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(" NaN ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(" INF ")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(" INF ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(" INF ")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(" INF ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("nan")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("nan")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("nan")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("nan")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("- INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("- INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("- INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("- INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("+ INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("+ INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("+ INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("+ INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("+INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("+INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("+INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("+INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("+INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("+INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("+INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("+INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("+Inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("+Inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("nan")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("nan")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("- INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("- INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("+ INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("+ INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("+INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("+INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("INF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("INF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("NaN")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("NaN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("-INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("-INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("INF"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInteger(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInteger(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:byte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:byte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:int(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:int(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:long(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:long(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:negativeInteger(-3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:negativeInteger(-3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:nonNegativeInteger(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:nonNegativeInteger(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:nonPositiveInteger(0))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:nonPositiveInteger(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:short(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:short(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:unsignedByte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:unsignedByte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:unsignedLong(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:unsignedLong(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(xs:unsignedShort(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:double(xs:unsignedShort(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:byte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:byte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:int(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:int(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:long(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:long(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:negativeInteger(-3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:negativeInteger(-3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:nonNegativeInteger(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:nonNegativeInteger(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:nonPositiveInteger(0))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:nonPositiveInteger(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:short(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:short(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:unsignedByte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:unsignedByte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:unsignedLong(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:unsignedLong(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:unsignedShort(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:unsignedShort(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:byte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:byte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:int(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:int(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:long(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:long(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:negativeInteger(-3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:negativeInteger(-3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:nonNegativeInteger(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:nonNegativeInteger(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:nonPositiveInteger(0))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:nonPositiveInteger(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:short(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:short(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:unsignedByte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:unsignedByte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:unsignedLong(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:unsignedLong(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(xs:unsignedShort(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(xs:unsignedShort(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:byte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:byte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:int(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:int(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:long(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:long(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:negativeInteger(-3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:negativeInteger(-3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:nonNegativeInteger(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:nonNegativeInteger(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:nonPositiveInteger(0))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:nonPositiveInteger(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:short(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:short(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:unsignedByte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:unsignedByte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:unsignedLong(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:unsignedLong(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:unsignedShort(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:unsignedShort(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:byte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:byte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:int(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:int(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:long(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:long(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:negativeInteger(-3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:negativeInteger(-3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:nonNegativeInteger(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:nonNegativeInteger(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:nonPositiveInteger(0))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:nonPositiveInteger(0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:short(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:short(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:unsignedByte(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:unsignedByte(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:unsignedInt(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:unsignedInt(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:unsignedLong(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:unsignedLong(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:unsignedShort(3))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:unsignedShort(3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:normalizedString("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:normalizedString("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:token("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:token("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:language("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:language("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:NMTOKEN("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:NMTOKEN("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:Name("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:Name("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:NCName("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:NCName("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:ID("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:ID("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:IDREF("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:IDREF("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic(xs:ENTITY("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic(xs:ENTITY("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:normalizedString("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:normalizedString("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:token("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:token("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:language("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:language("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:NMTOKEN("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:NMTOKEN("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:Name("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:Name("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:NCName("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:NCName("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:ID("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:ID("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:IDREF("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:IDREF("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(xs:ENTITY("foo"))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(xs:ENTITY("foo"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("a")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("a")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("ab")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("ab")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abc")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcd")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcd")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcde")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcde")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcdef")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcdef")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcdefg")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcdefg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcdefgh")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcdefgh")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("abcdefgh-abcdefgh")</x:label>
      <x:variable name="expr" as="xs:string">xs:language("abcdefgh-abcdefgh")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(" http://example.com/ foo.xml ")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(" http://example.com/ foo.xml ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("foo://")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("foo://")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("%gg")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("%gg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(":/cut.jpg")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(":/cut.jpg")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(":/images/cut.png")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(":/images/cut.png")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(("START", 
      		string(QName("http://example.com", "prefix:localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("", "localName")), 
      		string(QName((), "localName")), 
      		"END"), " ")</x:label>
      <x:variable name="expr" as="xs:string">string-join(("START", 
      		string(QName("http://example.com", "prefix:localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("", "localName")), 
      		string(QName((), "localName")), 
      		"END"), " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join(("START", 
      	string(QName("http://example.com", 
      	"prefix:localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("", "localName")), 
      	string(QName((), "localName")), 
      	"END"), " ")</x:label>
      <x:variable name="expr" as="xs:string">string-join(("START", 
      	string(QName("http://example.com", 
      	"prefix:localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("", "localName")), 
      	string(QName((), "localName")), 
      	"END"), " ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("//server/share/dir1")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("//server/share/dir1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("-9876")</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("-9876")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:-1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:-1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:+1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:+1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11: 1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11: 1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11: 1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11: 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("-1:11:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("-1:11:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("+1:11:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("+1:11:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("+1:11:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("+1:11:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:1e0")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:1e0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:1E0")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:1E0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:1b0")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:1b0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11: 10")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11: 10")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11b33")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11b33")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:111")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:111")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11.+11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11.+11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11.-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11.-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11. 11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11. 11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("24:00:00.1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("24:00:00.1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("24:01:00")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("24:01:00")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("24:00:01")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("24:00:01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11++1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11++1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11+-1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11+-1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11+ 1:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11+ 1:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11+11:+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11+11:+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11+11:-1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11+11:-1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:11+11: 1")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:11+11: 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("1 :11:11")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("1 :11:11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("11:11:1 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:time("11:11:1 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("+2002-12-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("+2002-12-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(" 111-11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(" 111-11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date(" +11-11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date(" +11-11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111- 1-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111- 1-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("-111-11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("-111-11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("+111-11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("+111-11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-11- 1")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-11- 1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-+1-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-+1-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-11-+1")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-11-+1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111--1-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111--1-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-11--1")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-11--1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-11-1F")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-11-1F")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("0x10-11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("0x10-11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("111 -11-11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("111 -11-11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-1 -11")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-1 -11")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("1111-11-1 ")</x:label>
      <x:variable name="expr" as="xs:string">xs:date("1111-11-1 ")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-11-23")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-11-23")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYear("0040")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYear("0040")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gYearMonth("0040-01")</x:label>
      <x:variable name="expr" as="xs:string">xs:gYearMonth("0040-01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("xs:untypedAtomic"), xs:dateTime("2002-10-10T23:02:12Z"), xs:date("2002-10-10Z"), xs:time("23:02:12Z"),
                xs:duration("P12M"), xs:dayTimeDuration("PT1S"), xs:yearMonthDuration("P1M"), xs:float("3e3"), xs:double("4e4"),
                xs:decimal("2.0"), xs:integer("16"), xs:nonPositiveInteger("0"), xs:negativeInteger("-4"), xs:long("5"),
                xs:int("6"), xs:short("7"), xs:byte("8"), xs:nonNegativeInteger("9"), xs:unsignedLong("10"),
                xs:unsignedInt("11"), xs:unsignedShort("12"), xs:unsignedByte("13"), xs:positiveInteger("14"),
                xs:gYearMonth("1976-02Z"), xs:gYear("2005-12:00"), xs:gMonthDay("--12-25-14:00"),
                xs:gDay("---25-14:00"), xs:gMonth("--12-14:00"), xs:boolean("true"), xs:base64Binary("aaaa"),
                xs:hexBinary("FFFF"), xs:anyURI("http://example.com/"), xs:QName("localName"),
                xs:string("An xs:string"), xs:normalizedString("normalizedString"), xs:token("token"),
                xs:language("language"), xs:NMTOKEN("NMTOKEN"), xs:Name("Name"), xs:NCName("NCName"),
                xs:ID("ID"), xs:IDREF("IDREF"), xs:ENTITY("ENTITY")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("xs:untypedAtomic"), xs:dateTime("2002-10-10T23:02:12Z"), xs:date("2002-10-10Z"), xs:time("23:02:12Z"),
                xs:duration("P12M"), xs:dayTimeDuration("PT1S"), xs:yearMonthDuration("P1M"), xs:float("3e3"), xs:double("4e4"),
                xs:decimal("2.0"), xs:integer("16"), xs:nonPositiveInteger("0"), xs:negativeInteger("-4"), xs:long("5"),
                xs:int("6"), xs:short("7"), xs:byte("8"), xs:nonNegativeInteger("9"), xs:unsignedLong("10"),
                xs:unsignedInt("11"), xs:unsignedShort("12"), xs:unsignedByte("13"), xs:positiveInteger("14"),
                xs:gYearMonth("1976-02Z"), xs:gYear("2005-12:00"), xs:gMonthDay("--12-25-14:00"),
                xs:gDay("---25-14:00"), xs:gMonth("--12-14:00"), xs:boolean("true"), xs:base64Binary("aaaa"),
                xs:hexBinary("FFFF"), xs:anyURI("http://example.com/"), xs:QName("localName"),
                xs:string("An xs:string"), xs:normalizedString("normalizedString"), xs:token("token"),
                xs:language("language"), xs:NMTOKEN("NMTOKEN"), xs:Name("Name"), xs:NCName("NCName"),
                xs:ID("ID"), xs:IDREF("IDREF"), xs:ENTITY("ENTITY")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"inf" cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"inf" cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"inF" cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"inF" cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-inF" cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"-inF" cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"inF " cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"inF " cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"-inF " cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"-inF " cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"naN" cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"naN" cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>" naN" cast as xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">" naN" cast as xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(QName("http://example.com/", "p:localName"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(QName("http://example.com/", "p:localName"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:base64Binary("1111"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:base64Binary("1111"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:hexBinary("11"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:hexBinary("11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:gMonth("--10"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:gMonth("--10"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:gDay("---11"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:gDay("---11"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:gMonthDay("--10-15"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:gMonthDay("--10-15"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:gYear("4004"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:gYear("4004"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:integer("543"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:integer("543"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:decimal("543"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:decimal("543"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:double("543"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:double("543"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:float("543"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:float("543"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(current-time())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(current-date())</x:label>
      <x:variable name="expr" as="xs:string">xs:language(current-date())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:duration("P1M"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:duration("P1M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:dayTimeDuration("P1DT4H"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:dayTimeDuration("P1DT4H"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language(xs:yearMonthDuration("P4Y5M"))</x:label>
      <x:variable name="expr" as="xs:string">xs:language(xs:yearMonthDuration("P4Y5M"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NCName(codepoints-to-string((3648, 3592, 3617, 3626, 3660)))</x:label>
      <x:variable name="expr" as="xs:string">xs:NCName(codepoints-to-string((3648, 3592, 3617, 3626, 3660)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI(":/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(":/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:gMonth("--02--")</x:label>
      <x:variable name="expr" as="xs:string">xs:gMonth("--02--")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("inF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("inF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("inF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("inF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("inF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("inF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("inf")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("inf")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("-InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("-InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("-InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("-InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("-InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("-InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("+InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("+InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("+InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("+InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("+InF")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("+InF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("naN")</x:label>
      <x:variable name="expr" as="xs:string">xs:float("naN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("naN")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("naN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal("naN")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal("naN")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/Comment.xml">
    <x:scenario>
      <x:label>(: Name: XQueryComment002 :)
(: Description: Simple use case for XQuery comments :)




(: This is a comment :)
(//fs:Folder)[1]/fs:File[1]/fs:FileName</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment002 :)
(: Description: Simple use case for XQuery comments :)




(: This is a comment :)
(//fs:Folder)[1]/fs:File[1]/fs:FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment009 :)
(: Description: Comments inside a conditional expression :)



if (:test (: yada (: neato :) :) :) (/fs:MyComputer) 
	then (: yada :) "true"
	else "false"</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment009 :)
(: Description: Comments inside a conditional expression :)



if (:test (: yada (: neato :) :) :) (/fs:MyComputer) 
	then (: yada :) "true"
	else "false"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment010 :)
(: Description: Comments inside a conditional expression :)
if (: comment :) 
  ( //fs:Folder[1]/fs:FolderName/text() = "Folder00000000000" ) 
then (: this is the then case :) ( true() )
else (: this is the else case :) ( false() )</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment010 :)
(: Description: Comments inside a conditional expression :)
if (: comment :) 
  ( //fs:Folder[1]/fs:FolderName/text() = "Folder00000000000" ) 
then (: this is the then case :) ( true() )
else (: this is the else case :) ( false() )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment011 :)
(: Description: Comments inside a conditional expression :)



if (:test:)(:t2:)(:t3:) (/fs:MyComputer) 
	then "true"
	else "false"</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment011 :)
(: Description: Comments inside a conditional expression :)



if (:test:)(:t2:)(:t3:) (/fs:MyComputer) 
	then "true"
	else "false"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment012 :)
(: Description: Comments that looks like a function call :)


/south(: test :)</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment012 :)
(: Description: Comments that looks like a function call :)


/south(: test :)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment013 :)
(: Description: Comments inside a sequence expression :)


(1, 2, (: comment :) 3, 4)</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment013 :)
(: Description: Comments inside a sequence expression :)


(1, 2, (: comment :) 3, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(: Name: XQueryComment014 :)
(: Description: Comments inside a cast expression :)


"10" cast as (: type comment :) xs:integer ?</x:label>
      <x:variable name="expr" as="xs:string">(: Name: XQueryComment014 :)
(: Description: Comments inside a cast expression :)


"10" cast as (: type comment :) xs:integer ?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-1                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `(3(: comment inbetween :)- 1) eq 2`. :)
(:*******************************************************:)
(3(: comment inbetween :)- 1) eq 2</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-1                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `(3(: comment inbetween :)- 1) eq 2`. :)
(:*******************************************************:)
(3(: comment inbetween :)- 1) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-2                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: a (: nested :) comment :) eq 1`. :)
(:*******************************************************:)
1 (: a (: nested :) comment :) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-2                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: a (: nested :) comment :) eq 1`. :)
(:*******************************************************:)
1 (: a (: nested :) comment :) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-3                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: comment (: inside :) comment :) eq 1`. :)
(:*******************************************************:)
1 (: comment (: inside :) comment :) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-3                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: comment (: inside :) comment :) eq 1`. :)
(:*******************************************************:)
1 (: comment (: inside :) comment :) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-4                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Comparison of two string literals, whose content reminds of comments. :)
(:*******************************************************:)
"reminds of a comment :)" eq
		    "reminds of a comment :)"</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-4                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Comparison of two string literals, whose content reminds of comments. :)
(:*******************************************************:)
"reminds of a comment :)" eq
		    "reminds of a comment :)"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-5                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `5 instance (: strange place for a comment :) of item()`. :)
(:*******************************************************:)
5 instance (: strange place for a comment :) of item()</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-5                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `5 instance (: strange place for a comment :) of item()`. :)
(:*******************************************************:)
5 instance (: strange place for a comment :) of item()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-6                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: simple comment :) eq 1`. :)
(:*******************************************************:)
1 (: simple comment :) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-6                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: simple comment :) eq 1`. :)
(:*******************************************************:)
1 (: simple comment :) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-7                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: comment (: inside :) NEW LINE comment :) eq 1`. :)
(:*******************************************************:)
1 (: comment (: inside :)
				NEW LINE comment :) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-7                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `1 (: comment (: inside :) NEW LINE comment :) eq 1`. :)
(:*******************************************************:)
1 (: comment (: inside :)
				NEW LINE comment :) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-8                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `(: "recursive comments must be balanced, this one is not :)" :)`. :)
(:*******************************************************:)
(: "recursive comments must be 
	balanced, this one is not :)" :)</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-8                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `(: "recursive comments must be balanced, this one is not :)" :)`. :)
(:*******************************************************:)
(: "recursive comments must be 
	balanced, this one is not :)" :)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-9                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment inbetween the 'eq' operator and a number literal. :)
(:*******************************************************:)
1 eq (::)1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-9                               :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment inbetween the 'eq' operator and a number literal. :)
(:*******************************************************:)
1 eq (::)1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-10                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment at the very beginning of an expression. :)
(:*******************************************************:)
(::) 1 eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-10                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment at the very beginning of an expression. :)
(:*******************************************************:)
(::) 1 eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-11                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment after a function's paranteses. :)
(:*******************************************************:)
true()(::)</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-11                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: An empty comment after a function's paranteses. :)
(:*******************************************************:)
true()(::)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-12                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A for loop with a comment inbetween.         :)
(:*******************************************************:)
for (: set up loop :) $i in 3 return $i eq 3</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-12                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A for loop with a comment inbetween.         :)
(:*******************************************************:)
for (: set up loop :) $i in 3 return $i eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-13                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `if((: comment inbetween :)) then 1 else 1`. :)
(:*******************************************************:)
if((: comment inbetween :)) then 1 else 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-13                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test whose essence is: `if((: comment inbetween :)) then 1 else 1`. :)
(:*******************************************************:)
if((: comment inbetween :)) then 1 else 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-14                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A syntactically invalid comment that never ends. :)
(:*******************************************************:)
1(: this comment does not end:</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-14                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A syntactically invalid comment that never ends. :)
(:*******************************************************:)
1(: this comment does not end:</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-15                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A comment inside a comment that isn't terminated. :)
(:*******************************************************:)
1(: content (: this comment does not end :)</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-15                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A comment inside a comment that isn't terminated. :)
(:*******************************************************:)
1(: content (: this comment does not end :)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-16                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A comment inside a comment that does not start properly. :)
(:*******************************************************:)
1(: content this comment does not start properly :) :)</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-16                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A comment inside a comment that does not start properly. :)
(:*******************************************************:)
1(: content this comment does not start properly :) :)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-17                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Colons and paranteses appearing freely in comment content. :)
(:*******************************************************:)
1(: ((( : )) ))ladl:  :(): ()()(dahsi ()()( dad: ) :) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-17                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Colons and paranteses appearing freely in comment content. :)
(:*******************************************************:)
1(: ((( : )) ))ladl:  :(): ()()(dahsi ()()( dad: ) :) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-18                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Three comments appearing serially inside a comment. :)
(:*******************************************************:)
1(: (:one comment:) content (:another comment:) content (:a third:):)
			   eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-18                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: Three comments appearing serially inside a comment. :)
(:*******************************************************:)
1(: (:one comment:) content (:another comment:) content (:a third:):)
			   eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-19                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test stressing many nested comments.       :)
(:*******************************************************:)
1(:(:(:(:(:(:(:(::):):):):):):):) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-19                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A test stressing many nested comments.       :)
(:*******************************************************:)
1(:(:(:(:(:(:(:(::):):):):):):):) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(:*******************************************************:)
(: Test: K-XQueryComment-20                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A syntactically invalid comment that doesn't properly start. :)
(:*******************************************************:)
: :) 1</x:label>
      <x:variable name="expr" as="xs:string">(:*******************************************************:)
(: Test: K-XQueryComment-20                              :)
(: Written by: Frans Englich                             :)
(: Date: 2007-11-22T11:31:22+01:00                       :)
(: Purpose: A syntactically invalid comment that doesn't properly start. :)
(:*******************************************************:)
: :) 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/ContextItemExpr.xml">
    <x:scenario>
      <x:label>for $var in /works/employee[1] return $var/xs:string(exactly-one(empnum))</x:label>
      <x:variable name="expr" as="xs:string">for $var in /works/employee[1] return $var/xs:string(exactly-one(empnum))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/xs:integer(exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/xs:integer(exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/xs:decimal(exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/xs:decimal(exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in /works/employee[1] return $var/xs:float(exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in /works/employee[1] return $var/xs:float(exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/xs:double(exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/xs:double(exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/xs:boolean(exactly-one(hours) - 39)</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/xs:boolean(exactly-one(hours) - 39)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:not(xs:boolean(exactly-one(hours) - 39))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:not(xs:boolean(exactly-one(hours) - 39))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:sum((hours,hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:sum((hours,hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) + exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) + exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) - exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) - exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) * exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) * exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) mod exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) mod exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) div exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) div exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(exactly-one(hours) idiv exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(exactly-one(hours) idiv exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(xs:boolean(exactly-one(hours) - 39) and xs:boolean(exactly-one(hours) - 39))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(xs:boolean(exactly-one(hours) - 39) and xs:boolean(exactly-one(hours) - 39))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/(xs:boolean(exactly-one(hours) - 39) or xs:boolean(exactly-one(hours) - 39))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/(xs:boolean(exactly-one(hours) - 39) or xs:boolean(exactly-one(hours) - 39))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:string-length(exactly-one(hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:string-length(exactly-one(hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:avg((hours,hours,hours))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:avg((hours,hours,hours))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:min((hours,hours,22))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:min((hours,hours,22))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (/works/employee[1]) return $var/fn:max((hours,exactly-one(hours) + 1,22))</x:label>
      <x:variable name="expr" as="xs:string">for $var in (/works/employee[1]) return $var/fn:max((hours,exactly-one(hours) + 1,22))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>./works/employee[1]</x:label>
      <x:variable name="expr" as="xs:string">./works/employee[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>./works/employee[1]</x:label>
      <x:variable name="expr" as="xs:string">./works/employee[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>works/employee[1]</x:label>
      <x:variable name="expr" as="xs:string">works/employee[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("A","B","C")[xs:string(.)]</x:label>
      <x:variable name="expr" as="xs:string">("A","B","C")[xs:string(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[xs:integer(.)]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[xs:integer(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[xs:decimal(.)]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[xs:decimal(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[xs:float(.)]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[xs:float(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[xs:double(.)]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[xs:double(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false(),fn:true())[xs:boolean(.)]</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false(),fn:true())[xs:boolean(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:false(),fn:true(),fn:false())[fn:not(xs:boolean(.))]</x:label>
      <x:variable name="expr" as="xs:string">(fn:false(),fn:true(),fn:false())[fn:not(xs:boolean(.))]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(((),(),())[xs:string(.)])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(((),(),())[xs:string(.)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[(. + .) gt 1]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[(. + .) gt 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3,4,5)[(xs:integer(5) - xs:integer(.)) gt 1]</x:label>
      <x:variable name="expr" as="xs:string">(3,4,5)[(xs:integer(5) - xs:integer(.)) gt 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3,4,5)[(xs:integer(.) * xs:integer(.)) gt 2]</x:label>
      <x:variable name="expr" as="xs:string">(3,4,5)[(xs:integer(.) * xs:integer(.)) gt 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(6,10,14)[(xs:integer(.) mod xs:integer(3)) gt 1]</x:label>
      <x:variable name="expr" as="xs:string">(6,10,14)[(xs:integer(.) mod xs:integer(3)) gt 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(6,10,14)[(xs:integer(.) div xs:integer(3)) gt 2]</x:label>
      <x:variable name="expr" as="xs:string">(6,10,14)[(xs:integer(.) div xs:integer(3)) gt 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(6,10,14)[(xs:integer(.) idiv xs:integer(3)) gt 2]</x:label>
      <x:variable name="expr" as="xs:string">(6,10,14)[(xs:integer(.) idiv xs:integer(3)) gt 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false(),fn:true())[xs:boolean(.) and xs:boolean(.)]</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false(),fn:true())[xs:boolean(.) and xs:boolean(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false(),fn:true())[xs:boolean(.) or xs:boolean(.)]</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false(),fn:true())[xs:boolean(.) or xs:boolean(.)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("ABC", "DEF","A")[fn:string-length(.) gt 2]</x:label>
      <x:variable name="expr" as="xs:string">("ABC", "DEF","A")[fn:string-length(.) gt 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[fn:avg((.,2,3)) gt 2]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[fn:avg((.,2,3)) gt 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[fn:min((.,2)) eq 2]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[fn:min((.,2)) eq 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2,3)[fn:min((.,3)) eq 3]</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3)[fn:min((.,3)) eq 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/DirectConstructor.xml">
    <x:scenario>
      <x:label>&gt;</x:label>
      <x:variable name="expr" as="xs:string">&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/&gt;</x:label>
      <x:variable name="expr" as="xs:string">/&gt;</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/DirElemContent.xml">
    <x:scenario>
      <x:label>3}</x:label>
      <x:variable name="expr" as="xs:string">3}</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" }</x:label>
      <x:variable name="expr" as="xs:string">"a string" }</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>}</x:label>
      <x:variable name="expr" as="xs:string">}</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>}</x:label>
      <x:variable name="expr" as="xs:string">}</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/EQName.xml">
    <x:scenario>
      <x:label>(//Q{http://www.example.com/AuctionWatch}Start)[1]/namespace::Q{}*/string()</x:label>
      <x:variable name="expr" as="xs:string">(//Q{http://www.example.com/AuctionWatch}Start)[1]/namespace::Q{}*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//Q{http://www.example.com/AuctionWatch}Start)[1]/namespace::Q{  
         
         }*/string()</x:label>
      <x:variable name="expr" as="xs:string">(//Q{http://www.example.com/AuctionWatch}Start)[1]/namespace::Q{  
         
         }*/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>Q{http://www.w3.org/2005/xpath-functions/math}pi()</x:label>
      <x:variable name="expr" as="xs:string">Q{http://www.w3.org/2005/xpath-functions/math}pi()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>Q{&amp;#x7D;http://www.w3.org/2005/xpath-functions/math}pi()</x:label>
      <x:variable name="expr" as="xs:string">Q{&amp;#x7D;http://www.w3.org/2005/xpath-functions/math}pi()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/ForClause.xml">
    <x:scenario>
      <x:label>for $a in ("test", "test1", "test2") return $a</x:label>
      <x:variable name="expr" as="xs:string">for $a in ("test", "test1", "test2") return $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $f in /MyComputer//File[@creation_date="08/06/00"]/SecurityObject/Denies/Deny[security/right] return $f/../../@name/string()</x:label>
      <x:variable name="expr" as="xs:string">for $f in /MyComputer//File[@creation_date="08/06/00"]/SecurityObject/Denies/Deny[security/right] return $f/../../@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $AaBbCc.-_Dd in /MyComputer/Drive1/Folder return $AaBbCc.-_Dd/FolderName</x:label>
      <x:variable name="expr" as="xs:string">for $AaBbCc.-_Dd in /MyComputer/Drive1/Folder return $AaBbCc.-_Dd/FolderName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in $a/* return $a</x:label>
      <x:variable name="expr" as="xs:string">for $a in $a/* return $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $fileName in for $file in //Folder/File return $file/FileName return string( $fileName )</x:label>
      <x:variable name="expr" as="xs:string">for $fileName in for $file in //Folder/File return $file/FileName return string( $fileName )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $fileName in //File/FileName, 
            $folderName in //Folder[contains(description, 'fren')]/FolderName 
        return ($folderName, $fileName)</x:label>
      <x:variable name="expr" as="xs:string">for $fileName in //File/FileName, 
            $folderName in //Folder[contains(description, 'fren')]/FolderName 
        return ($folderName, $fileName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $fileName in //File/FileName for $folderName in //Folder/FolderName return $folderName return $fileName</x:label>
      <x:variable name="expr" as="xs:string">for $fileName in //File/FileName for $folderName in //Folder/FolderName return $folderName return $fileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in //Folder return for $file in $folder/File return string( $file/FileName[1] )</x:label>
      <x:variable name="expr" as="xs:string">for $folder in //Folder return for $file in $folder/File return string( $file/FileName[1] )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in //Folder, $index in (1, 2, 3) return $folder/File[$index]/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $folder in //Folder, $index in (1, 2, 3) return $folder/File[$index]/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in //Folder return $folder return $folder</x:label>
      <x:variable name="expr" as="xs:string">for $folder in //Folder return $folder return $folder</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in in .//Folder return $folder</x:label>
      <x:variable name="expr" as="xs:string">for $folder in in .//Folder return $folder</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for for $folder in //Folder return $folder</x:label>
      <x:variable name="expr" as="xs:string">for for $folder in //Folder return $folder</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in //Folder, $file in $folder/File, return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $folder in //Folder, $file in $folder/File, return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $i in (1, 2), $j in (3, 4) return ($i, $j)</x:label>
      <x:variable name="expr" as="xs:string">for $i in (1, 2), $j in (3, 4) return ($i, $j)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File, $file in (//Folder)[2]/File return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File, $file in (//Folder)[2]/File return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file (//Folder)[1]/File return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $file (//Folder)[1]/File return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $var in (1,2), $var in (2,2) return $var * $var</x:label>
      <x:variable name="expr" as="xs:string">for $var in (1,2), $var in (2,2) return $var * $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in 1, $bar in 2, $moo in 3, return 4</x:label>
      <x:variable name="expr" as="xs:string">for $foo in 1, $bar in 2, $moo in 3, return 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for in 1 return 4</x:label>
      <x:variable name="expr" as="xs:string">for in 1 return 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for return 4</x:label>
      <x:variable name="expr" as="xs:string">for return 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in 1 satisfies 4</x:label>
      <x:variable name="expr" as="xs:string">for $a in 1 satisfies 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(1 to 5, (for $i in (1,2,3,4,5) return $i))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(1 to 5, (for $i in (1,2,3,4,5) return $i))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (for $foo in 1 return 3)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (for $foo in 1 return 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (for $foo in 1 return $foo)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (for $foo in 1 return $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (for $foo in 1 return $foo + 1)</x:label>
      <x:variable name="expr" as="xs:string">2 eq (for $foo in 1 return $foo + 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (for $foo in 1 return for $foo in 3 return $foo)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (for $foo in 1 return for $foo in 3 return $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((for $var in (1, 2, 3) return $var), (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((for $var in (1, 2, 3) return $var), (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((2, 2), (for $foo in (1, 1) return 1 + $foo))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((2, 2), (for $foo in (1, 1) return 1 + $foo))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 eq (for $foo in 1, $bar in 2, $moo in 3 return 4)</x:label>
      <x:variable name="expr" as="xs:string">4 eq (for $foo in 1, $bar in 2, $moo in 3 return 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (for $foo in 1 return for $bar in 2 return $bar + $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (for $foo in 1, $foo in 3 return $foo)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (for $foo in 1, $foo in 3 return $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>8 eq (for $foo in 1, $foo in 3, $moo in 5 return $moo + $foo)</x:label>
      <x:variable name="expr" as="xs:string">8 eq (for $foo in 1, $foo in 3, $moo in 5 return $moo + $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 eq (for $foo in 1, $foo in 3 return $foo + $foo)</x:label>
      <x:variable name="expr" as="xs:string">6 eq (for $foo in 1, $foo in 3 return $foo + $foo)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $var in () return current-time())</x:label>
      <x:variable name="expr" as="xs:string">empty(for $var in () return current-time())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $var in () return 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(for $var in () return 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((for $var in () return current-time()))</x:label>
      <x:variable name="expr" as="xs:string">empty((for $var in () return current-time()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((for $var in () return 1) eq 1)</x:label>
      <x:variable name="expr" as="xs:string">empty((for $var in () return 1) eq 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(for $var in subsequence((current-time(), 1), 4) return 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(for $var in subsequence((current-time(), 1), 4) return 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(remove(for $var in (current-time(), 2, 3, 4) return $var, 1), (2, 3, 4))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(remove(for $var in (current-time(), 2, 3, 4) return $var, 1), (2, 3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(for $fn:name in (1, 1) return $fn:name) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(for $fn:name in (1, 1) return $fn:name) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(for $xs:name in (1, 1) return $xs:name) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(for $xs:name in (1, 1) return $xs:name) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">$NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$PREFIXNOTEXIST:NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">$PREFIXNOTEXIST:NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$xs:NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">$xs:NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + $NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">1 + $NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + $prefix:NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">1 + $prefix:NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + $xs:NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">1 + $xs:NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$NOTEXIST + 1</x:label>
      <x:variable name="expr" as="xs:string">$NOTEXIST + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$PREFIXNOTEXIST:NOTEXIST + 1</x:label>
      <x:variable name="expr" as="xs:string">$PREFIXNOTEXIST:NOTEXIST + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>$xs:NOTEXIST + 1</x:label>
      <x:variable name="expr" as="xs:string">$xs:NOTEXIST + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in 1 return $NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">for $foo in 1 return $NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in (1, 2, $foo) return 1</x:label>
      <x:variable name="expr" as="xs:string">for $foo in (1, 2, $foo) return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in (1, $foo, 3) return 1</x:label>
      <x:variable name="expr" as="xs:string">for $foo in (1, $foo, 3) return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in ($foo, 2, 3) return 1</x:label>
      <x:variable name="expr" as="xs:string">for $foo in ($foo, 2, 3) return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in $foo return 1</x:label>
      <x:variable name="expr" as="xs:string">for $foo in $foo return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in 1 return $bar + (for $bar in 2 return $bar)</x:label>
      <x:variable name="expr" as="xs:string">for $foo in 1 return $bar + (for $bar in 2 return $bar)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in (1, 2, 3), $b in (1, 2, 3, $b) return $a, $b</x:label>
      <x:variable name="expr" as="xs:string">for $a in (1, 2, 3), $b in (1, 2, 3, $b) return $a, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $a</x:label>
      <x:variable name="expr" as="xs:string">for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in (1, 2) return 1, $a</x:label>
      <x:variable name="expr" as="xs:string">for $a in (1, 2) return 1, $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $b</x:label>
      <x:variable name="expr" as="xs:string">for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $c</x:label>
      <x:variable name="expr" as="xs:string">for $a in (1, 2), $b in (1, 2), $c in (1, 2) return 1, $c</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in "foo" return 1 + $foo</x:label>
      <x:variable name="expr" as="xs:string">for $foo in "foo" return 1 + $foo</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $foo in ("a string", "another one") return 1 + subsequence($foo, 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">for $foo in ("a string", "another one") return 1 + subsequence($foo, 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (for $a in 1 return $a)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (for $a in 1 return $a)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((for $fo in trace((1, 2, 3), "msg") return $fo), (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((for $fo in trace((1, 2, 3), "msg") return $fo), (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (for $a in 1 return $a)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (for $a in 1 return $a)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (for $xs:a in 1 return $xs:a)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (for $xs:a in 1 return $xs:a)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(for $i in (1, 2, current-time()) return ($i, $i)) eq 6</x:label>
      <x:variable name="expr" as="xs:string">count(for $i in (1, 2, current-time()) return ($i, $i)) eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 6 or count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 4</x:label>
      <x:variable name="expr" as="xs:string">count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 6 or count(for $i in (1, 2, timezone-from-time(current-time())) return ($i, $i)) eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>FOR $i IN (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">FOR $i IN (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $d in person return $d</x:label>
      <x:variable name="expr" as="xs:string">for $d in person return $d</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $n in node return 1</x:label>
      <x:variable name="expr" as="xs:string">for $n in node return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $n in document return 1</x:label>
      <x:variable name="expr" as="xs:string">for $n in document return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $n in attribute return 1</x:label>
      <x:variable name="expr" as="xs:string">for $n in attribute return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/FunctionCall.xml">
    <x:scenario>
      <x:label>function($in as xs:decimal*) as xs:decimal {sum($in, 0.0)}(xs:NMTOKENS('1 1.2 1.3 1.4')!xs:untypedAtomic(.))</x:label>
      <x:variable name="expr" as="xs:string">function($in as xs:decimal*) as xs:decimal {sum($in, 0.0)}(xs:NMTOKENS('1 1.2 1.3 1.4')!xs:untypedAtomic(.))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(xs:NMTOKENS('48 49 50 51')!xs:untypedAtomic(.))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(xs:NMTOKENS('48 49 50 51')!xs:untypedAtomic(.))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string(xs:NMTOKENS('30 31 32 33'))</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string(xs:NMTOKENS('30 31 32 33'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>function($in as xs:double*) as xs:double {sum($in, 0.0e0)}((1, xs:float(0.25), xs:decimal(0.5)))</x:label>
      <x:variable name="expr" as="xs:string">function($in as xs:double*) as xs:double {sum($in, 0.0e0)}((1, xs:float(0.25), xs:decimal(0.5)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>function($in as xs:string*) as xs:string {string-join($in, ';')}((xs:anyURI('http://one.com/'), xs:anyURI('http://two.com/')))</x:label>
      <x:variable name="expr" as="xs:string">function($in as xs:string*) as xs:string {string-join($in, ';')}((xs:anyURI('http://one.com/'), xs:anyURI('http://two.com/')))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>function($in as xs:NMTOKENS) as item()* {$in}(xs:untypedAtomic('abc def'))</x:label>
      <x:variable name="expr" as="xs:string">function($in as xs:NMTOKENS) as item()* {$in}(xs:untypedAtomic('abc def'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>func-does-not-exist(1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">func-does-not-exist(1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:func-does-not-exist(1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">fn:func-does-not-exist(1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:func-does-not-exist(1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">xs:func-does-not-exist(1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>prefix-does-not-exist:func-does-not-exist(1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">prefix-does-not-exist:func-does-not-exist(1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>f:f:()</x:label>
      <x:variable name="expr" as="xs:string">f:f:()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>:f()</x:label>
      <x:variable name="expr" as="xs:string">:f()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>:f()</x:label>
      <x:variable name="expr" as="xs:string">:f()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1fd()</x:label>
      <x:variable name="expr" as="xs:string">1fd()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>p:f:lname()</x:label>
      <x:variable name="expr" as="xs:string">p:f:lname()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document("example.com/file.ext")</x:label>
      <x:variable name="expr" as="xs:string">document("example.com/file.ext")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>key('func', "a value")</x:label>
      <x:variable name="expr" as="xs:string">key('func', "a value")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]"), "[0-9]{4}-[0-9]{2}-[0-9]{2}")</x:label>
      <x:variable name="expr" as="xs:string">matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]"), "[0-9]{4}-[0-9]{2}-[0-9]{2}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]", (), (), ()), "....-..-..")</x:label>
      <x:variable name="expr" as="xs:string">matches(format-dateTime(current-dateTime(), "[Y0001]-[M01]-[D01]", (), (), ()), "....-..-..")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]"), "[0-1][0-9]/[0-3][0-9]/[0-9]{4} at [0-9]{2}:[0-9]{2}:[0-9]{2}")</x:label>
      <x:variable name="expr" as="xs:string">matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]"), "[0-1][0-9]/[0-3][0-9]/[0-9]{4} at [0-9]{2}:[0-9]{2}:[0-9]{2}")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]", (), (), ()), "../../.... at ..:..:..")</x:label>
      <x:variable name="expr" as="xs:string">matches(format-dateTime(current-dateTime(), "[M01]/[D01]/[Y0001] at [H01]:[m01]:[s01]", (), (), ()), "../../.... at ..:..:..")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current()</x:label>
      <x:variable name="expr" as="xs:string">current()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unparsed-entity-uri("example.com/file.ext")</x:label>
      <x:variable name="expr" as="xs:string">unparsed-entity-uri("example.com/file.ext")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unparsed-entity-public-id("entity")</x:label>
      <x:variable name="expr" as="xs:string">unparsed-entity-public-id("entity")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>system-property("xsl:vendor")</x:label>
      <x:variable name="expr" as="xs:string">system-property("xsl:vendor")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:escape-uri("http:/example.com/")</x:label>
      <x:variable name="expr" as="xs:string">fn:escape-uri("http:/example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:sub-sequence("http:/example.com/", 1, 1)</x:label>
      <x:variable name="expr" as="xs:string">fn:sub-sequence("http:/example.com/", 1, 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-grouping-key()</x:label>
      <x:variable name="expr" as="xs:string">current-grouping-key()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current()</x:label>
      <x:variable name="expr" as="xs:string">current()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unparsed-entity-uri("str")</x:label>
      <x:variable name="expr" as="xs:string">unparsed-entity-uri("str")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unparsed-entity-public-id("str")</x:label>
      <x:variable name="expr" as="xs:string">unparsed-entity-public-id("str")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>system-property("property")</x:label>
      <x:variable name="expr" as="xs:string">system-property("property")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>key("id")</x:label>
      <x:variable name="expr" as="xs:string">key("id")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-join( (xs:anyURI('http://www.microsoft.com'), xs:anyURI('http://www.google.com/')), ' ')</x:label>
      <x:variable name="expr" as="xs:string">string-join( (xs:anyURI('http://www.microsoft.com'), xs:anyURI('http://www.google.com/')), ' ')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>namespace-node(1)</x:label>
      <x:variable name="expr" as="xs:string">namespace-node(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.eq.xml">
    <x:scenario>
      <x:label>() = ()</x:label>
      <x:variable name="expr" as="xs:string">() = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = 10000</x:label>
      <x:variable name="expr" as="xs:string">() = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = (50000)</x:label>
      <x:variable name="expr" as="xs:string">() = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = ()</x:label>
      <x:variable name="expr" as="xs:string">10000 = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = ()</x:label>
      <x:variable name="expr" as="xs:string">10000 = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) = (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) = 
         ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) = 
         ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) =
         ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) =
         ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) = ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() = ())</x:label>
      <x:variable name="expr" as="xs:string">not(() = ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((() = ()))</x:label>
      <x:variable name="expr" as="xs:string">not((() = ()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((() = 1))</x:label>
      <x:variable name="expr" as="xs:string">not((() = 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 = ())</x:label>
      <x:variable name="expr" as="xs:string">not(1 = ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 == 1</x:label>
      <x:variable name="expr" as="xs:string">1 == 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2) = (2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2) = (2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(2, 3) = (3, 4)</x:label>
      <x:variable name="expr" as="xs:string">(2, 3) = (3, 4)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2) = (3, 4))</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2) = (3, 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("1"), xs:untypedAtomic("2")) = (xs:untypedAtomic("2.0"), 2.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("1"), xs:untypedAtomic("2")) = (xs:untypedAtomic("2.0"), 2.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((xs:untypedAtomic("1"), xs:untypedAtomic("2")) = (xs:untypedAtomic("2.0"), 3.0))</x:label>
      <x:variable name="expr" as="xs:string">not((xs:untypedAtomic("1"), xs:untypedAtomic("2")) = (xs:untypedAtomic("2.0"), 3.0))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1") = 1</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1") = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("2") = 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("2") = 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1") = 1</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1") = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">1 = xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">1 = xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() = 3</x:label>
      <x:variable name="expr" as="xs:string">error() = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 3) = 3</x:label>
      <x:variable name="expr" as="xs:string">(error(), 3) = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = error()</x:label>
      <x:variable name="expr" as="xs:string">3 = error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = (error(), 3)</x:label>
      <x:variable name="expr" as="xs:string">3 = (error(), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(remove(remove((current-time(), 1), 1), 1)) = 0</x:label>
      <x:variable name="expr" as="xs:string">count(remove(remove((current-time(), 1), 1), 1)) = 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0 = count((1, 2, timezone-from-time(current-time()))))</x:label>
      <x:variable name="expr" as="xs:string">not(0 = count((1, 2, timezone-from-time(current-time()))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 != count((1, 2, timezone-from-time(current-time())))</x:label>
      <x:variable name="expr" as="xs:string">0 != count((1, 2, timezone-from-time(current-time())))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("example.com/"), 1, QName("example.com", "ncname"), false(), xs:hexBinary("FF")) = (xs:anyURI("example.com/NOT"), 0, QName("example.com", "p:ncname"), true(), xs:hexBinary("EF"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("example.com/"), 1, QName("example.com", "ncname"), false(), xs:hexBinary("FF")) = (xs:anyURI("example.com/NOT"), 0, QName("example.com", "p:ncname"), true(), xs:hexBinary("EF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" = "a string"</x:label>
      <x:variable name="expr" as="xs:string">"a string" = "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") = "a string"</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") = "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" = xs:untypedAtomic("a string")</x:label>
      <x:variable name="expr" as="xs:string">"a string" = xs:untypedAtomic("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("a string") = "a stringDIFF")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("a string") = "a stringDIFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" = xs:untypedAtomic("a stringDIFF"))</x:label>
      <x:variable name="expr" as="xs:string">not("a string" = xs:untypedAtomic("a stringDIFF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" = "a stringDIFF")</x:label>
      <x:variable name="expr" as="xs:string">not("a string" = "a stringDIFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((6, "a string"), 1) = 6</x:label>
      <x:variable name="expr" as="xs:string">remove((6, "a string"), 1) = 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 = remove(("a string", 6), 2)</x:label>
      <x:variable name="expr" as="xs:string">6 = remove(("a string", 6), 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>remove((6, "a string"), 2) = xs:untypedAtomic("6")</x:label>
      <x:variable name="expr" as="xs:string">remove((6, "a string"), 2) = xs:untypedAtomic("6")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("6") = remove(("a string", 6), 1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("6") = remove(("a string", 6), 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((xs:untypedAtomic("6"), "a string"), 2)) = 6</x:label>
      <x:variable name="expr" as="xs:string">(remove((xs:untypedAtomic("6"), "a string"), 2)) = 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>6 = (remove(("a string", xs:untypedAtomic("6")), 1))</x:label>
      <x:variable name="expr" as="xs:string">6 = (remove(("a string", xs:untypedAtomic("6")), 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = 1</x:label>
      <x:variable name="expr" as="xs:string">1 = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) = 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) = 2</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) = 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 = (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">2 = (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">1 = (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 = (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") = false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") = false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() = xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">false() = xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("true") = false())</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("true") = false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(true() = xs:untypedAtomic("true"))</x:label>
      <x:variable name="expr" as="xs:string">(true() = xs:untypedAtomic("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"1" = 1</x:label>
      <x:variable name="expr" as="xs:string">"1" = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 = "1"</x:label>
      <x:variable name="expr" as="xs:string">1 = "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() = 5</x:label>
      <x:variable name="expr" as="xs:string">false() = 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 = false()</x:label>
      <x:variable name="expr" as="xs:string">5 = false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("three") = 3</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("three") = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("false") = false()</x:label>
      <x:variable name="expr" as="xs:string">xs:string("false") = false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() = xs:string("false")</x:label>
      <x:variable name="expr" as="xs:string">false() = xs:string("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("falseERR") = false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("falseERR") = false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:untypedAtomic("1"), xs:anyURI("example.com")) = (xs:untypedAtomic("2.0"), 3.0)</x:label>
      <x:variable name="expr" as="xs:string">(xs:untypedAtomic("1"), xs:anyURI("example.com")) = (xs:untypedAtomic("2.0"), 3.0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() = xs:untypedAtomic("falseERR")</x:label>
      <x:variable name="expr" as="xs:string">false() = xs:untypedAtomic("falseERR")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 = xs:untypedAtomic("three")</x:label>
      <x:variable name="expr" as="xs:string">3 = xs:untypedAtomic("three")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") = false()</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") = false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() = xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">false() = xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") = xs:untypedAtomic("a stringDIFF")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") = xs:untypedAtomic("a stringDIFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1") = xs:NCName("string")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1") = xs:NCName("string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dayTimeDuration("P3DT08H34M12.143S") = xs:untypedAtomic("P3DT08H34M12.143S")</x:label>
      <x:variable name="expr" as="xs:string">xs:dayTimeDuration("P3DT08H34M12.143S") = xs:untypedAtomic("P3DT08H34M12.143S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") = xs:dayTimeDuration("PT0S")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") = xs:dayTimeDuration("PT0S")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("P1999Y10M") = xs:yearMonthDuration("P1999Y10M")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("P1999Y10M") = xs:yearMonthDuration("P1999Y10M")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:yearMonthDuration("P1999Y") = xs:untypedAtomic("1999")</x:label>
      <x:variable name="expr" as="xs:string">xs:yearMonthDuration("P1999Y") = xs:untypedAtomic("1999")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() = true() = true() = true()</x:label>
      <x:variable name="expr" as="xs:string">true() = true() = true() = true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((true() = true()) = true()) = true()</x:label>
      <x:variable name="expr" as="xs:string">((true() = true()) = true()) = true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.ge.xml">
    <x:scenario>
      <x:label>() &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("http://www.example/com")) &gt;= (xs:anyURI("http://www.example/com"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("http://www.example/com")) &gt;= (xs:anyURI("http://www.example/com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &gt;= () )</x:label>
      <x:variable name="expr" as="xs:string">not(() &gt;= () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 &gt;= () )</x:label>
      <x:variable name="expr" as="xs:string">not(1 &gt;= () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &gt;= 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() &gt;= 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 =&gt;; 1</x:label>
      <x:variable name="expr" as="xs:string">1 =&gt;; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((0, timezone-from-time(current-time()))) &gt;= 1</x:label>
      <x:variable name="expr" as="xs:string">count((0, timezone-from-time(current-time()))) &gt;= 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") &gt;= false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") &gt;= false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() &gt;= xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">true() &gt;= xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() &gt;= xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">false() &gt;= xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") &gt;= false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") &gt;= false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.gt.xml">
    <x:scenario>
      <x:label>() &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">() &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">() &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">() &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("http://www.example/com")) &gt; (xs:anyURI("http://www.example/com"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("http://www.example/com")) &gt; (xs:anyURI("http://www.example/com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &gt; () )</x:label>
      <x:variable name="expr" as="xs:string">not(() &gt; () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 &gt; () )</x:label>
      <x:variable name="expr" as="xs:string">not(1 &gt; () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &gt; 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() &gt; 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &gt; 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &gt; 2</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &gt; 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &gt; 0</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &gt; 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 &gt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">4 &gt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 &gt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">2 &gt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 &gt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 &gt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 &gt; 1</x:label>
      <x:variable name="expr" as="xs:string">2 &gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &gt;= 1</x:label>
      <x:variable name="expr" as="xs:string">1 &gt;= 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") &gt; false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") &gt; false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() &gt; xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">true() &gt; xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("false") &gt; true())</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("false") &gt; true())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false() &gt; xs:untypedAtomic("true"))</x:label>
      <x:variable name="expr" as="xs:string">not(false() &gt; xs:untypedAtomic("true"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &gt; xs:anyURI("2")</x:label>
      <x:variable name="expr" as="xs:string">1 &gt; xs:anyURI("2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("2") &gt; 1</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("2") &gt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt; 0</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt; 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt;= 0</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt;= 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.le.xml">
    <x:scenario>
      <x:label>() &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("http://www.example/com")) &lt;= (xs:anyURI("http://www.example/com"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("http://www.example/com")) &lt;= (xs:anyURI("http://www.example/com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &lt;= () )</x:label>
      <x:variable name="expr" as="xs:string">not(() &lt;= () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 &lt;= () )</x:label>
      <x:variable name="expr" as="xs:string">not(1 &lt;= () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &lt;= 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() &lt;= 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt;= 1</x:label>
      <x:variable name="expr" as="xs:string">1 &lt;= 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") &lt;= false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") &lt;= false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() &lt;= xs:untypedAtomic("false")</x:label>
      <x:variable name="expr" as="xs:string">false() &lt;= xs:untypedAtomic("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") &lt;= false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") &lt;= false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() &lt;= xs:untypedAtomic("true")</x:label>
      <x:variable name="expr" as="xs:string">true() &lt;= xs:untypedAtomic("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.lt.xml">
    <x:scenario>
      <x:label>() &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">() &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">() &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">() &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(xs:anyURI("http://www.example/com")) &lt; (xs:anyURI("http://www.example/com"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:anyURI("http://www.example/com")) &lt; (xs:anyURI("http://www.example/com"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &lt; () )</x:label>
      <x:variable name="expr" as="xs:string">not(() &lt; () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 &lt; () )</x:label>
      <x:variable name="expr" as="xs:string">not(1 &lt; () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() &lt; 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() &lt; 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 =&lt; 1</x:label>
      <x:variable name="expr" as="xs:string">1 =&lt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &lt; 4</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &lt; 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &lt; 2</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &lt; 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) &lt; 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) &lt; 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">1 &lt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 &lt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">2 &lt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 &lt; (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">0 &lt; (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt; 2</x:label>
      <x:variable name="expr" as="xs:string">1 &lt; 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("false") &lt; true()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("false") &lt; true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() &lt; xs:untypedAtomic("true")</x:label>
      <x:variable name="expr" as="xs:string">false() &lt; xs:untypedAtomic("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("true") &lt; false())</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("true") &lt; false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(true() &lt; xs:untypedAtomic("false"))</x:label>
      <x:variable name="expr" as="xs:string">not(true() &lt; xs:untypedAtomic("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt; xs:anyURI("0")</x:label>
      <x:variable name="expr" as="xs:string">1 &lt; xs:anyURI("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("0") &lt; 1</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("0") &lt; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &lt;= count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">1 &lt;= count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 &lt; count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">0 &lt; count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 &lt; 3 &lt; 4</x:label>
      <x:variable name="expr" as="xs:string">2 &lt; 3 &lt; 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() &lt; true() &lt; true()</x:label>
      <x:variable name="expr" as="xs:string">true() &lt; true() &lt; true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(true() &lt; true()) &lt; true()</x:label>
      <x:variable name="expr" as="xs:string">(true() &lt; true()) &lt; true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/GeneralComp.ne.xml">
    <x:scenario>
      <x:label>() != ()</x:label>
      <x:variable name="expr" as="xs:string">() != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != 10000</x:label>
      <x:variable name="expr" as="xs:string">() != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != (50000)</x:label>
      <x:variable name="expr" as="xs:string">() != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">() != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">() != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">() != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != ()</x:label>
      <x:variable name="expr" as="xs:string">10000 != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != (50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">10000 != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10000 != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">10000 != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != ()</x:label>
      <x:variable name="expr" as="xs:string">(50000) != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != 10000</x:label>
      <x:variable name="expr" as="xs:string">(50000) != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != (50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(50000) != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(50000) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(50000) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != ()</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != 10000</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != (50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(10000,50000) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">(10000,50000) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1]) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1]) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != ()</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != 10000</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) != (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ()</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != 10000</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != 10000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != (50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != (50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != (10000,50000)</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != (10000,50000)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:label>
      <x:variable name="expr" as="xs:string">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) != ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(() != ()) eq false()</x:label>
      <x:variable name="expr" as="xs:string">(() != ()) eq false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() = 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() = 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() != () )</x:label>
      <x:variable name="expr" as="xs:string">not(() != () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 != () )</x:label>
      <x:variable name="expr" as="xs:string">not(1 != () )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(() != 1 )</x:label>
      <x:variable name="expr" as="xs:string">not(() != 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 !! 1</x:label>
      <x:variable name="expr" as="xs:string">1 !! 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2) != (2, 3)</x:label>
      <x:variable name="expr" as="xs:string">(1, 2) != (2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("2") != 1</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("2") != 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("1") != 1)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("1") != 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("2" = xs:untypedAtomic("1"))</x:label>
      <x:variable name="expr" as="xs:string">not("2" = xs:untypedAtomic("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 != xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">2 != xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 != xs:untypedAtomic("1"))</x:label>
      <x:variable name="expr" as="xs:string">not(1 != xs:untypedAtomic("1"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((0, timezone-from-time(current-time()))) != 0</x:label>
      <x:variable name="expr" as="xs:string">count((0, timezone-from-time(current-time()))) != 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" != "a stringDIFF"</x:label>
      <x:variable name="expr" as="xs:string">"a string" != "a stringDIFF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" != "a string")</x:label>
      <x:variable name="expr" as="xs:string">not("a string" != "a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") != "a stringDIFF"</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") != "a stringDIFF"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" != xs:untypedAtomic("a stringDIFF")</x:label>
      <x:variable name="expr" as="xs:string">"a string" != xs:untypedAtomic("a stringDIFF")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" != xs:untypedAtomic("a string"))</x:label>
      <x:variable name="expr" as="xs:string">not("a string" != xs:untypedAtomic("a string"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("a string") != "a string")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("a string") != "a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("true") != false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("true") != false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() != xs:untypedAtomic("true")</x:label>
      <x:variable name="expr" as="xs:string">false() != xs:untypedAtomic("true")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("false") != false())</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("false") != false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false() != xs:untypedAtomic("false"))</x:label>
      <x:variable name="expr" as="xs:string">not(false() != xs:untypedAtomic("false"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) != 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) != 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) != 2</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) != 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) != 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) != 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 != 2</x:label>
      <x:variable name="expr" as="xs:string">1 != 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 != (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">1 != (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 != (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">2 != (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 != (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 != (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("three") != 3</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("three") != 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 != xs:untypedAtomic("three")</x:label>
      <x:variable name="expr" as="xs:string">3 != xs:untypedAtomic("three")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"2" != 1</x:label>
      <x:variable name="expr" as="xs:string">"2" != 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 != "2"</x:label>
      <x:variable name="expr" as="xs:string">1 != "2"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("falseERR") != false()</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("falseERR") != false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 != "1"</x:label>
      <x:variable name="expr" as="xs:string">1 != "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string("false") != false()</x:label>
      <x:variable name="expr" as="xs:string">xs:string("false") != false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() != xs:string("false")</x:label>
      <x:variable name="expr" as="xs:string">false() != xs:string("false")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() != xs:untypedAtomic("falseERR")</x:label>
      <x:variable name="expr" as="xs:string">false() != xs:untypedAtomic("falseERR")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() != xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">false() != xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") != false()</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") != false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/IfExpr.xml">
    <x:scenario>
      <x:label>if ( /Root/Customers[1]/@CustomerID = 'ALFKI' and /Root/Customers[1]/FullAddress/City = 'Berlin') then "pass" else "fail"</x:label>
      <x:variable name="expr" as="xs:string">if ( /Root/Customers[1]/@CustomerID = 'ALFKI' and /Root/Customers[1]/FullAddress/City = 'Berlin') then "pass" else "fail"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (/Root/Customers[1]/@CustomerID = 'ALFKI' or /Root/Customers[1]/FullAddress/City = 'Non-Existent') then "pass" else "fail"</x:label>
      <x:variable name="expr" as="xs:string">if (/Root/Customers[1]/@CustomerID = 'ALFKI' or /Root/Customers[1]/FullAddress/City = 'Non-Existent') then "pass" else "fail"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (2 != 4) then 1 else 0</x:label>
      <x:variable name="expr" as="xs:string">if (2 != 4) then 1 else 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>( if (3 != 2) then 16 else 0 ) + ( if (8 = 7) then 4 else 1 )</x:label>
      <x:variable name="expr" as="xs:string">( if (3 != 2) then 16 else 0 ) + ( if (8 = 7) then 4 else 1 )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(if (3 != 2) then 16 else 0) + (if (8 = 7) then 4 else 1)</x:label>
      <x:variable name="expr" as="xs:string">(if (3 != 2) then 16 else 0) + (if (8 = 7) then 4 else 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//Folder)[1]/File[ if ( ./@name='File00000000000' ) then 2 else true() ]/FileName</x:label>
      <x:variable name="expr" as="xs:string">(//Folder)[1]/File[ if ( ./@name='File00000000000' ) then 2 else true() ]/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return if( $file/FileName='File00000000000' ) then $file/FileName else data( $file/FileName )</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return if( $file/FileName='File00000000000' ) then $file/FileName else data( $file/FileName )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return if( $file/FileName='File00000000004' ) then 1 else data( $file/FileName )</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return if( $file/FileName='File00000000004' ) then 1 else data( $file/FileName )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if //File[1] then "true" else "false"</x:label>
      <x:variable name="expr" as="xs:string">if //File[1] then "true" else "false"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if( false() ) then /Folder[1] cast as xs:double ? else 10 cast as xs:double ?</x:label>
      <x:variable name="expr" as="xs:string">if( false() ) then /Folder[1] cast as xs:double ? else 10 cast as xs:double ?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if( true() ) then 10 cast as xs:double ? else /Folder[1] cast as xs:double ?</x:label>
      <x:variable name="expr" as="xs:string">if( true() ) then 10 cast as xs:double ? else /Folder[1] cast as xs:double ?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (doc-available('nodocument.xml')) then doc('nodocument.xml') else 10 cast as xs:double</x:label>
      <x:variable name="expr" as="xs:string">if (doc-available('nodocument.xml')) then doc('nodocument.xml') else 10 cast as xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(if(2) then 1 else 0) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(if(2) then 1 else 0) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(()) then false() else true()</x:label>
      <x:variable name="expr" as="xs:string">if(()) then false() else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(if((1, current-time())[1] treat as xs:integer) then true() else false()) eq true()</x:label>
      <x:variable name="expr" as="xs:string">(if((1, current-time())[1] treat as xs:integer) then true() else false()) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(if(boolean((1, current-time())[1] treat as xs:integer)) then true() else false()) eq true()</x:label>
      <x:variable name="expr" as="xs:string">(if(boolean((1, current-time())[1] treat as xs:integer)) then true() else false()) eq true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if((1, 2, 3, hours-from-time(current-time()))[1]) then true() else false()</x:label>
      <x:variable name="expr" as="xs:string">if((1, 2, 3, hours-from-time(current-time()))[1]) then true() else false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(if(boolean((1, current-time())[1] treat as xs:integer)) then true() else false()) eq "true"</x:label>
      <x:variable name="expr" as="xs:string">string(if(boolean((1, current-time())[1] treat as xs:integer)) then true() else false()) eq "true"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(if(current-time()) then 1 else 0) eq 1</x:label>
      <x:variable name="expr" as="xs:string">(if(current-time()) then 1 else 0) eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 eq (if(xs:anyURI("example.com/")) then 1 else 0)</x:label>
      <x:variable name="expr" as="xs:string">1 eq (if(xs:anyURI("example.com/")) then 1 else 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 eq (if(xs:anyURI("")) then 1 else 0)</x:label>
      <x:variable name="expr" as="xs:string">0 eq (if(xs:anyURI("")) then 1 else 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(count((1, 2, 3, current-time(), 4))) then true() else 4</x:label>
      <x:variable name="expr" as="xs:string">if(count((1, 2, 3, current-time(), 4))) then true() else 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(not(count(remove((1, 2, 3, current-time()), 1)))) then 3 else true()</x:label>
      <x:variable name="expr" as="xs:string">if(not(count(remove((1, 2, 3, current-time()), 1)))) then 3 else true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(boolean((1, 2, 3, current-time())[1] treat as xs:integer)) then true() else 4</x:label>
      <x:variable name="expr" as="xs:string">if(boolean((1, 2, 3, current-time())[1] treat as xs:integer)) then true() else 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(//(employee[location = "Denver"]/ancestor::*)) then 1 else 3</x:label>
      <x:variable name="expr" as="xs:string">if(//(employee[location = "Denver"]/ancestor::*)) then 1 else 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if(!true()) then 2 else 3</x:label>
      <x:variable name="expr" as="xs:string">if(!true()) then 2 else 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else ()</x:label>
      <x:variable name="expr" as="xs:string">if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else if (1) then 1 else ()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/InlineFunctionExpr.xml">
    <x:scenario>
      <x:label>let $add := %Q{http://example.com/speed}fast %Q{http://example.com/origin}author("Mike") function($x, $y) {$x + $y} return $add(2,2)</x:label>
      <x:variable name="expr" as="xs:string">let $add := %Q{http://example.com/speed}fast %Q{http://example.com/origin}author("Mike") function($x, $y) {$x + $y} return $add(2,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/InstanceofExpr.xml">
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTime("2002-04-02T12:00:00Z") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTime("2002-04-02T12:00:00Z") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:time("13:20:10.5Z") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:time("13:20:10.5Z") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:date("2000-01-01+05:00") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:date("2000-01-01+05:00") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:boolean("true") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:boolean("true") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1267.43233E12 instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">1267.43233E12 instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"A String Function" instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">"A String Function" instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967.543233 instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">12678967.543233 instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:dateTime</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:dateTime</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:time</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:time</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:date</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:date</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>12678967543233 instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">12678967543233 instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN('abc') instance of xs:NMTOKENS</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN('abc') instance of xs:NMTOKENS</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of item()</x:label>
      <x:variable name="expr" as="xs:string">1 instance of item()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of item()</x:label>
      <x:variable name="expr" as="xs:string">1 instance of item()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">1 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">1 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">1 instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">1 instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">1 instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() instance of xs:boolean</x:label>
      <x:variable name="expr" as="xs:string">false() instance of xs:boolean</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() instance of xs:anyAtomicType</x:label>
      <x:variable name="expr" as="xs:string">false() instance of xs:anyAtomicType</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">"a string" instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("false" instance of xs:boolean)</x:label>
      <x:variable name="expr" as="xs:string">not("false" instance of xs:boolean)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">1.1 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1.1 instance of xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(1.1 instance of xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.com/") instance of xs:anyURI</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.com/") instance of xs:anyURI</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("http://www.example.com/") instance of xs:string)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("http://www.example.com/") instance of xs:string)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" instance of xs:untypedAtomic)</x:label>
      <x:variable name="expr" as="xs:string">not("a string" instance of xs:untypedAtomic)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, 5) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, 5) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, 3, 4, 5) instance of xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, 3, 4, 5) instance of xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, 3, 4, 5) instance of xs:integer?)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, 3, 4, 5) instance of xs:integer?)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, 5) instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, 5) instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3, 4, 5) instance of item()+</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3, 4, 5) instance of item()+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, "a string", 4, 5) instance of xs:integer*)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, "a string", 4, 5) instance of xs:integer*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, 1.1, 4, 5) instance of xs:integer*)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, 1.1, 4, 5) instance of xs:integer*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, 2, "a string", 4, 5) instance of xs:string*)</x:label>
      <x:variable name="expr" as="xs:string">not((1, 2, "a string", 4, 5) instance of xs:string*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, "a string", 4, 5) instance of xs:anyAtomicType*</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, "a string", 4, 5) instance of xs:anyAtomicType*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, count("one"), 4, 5) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, count("one"), 4, 5) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of text())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of node())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of element())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of element())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of processing-instruction())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of processing-instruction())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of comment())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of comment())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of text())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of text())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of node())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of node())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of element())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of element())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of processing-instruction())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of processing-instruction())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of comment())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of comment())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(1 instance of empty-sequence())</x:label>
      <x:variable name="expr" as="xs:string">not(1 instance of empty-sequence())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not( (1, 2, 3) instance of empty-sequence())</x:label>
      <x:variable name="expr" as="xs:string">not( (1, 2, 3) instance of empty-sequence())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">() instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>() instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">() instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(((()))) instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">(((()))) instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((), (), ()) instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">((), (), ()) instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((), "xs:string") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">((), "xs:string") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("xs:string", (), "xs:string") instance of xs:string+</x:label>
      <x:variable name="expr" as="xs:string">("xs:string", (), "xs:string") instance of xs:string+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.1, (), 1) instance of xs:decimal+</x:label>
      <x:variable name="expr" as="xs:string">(1.1, (), 1) instance of xs:decimal+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" instance of xs:NOTATION)</x:label>
      <x:variable name="expr" as="xs:string">not("a string" instance of xs:NOTATION)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("a string" instance of xs:QName)</x:label>
      <x:variable name="expr" as="xs:string">not("a string" instance of xs:QName)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1 instance of xs:decimal and not(1.1 instance of xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">1.1 instance of xs:decimal and not(1.1 instance of xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of prefixDoesNotExist:integer</x:label>
      <x:variable name="expr" as="xs:string">3 instance of prefixDoesNotExist:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of xs:doesNotExist</x:label>
      <x:variable name="expr" as="xs:string">3 instance of xs:doesNotExist</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of xs:qname</x:label>
      <x:variable name="expr" as="xs:string">3 instance of xs:qname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of none</x:label>
      <x:variable name="expr" as="xs:string">3 instance of none</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of void</x:label>
      <x:variable name="expr" as="xs:string">3 instance of void</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of none()</x:label>
      <x:variable name="expr" as="xs:string">3 instance of none()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of void()</x:label>
      <x:variable name="expr" as="xs:string">3 instance of void()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">error() instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">error() instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">error() instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 1) instance of empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">(error(), 1) instance of empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, error()) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(1, error()) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 1) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(error(), 1) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, error()) instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">(1, error()) instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 1) instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">(error(), 1) instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(((10)div(3)) instance of xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(((10)div(3)) instance of xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((10)idiv(3)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">((10)idiv(3)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((10)mod(3)) instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">((10)mod(3)) instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(0) instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(0) instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(-1) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(-1) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(0) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">xs:long(0) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(0) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:int(0) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(0) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">xs:short(0) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(0) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(0) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(0) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(0) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(0) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(0) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(0) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(0) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(0) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(0) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(0) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(1) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(1) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString("NCName") instance of xs:normalizedString</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString("NCName") instance of xs:normalizedString</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token("NCName") instance of xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:token("NCName") instance of xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("NCName") instance of xs:language</x:label>
      <x:variable name="expr" as="xs:string">xs:language("NCName") instance of xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN("NCName") instance of xs:NMTOKEN</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN("NCName") instance of xs:NMTOKEN</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("NCName") instance of xs:Name</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("NCName") instance of xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NCName("NCName") instance of xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:NCName("NCName") instance of xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ID("NCName") instance of xs:ID</x:label>
      <x:variable name="expr" as="xs:string">xs:ID("NCName") instance of xs:ID</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:IDREF("NCName") instance of xs:IDREF</x:label>
      <x:variable name="expr" as="xs:string">xs:IDREF("NCName") instance of xs:IDREF</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ENTITY("NCName") instance of xs:ENTITY</x:label>
      <x:variable name="expr" as="xs:string">xs:ENTITY("NCName") instance of xs:ENTITY</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString("ncname") instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString("ncname") instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token("ncname") instance of xs:normalizedString</x:label>
      <x:variable name="expr" as="xs:string">xs:token("ncname") instance of xs:normalizedString</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("ncname") instance of xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:language("ncname") instance of xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NMTOKEN("ncname") instance of xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:NMTOKEN("ncname") instance of xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("ncname") instance of xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("ncname") instance of xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:NCName("ncname") instance of xs:Name</x:label>
      <x:variable name="expr" as="xs:string">xs:NCName("ncname") instance of xs:Name</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ID("ncname") instance of xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:ID("ncname") instance of xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:IDREF("ncname") instance of xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:IDREF("ncname") instance of xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ENTITY("ncname") instance of xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:ENTITY("ncname") instance of xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger("0") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger("0") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger("-1") instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger("-1") instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("0") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:long("0") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int("0") instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">xs:int("0") instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short("0") instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:short("0") instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte("0") instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">xs:byte("0") instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("0") instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("0") instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong("0") instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong("0") instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt("0") instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt("0") instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort("0") instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort("0") instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte("0") instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte("0") instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("1") instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("1") instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger("1") instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger("1") instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger("1") instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger("1") instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("1") instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:long("1") instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("1") instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:long("1") instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("1") instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:long("1") instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long("1") instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:long("1") instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token("ncname") instance of xs:NCName</x:label>
      <x:variable name="expr" as="xs:string">xs:token("ncname") instance of xs:NCName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ID("ncname") instance of xs:IDREF</x:label>
      <x:variable name="expr" as="xs:string">xs:ID("ncname") instance of xs:IDREF</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:ENTITY("ncname") instance of xs:IDREF</x:label>
      <x:variable name="expr" as="xs:string">xs:ENTITY("ncname") instance of xs:IDREF</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:language("ncname") instance of xs:NMTOKEN</x:label>
      <x:variable name="expr" as="xs:string">xs:language("ncname") instance of xs:NMTOKEN</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:Name("ncname") instance of xs:language</x:label>
      <x:variable name="expr" as="xs:string">xs:Name("ncname") instance of xs:language</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString("ncname") instance of xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString("ncname") instance of xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:double("1")) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:double("1")) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:double("0")) instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:double("0")) instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:double("-4")) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:double("-4")) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:double("-4")) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:double("-4")) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:double("-4")) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:double("-4")) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:double("-4")) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:double("-4")) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:double("4")) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:double("4")) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:double("4")) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:double("4")) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:double("4")) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:double("4")) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:double("4")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:double("4")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:double("4")) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:double("4")) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(xs:double("4")) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(xs:double("4")) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:byte(xs:float("1")) instance of xs:byte</x:label>
      <x:variable name="expr" as="xs:string">xs:byte(xs:float("1")) instance of xs:byte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonPositiveInteger(xs:float("0")) instance of xs:nonPositiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonPositiveInteger(xs:float("0")) instance of xs:nonPositiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:negativeInteger(xs:float("-4")) instance of xs:negativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:negativeInteger(xs:float("-4")) instance of xs:negativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:long(xs:float("-4")) instance of xs:long</x:label>
      <x:variable name="expr" as="xs:string">xs:long(xs:float("-4")) instance of xs:long</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:int(xs:float("-4")) instance of xs:int</x:label>
      <x:variable name="expr" as="xs:string">xs:int(xs:float("-4")) instance of xs:int</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:short(xs:float("-4")) instance of xs:short</x:label>
      <x:variable name="expr" as="xs:string">xs:short(xs:float("-4")) instance of xs:short</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:nonNegativeInteger(xs:float("4")) instance of xs:nonNegativeInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:nonNegativeInteger(xs:float("4")) instance of xs:nonNegativeInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedLong(xs:float("4")) instance of xs:unsignedLong</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedLong(xs:float("4")) instance of xs:unsignedLong</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedInt(xs:float("4")) instance of xs:unsignedInt</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedInt(xs:float("4")) instance of xs:unsignedInt</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedShort(xs:float("4")) instance of xs:unsignedShort</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedShort(xs:float("4")) instance of xs:unsignedShort</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:unsignedByte(xs:float("4")) instance of xs:unsignedByte</x:label>
      <x:variable name="expr" as="xs:string">xs:unsignedByte(xs:float("4")) instance of xs:unsignedByte</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:positiveInteger(xs:float("4")) instance of xs:positiveInteger</x:label>
      <x:variable name="expr" as="xs:string">xs:positiveInteger(xs:float("4")) instance of xs:positiveInteger</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (xs:integer(1), xs:decimal(1)) return (((($x + 1) * 2) - 1) instance of xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">for $x in (xs:integer(1), xs:decimal(1)) return (((($x + 1) * 2) - 1) instance of xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/LetClause.xml">
    <x:scenario>
      <x:label>let $a := 1 let $b := $a let $c := $a+$b return ($c)</x:label>
      <x:variable name="expr" as="xs:string">let $a := 1 let $b := $a let $c := $a+$b return ($c)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>return 1</x:label>
      <x:variable name="expr" as="xs:string">return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/Literal.xml">
    <x:scenario>
      <x:label>"test"</x:label>
      <x:variable name="expr" as="xs:string">"test"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'test'</x:label>
      <x:variable name="expr" as="xs:string">'test'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"line1
line2"</x:label>
      <x:variable name="expr" as="xs:string">"line1
line2"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'line1
line2'</x:label>
      <x:variable name="expr" as="xs:string">'line1
line2'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"test</x:label>
      <x:variable name="expr" as="xs:string">"test</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'test</x:label>
      <x:variable name="expr" as="xs:string">'test</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'test"</x:label>
      <x:variable name="expr" as="xs:string">'test"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"test'</x:label>
      <x:variable name="expr" as="xs:string">"test'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535032</x:label>
      <x:variable name="expr" as="xs:string">65535032</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-65535032</x:label>
      <x:variable name="expr" as="xs:string">-65535032</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535032.0023</x:label>
      <x:variable name="expr" as="xs:string">65535032.0023</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.65535032</x:label>
      <x:variable name="expr" as="xs:string">.65535032</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.65535032</x:label>
      <x:variable name="expr" as="xs:string">-.65535032</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.65535032</x:label>
      <x:variable name="expr" as="xs:string">+.65535032</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535032e2</x:label>
      <x:variable name="expr" as="xs:string">65535032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535.032e2</x:label>
      <x:variable name="expr" as="xs:string">65535.032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.65535032e2</x:label>
      <x:variable name="expr" as="xs:string">.65535032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.65535032e2</x:label>
      <x:variable name="expr" as="xs:string">-.65535032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.65535032e2</x:label>
      <x:variable name="expr" as="xs:string">+.65535032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535.032e-2</x:label>
      <x:variable name="expr" as="xs:string">65535.032e-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.65535032e-2</x:label>
      <x:variable name="expr" as="xs:string">.65535032e-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.65535032e-2</x:label>
      <x:variable name="expr" as="xs:string">-.65535032e-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.65535032e-2</x:label>
      <x:variable name="expr" as="xs:string">+.65535032e-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-65535.032e2</x:label>
      <x:variable name="expr" as="xs:string">-65535.032e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-65535.032e-2</x:label>
      <x:variable name="expr" as="xs:string">-65535.032e-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535032E2</x:label>
      <x:variable name="expr" as="xs:string">65535032E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535.032E2</x:label>
      <x:variable name="expr" as="xs:string">65535.032E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.65535032E2</x:label>
      <x:variable name="expr" as="xs:string">.65535032E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.65535032E2</x:label>
      <x:variable name="expr" as="xs:string">-.65535032E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.65535032E2</x:label>
      <x:variable name="expr" as="xs:string">+.65535032E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535.032E-2</x:label>
      <x:variable name="expr" as="xs:string">65535.032E-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.65535032E-2</x:label>
      <x:variable name="expr" as="xs:string">.65535032E-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.65535032E-2</x:label>
      <x:variable name="expr" as="xs:string">-.65535032E-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.65535032E-2</x:label>
      <x:variable name="expr" as="xs:string">+.65535032E-2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>65535032.001.01</x:label>
      <x:variable name="expr" as="xs:string">65535032.001.01</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>..01</x:label>
      <x:variable name="expr" as="xs:string">..01</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.0.1</x:label>
      <x:variable name="expr" as="xs:string">.0.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-.0.1</x:label>
      <x:variable name="expr" as="xs:string">-.0.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>+.0.1</x:label>
      <x:variable name="expr" as="xs:string">+.0.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1e 2</x:label>
      <x:variable name="expr" as="xs:string">1e 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1E 2</x:label>
      <x:variable name="expr" as="xs:string">1E 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 e2</x:label>
      <x:variable name="expr" as="xs:string">1 e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 E2</x:label>
      <x:variable name="expr" as="xs:string">1 E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 e 2</x:label>
      <x:variable name="expr" as="xs:string">1 e 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 E 2</x:label>
      <x:variable name="expr" as="xs:string">1 E 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1e2.1.1</x:label>
      <x:variable name="expr" as="xs:string">1e2.1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1E2.1.1</x:label>
      <x:variable name="expr" as="xs:string">1E2.1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1.1e2</x:label>
      <x:variable name="expr" as="xs:string">1.1.1e2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.1.1.E2</x:label>
      <x:variable name="expr" as="xs:string">1.1.1.E2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1ee2</x:label>
      <x:variable name="expr" as="xs:string">1ee2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1EE2</x:label>
      <x:variable name="expr" as="xs:string">1EE2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1eE2</x:label>
      <x:variable name="expr" as="xs:string">1eE2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1e2e3</x:label>
      <x:variable name="expr" as="xs:string">1e2e3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1e-2.1.1</x:label>
      <x:variable name="expr" as="xs:string">1e-2.1.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;amp;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;amp;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;quot;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;quot;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;apos;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;apos;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;lt;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;lt;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;gt;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;gt;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;#8364;"</x:label>
      <x:variable name="expr" as="xs:string">"&amp;#8364;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>""""</x:label>
      <x:variable name="expr" as="xs:string">""""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>''''</x:label>
      <x:variable name="expr" as="xs:string">''''</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"He said, ""I don't like it."""</x:label>
      <x:variable name="expr" as="xs:string">"He said, ""I don't like it."""</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'He said, "I don''t like it."'</x:label>
      <x:variable name="expr" as="xs:string">'He said, "I don''t like it."'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'fo''o' eq 'fo''o'</x:label>
      <x:variable name="expr" as="xs:string">'fo''o' eq 'fo''o'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'foo' eq "foo"</x:label>
      <x:variable name="expr" as="xs:string">'foo' eq "foo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'f'oo'</x:label>
      <x:variable name="expr" as="xs:string">'f'oo'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"""" eq '"'</x:label>
      <x:variable name="expr" as="xs:string">"""" eq '"'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>'''' eq "'"</x:label>
      <x:variable name="expr" as="xs:string">'''' eq "'"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"fo""o" eq concat("fo", """", "o")</x:label>
      <x:variable name="expr" as="xs:string">"fo""o" eq concat("fo", """", "o")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"f"oo"</x:label>
      <x:variable name="expr" as="xs:string">"f"oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3. eq 3.</x:label>
      <x:variable name="expr" as="xs:string">3. eq 3.</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.3 eq .3</x:label>
      <x:variable name="expr" as="xs:string">.3 eq .3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.3e-3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1.3e-3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.e+3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1.e+3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.e3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1.e3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1231.123e3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1231.123e3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1.E3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">1.E3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-1231.123e3 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">-1231.123e3 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">3 instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.3 instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">3.3 instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.3e1 instance of xs:double</x:label>
      <x:variable name="expr" as="xs:string">3.3e1 instance of xs:double</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a xs:string" instance of xs:string</x:label>
      <x:variable name="expr" as="xs:string">"a xs:string" instance of xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:double("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:double("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:float("NaN"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:float("NaN"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float("NaN") instance of xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:float("NaN") instance of xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 &gt;E 2</x:label>
      <x:variable name="expr" as="xs:string">3 &gt;E 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>33"</x:label>
      <x:variable name="expr" as="xs:string">33"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 + 3!#</x:label>
      <x:variable name="expr" as="xs:string">2 + 3!#</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>432f542</x:label>
      <x:variable name="expr" as="xs:string">432f542</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.54.45</x:label>
      <x:variable name="expr" as="xs:string">.54.45</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0.3 eq .3</x:label>
      <x:variable name="expr" as="xs:string">0.3 eq .3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label/>
      <x:variable name="expr" as="xs:string"/>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>{1}</x:label>
      <x:variable name="expr" as="xs:string">{1}</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string &amp;;"</x:label>
      <x:variable name="expr" as="xs:string">"a string &amp;;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"t" eq "t"</x:label>
      <x:variable name="expr" as="xs:string">"t" eq "t"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"t" eq "&amp;#x74;"</x:label>
      <x:variable name="expr" as="xs:string">"t" eq "&amp;#x74;"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 &amp;lt;= 3</x:label>
      <x:variable name="expr" as="xs:string">1 &amp;lt;= 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</x:label>
      <x:variable name="expr" as="xs:string">999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</x:label>
      <x:variable name="expr" as="xs:string">-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.1</x:label>
      <x:variable name="expr" as="xs:string">999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999.1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001</x:label>
      <x:variable name="expr" as="xs:string">0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999E100000000000000000000000000000000000000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999E100000000000000000000000000000000000000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999E100000000000000000000000000000000000000000000000000000000</x:label>
      <x:variable name="expr" as="xs:string">-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999E100000000000000000000000000000000000000000000000000000000</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:labele10</x:label>
      <x:variable name="expr" as="xs:string">0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0e0</x:label>
      <x:variable name="expr" as="xs:string">-0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0e0</x:label>
      <x:variable name="expr" as="xs:string">0e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0.0</x:label>
      <x:variable name="expr" as="xs:string">-0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0.0</x:label>
      <x:variable name="expr" as="xs:string">0.0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-0</x:label>
      <x:variable name="expr" as="xs:string">-0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 ; 1</x:label>
      <x:variable name="expr" as="xs:string">1 ; 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0x20</x:label>
      <x:variable name="expr" as="xs:string">0x20</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>.5</x:label>
      <x:variable name="expr" as="xs:string">.5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>. 5</x:label>
      <x:variable name="expr" as="xs:string">. 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>465.</x:label>
      <x:variable name="expr" as="xs:string">465.</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>} }</x:label>
      <x:variable name="expr" as="xs:string">} }</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>import gt import</x:label>
      <x:variable name="expr" as="xs:string">import gt import</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema gt schema</x:label>
      <x:variable name="expr" as="xs:string">schema gt schema</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/NameTest.xml">
    <x:scenario>
      <x:label>/*/*[1]/name()</x:label>
      <x:variable name="expr" as="xs:string">/*/*[1]/name()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/.</x:label>
      <x:variable name="expr" as="xs:string">/.</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*/.</x:label>
      <x:variable name="expr" as="xs:string">/*/.</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + remove(("foo", 2), 2)asdasdad</x:label>
      <x:variable name="expr" as="xs:string">1 + remove(("foo", 2), 2)asdasdad</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>---..---</x:label>
      <x:variable name="expr" as="xs:string">---..---</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>foo- foo</x:label>
      <x:variable name="expr" as="xs:string">foo- foo</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nametest : nametest</x:label>
      <x:variable name="expr" as="xs:string">nametest : nametest</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nametest: nametest</x:label>
      <x:variable name="expr" as="xs:string">nametest: nametest</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>nametest :nametest</x:label>
      <x:variable name="expr" as="xs:string">nametest :nametest</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>f oo" eq "f oo"</x:label>
      <x:variable name="expr" as="xs:string">f oo" eq "f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"f oo eq "f oo"</x:label>
      <x:variable name="expr" as="xs:string">"f oo eq "f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"f oo" eq f oo"</x:label>
      <x:variable name="expr" as="xs:string">"f oo" eq f oo"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"f oo" eq "f oo</x:label>
      <x:variable name="expr" as="xs:string">"f oo" eq "f oo</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>normalize-unicode("f oo") eq "f oo</x:label>
      <x:variable name="expr" as="xs:string">normalize-unicode("f oo") eq "f oo</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>//</x:label>
      <x:variable name="expr" as="xs:string">//</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/*5</x:label>
      <x:variable name="expr" as="xs:string">/*5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/ * 5</x:label>
      <x:variable name="expr" as="xs:string">/ * 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 + / * 5</x:label>
      <x:variable name="expr" as="xs:string">4 + / * 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>::ncname</x:label>
      <x:variable name="expr" as="xs:string">::ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>::local:ncname</x:label>
      <x:variable name="expr" as="xs:string">::local:ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>@</x:label>
      <x:variable name="expr" as="xs:string">@</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>@</x:label>
      <x:variable name="expr" as="xs:string">@</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>parent::</x:label>
      <x:variable name="expr" as="xs:string">parent::</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>no-binding:*</x:label>
      <x:variable name="expr" as="xs:string">no-binding:*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-element("quotesAreNotAllowed")</x:label>
      <x:variable name="expr" as="xs:string">schema-element("quotesAreNotAllowed")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-attribute("quotesAreNotAllowed")</x:label>
      <x:variable name="expr" as="xs:string">schema-attribute("quotesAreNotAllowed")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-element(notDeclared:ncname)</x:label>
      <x:variable name="expr" as="xs:string">schema-element(notDeclared:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-attribute(notDeclared:ncname)</x:label>
      <x:variable name="expr" as="xs:string">schema-attribute(notDeclared:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-element(thisTypeDoesNotExistExample.Com)</x:label>
      <x:variable name="expr" as="xs:string">schema-element(thisTypeDoesNotExistExample.Com)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-attribute(thisTypeDoesNotExistExample.Com)</x:label>
      <x:variable name="expr" as="xs:string">schema-attribute(thisTypeDoesNotExistExample.Com)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>unknownprefix:*</x:label>
      <x:variable name="expr" as="xs:string">unknownprefix:*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>@unknownprefix:*</x:label>
      <x:variable name="expr" as="xs:string">@unknownprefix:*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>@xmlns:*</x:label>
      <x:variable name="expr" as="xs:string">@xmlns:*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>@xmlns:ncname</x:label>
      <x:variable name="expr" as="xs:string">@xmlns:ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xmlns:ncname</x:label>
      <x:variable name="expr" as="xs:string">xmlns:ncname</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xmlns:*</x:label>
      <x:variable name="expr" as="xs:string">xmlns:*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>let</x:label>
      <x:variable name="expr" as="xs:string">let</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>let</x:label>
      <x:variable name="expr" as="xs:string">let</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>as</x:label>
      <x:variable name="expr" as="xs:string">as</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>of</x:label>
      <x:variable name="expr" as="xs:string">of</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>child:</x:label>
      <x:variable name="expr" as="xs:string">child:</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>child::element</x:label>
      <x:variable name="expr" as="xs:string">child::element</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>declare default function namespace "http://www.example.com/"; declare namespace e = "http://www.example.com/"; declare function element() { 1 }; e:element()</x:label>
      <x:variable name="expr" as="xs:string">declare default function namespace "http://www.example.com/"; declare namespace e = "http://www.example.com/"; declare function element() { 1 }; e:element()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>_</x:label>
      <x:variable name="expr" as="xs:string">_</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>pod_pod</x:label>
      <x:variable name="expr" as="xs:string">pod_pod</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/NodeTest.xml">
    <x:scenario>
      <x:label>/comment()</x:label>
      <x:variable name="expr" as="xs:string">/comment()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/processing-instruction()</x:label>
      <x:variable name="expr" as="xs:string">/processing-instruction()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>processing-instruction(*)</x:label>
      <x:variable name="expr" as="xs:string">processing-instruction(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>text(*)</x:label>
      <x:variable name="expr" as="xs:string">text(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>comment(*)</x:label>
      <x:variable name="expr" as="xs:string">comment(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>node(*)</x:label>
      <x:variable name="expr" as="xs:string">node(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(*)</x:label>
      <x:variable name="expr" as="xs:string">document-node(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-attribute(*)</x:label>
      <x:variable name="expr" as="xs:string">schema-attribute(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-element(*)</x:label>
      <x:variable name="expr" as="xs:string">schema-element(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document(*)</x:label>
      <x:variable name="expr" as="xs:string">document(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document()</x:label>
      <x:variable name="expr" as="xs:string">document()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of document(*)</x:label>
      <x:variable name="expr" as="xs:string">1 instance of document(*)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 instance of document()</x:label>
      <x:variable name="expr" as="xs:string">1 instance of document()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(name)</x:label>
      <x:variable name="expr" as="xs:string">document-node(name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(local:name)</x:label>
      <x:variable name="expr" as="xs:string">document-node(local:name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(processing-instruction())</x:label>
      <x:variable name="expr" as="xs:string">document-node(processing-instruction())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(unknown())</x:label>
      <x:variable name="expr" as="xs:string">document-node(unknown())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(schema-attribute(ncname))</x:label>
      <x:variable name="expr" as="xs:string">document-node(schema-attribute(ncname))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(schema-element(thisTypeIsNotRecognizedExample.Com))</x:label>
      <x:variable name="expr" as="xs:string">document-node(schema-element(thisTypeIsNotRecognizedExample.Com))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(element(notBound:ncname))</x:label>
      <x:variable name="expr" as="xs:string">document-node(element(notBound:ncname))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>element(notBound:ncname)</x:label>
      <x:variable name="expr" as="xs:string">element(notBound:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>attribute(notBound:ncname)</x:label>
      <x:variable name="expr" as="xs:string">attribute(notBound:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>document-node(schema-element(notBound:ncname))</x:label>
      <x:variable name="expr" as="xs:string">document-node(schema-element(notBound:ncname))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-element(notBound:ncname)</x:label>
      <x:variable name="expr" as="xs:string">schema-element(notBound:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>schema-attribute(notBound:ncname)</x:label>
      <x:variable name="expr" as="xs:string">schema-attribute(notBound:ncname)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>processing-instruction('ncname')</x:label>
      <x:variable name="expr" as="xs:string">processing-instruction('ncname')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>element()</x:label>
      <x:variable name="expr" as="xs:string">element()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(4, 5)[position() = 2][last() = 1]</x:label>
      <x:variable name="expr" as="xs:string">(4, 5)[position() = 2][last() = 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(4, 5)[position() = 2][last() = 1][last() = 1][last()]</x:label>
      <x:variable name="expr" as="xs:string">(4, 5)[position() = 2][last() = 1][last() = 1][last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/OrExpr.xml">
    <x:scenario>
      <x:label>not("" or 0)</x:label>
      <x:variable name="expr" as="xs:string">not("" or 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0 or 0)</x:label>
      <x:variable name="expr" as="xs:string">not(0 or 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0 or 0)</x:label>
      <x:variable name="expr" as="xs:string">not(0 or 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("" or 0)</x:label>
      <x:variable name="expr" as="xs:string">not("" or 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 or 1</x:label>
      <x:variable name="expr" as="xs:string">1 or 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 or 0</x:label>
      <x:variable name="expr" as="xs:string">1 or 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 or 5</x:label>
      <x:variable name="expr" as="xs:string">1 or 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") or 0</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") or 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 or xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">0 or xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("") or 0)</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("") or 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(0 or xs:anyURI(""))</x:label>
      <x:variable name="expr" as="xs:string">not(0 or xs:anyURI(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") or 0</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") or 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 or xs:untypedAtomic("a string")</x:label>
      <x:variable name="expr" as="xs:string">0 or xs:untypedAtomic("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() or (0, current-time())[1] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">true() or (0, current-time())[1] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, current-time())[1] treat as xs:integer or true()</x:label>
      <x:variable name="expr" as="xs:string">(0, current-time())[1] treat as xs:integer or true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() or 0</x:label>
      <x:variable name="expr" as="xs:string">current-date() or 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0 or current-date()</x:label>
      <x:variable name="expr" as="xs:string">0 or current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() or current-date()</x:label>
      <x:variable name="expr" as="xs:string">current-date() or current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() and current-date()</x:label>
      <x:variable name="expr" as="xs:string">current-date() and current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 and current-date()</x:label>
      <x:variable name="expr" as="xs:string">1 and current-date()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() and 1</x:label>
      <x:variable name="expr" as="xs:string">current-date() and 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) or false()</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) or false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>false() or count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">false() or count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) or count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) or count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 2, 3, current-time())[1] treat as xs:integer) or boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 2, 3, current-time())[1] treat as xs:integer) or boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 2, 3, current-time())[1] treat as xs:integer) and true()</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 2, 3, current-time())[1] treat as xs:integer) and true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() or boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">true() or boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("" and 0)</x:label>
      <x:variable name="expr" as="xs:string">not("" and 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 and 1</x:label>
      <x:variable name="expr" as="xs:string">1 and 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>10.3 and "non-zero length string"</x:label>
      <x:variable name="expr" as="xs:string">10.3 and "non-zero length string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 and 5</x:label>
      <x:variable name="expr" as="xs:string">1 and 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not((1, current-time())[1] treat as xs:integer and false())</x:label>
      <x:variable name="expr" as="xs:string">not((1, current-time())[1] treat as xs:integer and false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(false() and (1, current-time())[1] treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">not(false() and (1, current-time())[1] treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") and xs:anyURI("example.com/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") and xs:anyURI("example.com/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("example.com/") and xs:anyURI(""))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("example.com/") and xs:anyURI(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:anyURI("") and xs:anyURI("example.com/"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:anyURI("") and xs:anyURI("example.com/"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") and xs:untypedAtomic("a string")</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") and xs:untypedAtomic("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:untypedAtomic("a string") and xs:untypedAtomic(""))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:untypedAtomic("a string") and xs:untypedAtomic(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) and true()</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) and true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() and count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">true() and count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2, 3, timezone-from-time(current-time()), 4)) and count((1, 2, 3, timezone-from-time(current-time()), 4))</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2, 3, timezone-from-time(current-time()), 4)) and count((1, 2, 3, timezone-from-time(current-time()), 4))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 2, 3, current-time())[1] treat as xs:integer) and boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 2, 3, current-time())[1] treat as xs:integer) and boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>boolean((1, 2, 3, current-time())[1] treat as xs:integer) and true()</x:label>
      <x:variable name="expr" as="xs:string">boolean((1, 2, 3, current-time())[1] treat as xs:integer) and true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() and boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">true() and boolean((1, 2, 3, current-time())[1] treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string is ok" and QName("", "local")</x:label>
      <x:variable name="expr" as="xs:string">"a string is ok" and QName("", "local")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string is ok" or QName("", "local")</x:label>
      <x:variable name="expr" as="xs:string">"a string is ok" or QName("", "local")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 OR 0</x:label>
      <x:variable name="expr" as="xs:string">1 OR 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 AND 0</x:label>
      <x:variable name="expr" as="xs:string">1 AND 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/ParenthesizedExpr.xml">
    <x:scenario>
      <x:label>(1 + 2) * 3</x:label>
      <x:variable name="expr" as="xs:string">(1 + 2) * 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 + (2 * 3)</x:label>
      <x:variable name="expr" as="xs:string">1 + (2 * 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>-(2 + 5)</x:label>
      <x:variable name="expr" as="xs:string">-(2 + 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(-2) + 5</x:label>
      <x:variable name="expr" as="xs:string">(-2) + 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 + (4 idiv 2)</x:label>
      <x:variable name="expr" as="xs:string">2 + (4 idiv 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(2 + 4) idiv 2</x:label>
      <x:variable name="expr" as="xs:string">(2 + 4) idiv 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 * (5 mod 3)</x:label>
      <x:variable name="expr" as="xs:string">2 * (5 mod 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(2 * 5) mod 3</x:label>
      <x:variable name="expr" as="xs:string">(2 * 5) mod 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true() or fn:true()) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(fn:true() or fn:true()) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:true() or (fn:true() and fn:false())</x:label>
      <x:variable name="expr" as="xs:string">fn:true() or (fn:true() and fn:false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in (1,2) return (if (($x eq 1)) then ($x) else ($x + 1))</x:label>
      <x:variable name="expr" as="xs:string">for $x in (1,2) return (if (($x eq 1)) then ($x) else ($x + 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1)</x:label>
      <x:variable name="expr" as="xs:string">(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, (2, (3, 4)), (5))</x:label>
      <x:variable name="expr" as="xs:string">(1, (2, (3, 4)), (5))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(.)</x:label>
      <x:variable name="expr" as="xs:string">(.)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/PathExpr.xml">
    <x:scenario>
      <x:label>fn:count(.[5 * /])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[5 * /])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[(/) * 5])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[(/) * 5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/ * 5])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/ * 5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[(/) &lt; 5])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[(/) &lt; 5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/ &lt; 5])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/ &lt; 5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[5&lt;/])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[5&lt;/])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/ &lt; a])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/ &lt; a])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/ &lt; /b])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/ &lt; /b])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/&lt;a div 3])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/&lt;a div 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[if (doclevel) then / else /*])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[if (doclevel) then / else /*])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/ instance of document-node(schema-element(x))])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/ instance of document-node(schema-element(x))])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[let $doc := / return $doc/*])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[let $doc := / return $doc/*])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(.[/-5])</x:label>
      <x:variable name="expr" as="xs:string">fn:count(.[/-5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/Predicate.xml">
    <x:scenario>
      <x:label>(/works/employee[xs:integer(hours[1]) gt 20])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[xs:integer(hours[1]) gt 20])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[. mod 2 eq 0])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[. mod 2 eq 0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[25])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[25])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//empnum | (/))//employee[xs:integer(hours[1]) gt 20]</x:label>
      <x:variable name="expr" as="xs:string">(//empnum | (/))//employee[xs:integer(hours[1]) gt 20]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//employee[fn:last()])</x:label>
      <x:variable name="expr" as="xs:string">(//employee[fn:last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[. ge 10])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[. ge 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[. lt 10])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[. lt 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[. le 10])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[. le 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 25)[. eq 10])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 25)[. eq 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 11)[. ne 10])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 11)[. ne 10])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 11)[(. eq 10) and (. mod 5 eq 0)])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 11)[(. eq 10) and (. mod 5 eq 0)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1 to 11)[(. eq 10) or (. eq 5)])</x:label>
      <x:variable name="expr" as="xs:string">((1 to 11)[(. eq 10) or (. eq 5)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,4,5,6,7,8,9,10,11)[(. div 2 eq 5)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,4,5,6,7,8,9,10,11)[(. div 2 eq 5)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,4,5,6,7,8,9,10,11)[(. * 2 eq 10)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,4,5,6,7,8,9,10,11)[(. * 2 eq 10)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,4,5,6,7,8,9,10,11)[(. + 2 eq 10)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,4,5,6,7,8,9,10,11)[(. + 2 eq 10)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,4,5,6,7,8,9,10,11)[(. - 2 eq 6)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,4,5,6,7,8,9,10,11)[(. - 2 eq 6)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,4,5,6,7,8,9,10,11)[(. idiv 2 eq 3)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,4,5,6,7,8,9,10,11)[(. idiv 2 eq 3)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,3,4,5,6,7,8,9,10,11)[(xs:string(.) eq "3")])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,3,4,5,6,7,8,9,10,11)[(xs:string(.) eq "3")])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,3,4,5,6,7,8,9,10,11)[. gt 1][. gt 5])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,3,4,5,6,7,8,9,10,11)[. gt 1][. gt 5])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,3,4,5,6,7,8,9,10,11)[(. gt 1) and (. gt 2)][(. gt 5) and (. gt 6)])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,3,4,5,6,7,8,9,10,11)[(. gt 1) and (. gt 2)][(. gt 5) and (. gt 6)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((1,2,3,4,5,6,7,8,9,10,11)[fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">((1,2,3,4,5,6,7,8,9,10,11)[fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count(((1,2,3,4,5,6,7,8,9,10,11)[fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(((1,2,3,4,5,6,7,8,9,10,11)[fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[4])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[4])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[0.1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[0.1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[1.1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[1.1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[1.01])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[1.01])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[4])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[4.1])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[4.1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[4.01])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[4.01])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty((1, 2, 3)[1]))</x:label>
      <x:variable name="expr" as="xs:string">not(empty((1, 2, 3)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(empty((1, 2, 3)[3]))</x:label>
      <x:variable name="expr" as="xs:string">not(empty((1, 2, 3)[3]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1.0] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1.0] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1.0e0] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1.0e0] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[3] eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[3] eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[3.0] eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[3.0] eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[3.0e0] eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[3.0e0] eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[2] eq 1</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[2] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[3] eq 2</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[3] eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0)[1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0)[1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>0[1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">0[1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1)[1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0, 1)[1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[false()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[true()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[. instance of xs:integer])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[. instance of xs:integer])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((true(), true(), true()), (false(), true(), true(), false(), true(), false())[.])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((true(), true(), true()), (false(), true(), true(), false(), true(), false())[.])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((2, 3, 4, 5, 7, 8, 9), (0, 2, 3, 4, 5, 5, 7, 8, 10 - 1)[.])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((2, 3, 4, 5, 7, 8, 9), (0, 2, 3, 4, 5, 5, 7, 8, 10 - 1)[.])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1[true()] eq 1</x:label>
      <x:variable name="expr" as="xs:string">1[true()] eq 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, current-time())[1]</x:label>
      <x:variable name="expr" as="xs:string">(1, current-time())[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[xs:anyURI("example.com/")])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[xs:anyURI("example.com/")])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[(xs:anyURI("example.com/"), xs:anyURI("example.com/"))]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[(xs:anyURI("example.com/"), xs:anyURI("example.com/"))]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[xs:untypedAtomic("content")])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[xs:untypedAtomic("content")])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[(xs:untypedAtomic("content"), xs:untypedAtomic("content"))]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[(xs:untypedAtomic("content"), xs:untypedAtomic("content"))]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[true()][1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[true()][1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[position() eq 2 or position() eq 3][2] eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[position() eq 2 or position() eq 3][2] eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[position() eq 2 or position() eq 3][3])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[position() eq 2 or position() eq 3][3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[2 or 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[2 or 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[3][2])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[3][2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[3][0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[3][0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 2, 4, 5)[1][1][1][true()][1][true()][1] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0, 2, 4, 5)[1][1][1][true()][1][true()][1] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[3e8])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[3e8])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((0, 1, 2)[false()][1])</x:label>
      <x:variable name="expr" as="xs:string">empty((0, 1, 2)[false()][1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(("a", "b", "c"), (0, 1, 2, "a", "b", "c")[. instance of xs:string])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(("a", "b", "c"), (0, 1, 2, "a", "b", "c")[. instance of xs:string])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((0, 1, 2, "a", "b", "c")[. instance of xs:string][. treat as xs:string eq "c"] treat as xs:string) eq "c"</x:label>
      <x:variable name="expr" as="xs:string">((0, 1, 2, "a", "b", "c")[. instance of xs:string][. treat as xs:string eq "c"] treat as xs:string) eq "c"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>((0, 1, 2, "a", "b", "c")[. instance of xs:integer][. treat as xs:integer eq 0] treat as xs:integer) eq 0</x:label>
      <x:variable name="expr" as="xs:string">((0, 1, 2, "a", "b", "c")[. instance of xs:integer][. treat as xs:integer eq 0] treat as xs:integer) eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2, "a", "b", "c")[. instance of xs:integer][. eq "c"] eq 0</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2, "a", "b", "c")[. instance of xs:integer][. eq "c"] eq 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[()])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[()])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[last()])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[1])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[position()])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[count(remove((current-time(), 1), 1)) eq 1])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[count(remove((current-time(), 1), 1)) eq 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[position() &gt;= 1])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[position() &gt;= 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[3 &gt;= position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[3 &gt;= position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[position() ge 1])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[position() ge 1])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[3 ge position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[3 ge position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, 1, 2), (0, 1, 2)[position() eq position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, 1, 2), (0, 1, 2)[position() eq position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, 1, 2), (0, 1, 2)[position() = position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, 1, 2), (0, 1, 2)[position() = position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[1 eq position()]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[1 eq position()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[3 eq position()]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[3 eq position()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[position() eq 3]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[position() eq 3]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2, 3), (1, 2, 3)[number(.)])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2, 3), (1, 2, 3)[number(.)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2), (0, 1, 2)[if(. eq 1) then 2 else 3])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2), (0, 1, 2)[if(. eq 1) then 2 else 3])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, 1, 2), (0, 1, 2)[if(. eq 8) then "str" else position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, 1, 2), (0, 1, 2)[if(. eq 8) then "str" else position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, 1, 2), (0, 1, 2)[if(. eq 8) then 0 else position()])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, 1, 2), (0, 1, 2)[if(. eq 8) then 0 else position()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[last()]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, "2")[last()]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, "2")[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>2 eq (0, 1, "2")[last()]</x:label>
      <x:variable name="expr" as="xs:string">2 eq (0, 1, "2")[last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((())[last()])</x:label>
      <x:variable name="expr" as="xs:string">empty((())[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(()[last()])</x:label>
      <x:variable name="expr" as="xs:string">empty(()[last()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[. eq 0]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[. eq 0]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[. eq 1]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[. eq 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[. eq 2]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[. eq 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((0, 1, 2), (0, 1, 2)[. eq 0 or . eq 1 or . eq 2])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((0, 1, 2), (0, 1, 2)[. eq 0 or . eq 1 or . eq 2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(0, 1, 2)[remove((1, "a string"), 2)]</x:label>
      <x:variable name="expr" as="xs:string">(0, 1, 2)[remove((1, "a string"), 2)]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((1, 2), (1, 2)[remove((true(), "a string"), 2)])</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((1, 2), (1, 2)[remove((true(), "a string"), 2)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[remove((false(), "a string"), 2)])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[remove((false(), "a string"), 2)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3)[remove((false(), "a string"), 2)])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3)[remove((false(), "a string"), 2)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(current-time()[2])</x:label>
      <x:variable name="expr" as="xs:string">empty(current-time()[2])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1, 2, 3, current-time())[0])</x:label>
      <x:variable name="expr" as="xs:string">empty((1, 2, 3, current-time())[0])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(remove((1, 2, 3, current-time()), 4)[false()])</x:label>
      <x:variable name="expr" as="xs:string">empty(remove((1, 2, 3, current-time()), 4)[false()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal(remove((1, 2, 3, current-time()), 4)[true()], (1, 2, 3))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal(remove((1, 2, 3, current-time()), 4)[true()], (1, 2, 3))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[(last(), last())[2]]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[(last(), last())[2]]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[xs:hexBinary("FF")]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[xs:hexBinary("FF")]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1, 2]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1, 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)[1, "a string"]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)[1, "a string"]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3)["a string", 1]</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3)["a string", 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>/works/employee[@name=/works/employee[1]/@name]/@name/string()</x:label>
      <x:variable name="expr" as="xs:string">/works/employee[@name=/works/employee[1]/@name]/@name/string()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty((1,2,3,4,5)[3.4])</x:label>
      <x:variable name="expr" as="xs:string">empty((1,2,3,4,5)[3.4])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:not(fn:false())])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:not(fn:false())])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:true() and fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:true() and fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:true() or fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:true() or fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false() and fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false() and fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false() or fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false() or fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/string[xs:string(.) = "A String Function"])</x:label>
      <x:variable name="expr" as="xs:string">(/root/string[xs:string(.) = "A String Function"])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/integer[xs:integer(.) = 12678967543233])</x:label>
      <x:variable name="expr" as="xs:string">(/root/integer[xs:integer(.) = 12678967543233])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/decimal[xs:decimal(.) = 12678967.543233])</x:label>
      <x:variable name="expr" as="xs:string">(/root/decimal[xs:decimal(.) = 12678967.543233])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/float[xs:float(.) = xs:float(1267.43233E12)])</x:label>
      <x:variable name="expr" as="xs:string">(/root/float[xs:float(.) = xs:float(1267.43233E12)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/double[xs:double(.) = 1267.43233E12])</x:label>
      <x:variable name="expr" as="xs:string">(/root/double[xs:double(.) = 1267.43233E12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/boolean[xs:boolean(.) = fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(/root/boolean[xs:boolean(.) = fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/date[xs:date(.) = xs:date("2000-01-01+05:00")])</x:label>
      <x:variable name="expr" as="xs:string">(/root/date[xs:date(.) = xs:date("2000-01-01+05:00")])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works/employee[@name="Jane Doe 11"])</x:label>
      <x:variable name="expr" as="xs:string">(/works/employee[@name="Jane Doe 11"])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//day[xs:string(.) ne "Monday"])</x:label>
      <x:variable name="expr" as="xs:string">(/works//day[xs:string(.) ne "Monday"])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) lt 13])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) lt 13])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) le 12])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) le 12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) gt 79])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) gt 79])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) ge 80])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) ge 80])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) = 12])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) = 12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works[1]//employee[empnum != "E1" and empnum != "E4"])</x:label>
      <x:variable name="expr" as="xs:string">(/works[1]//employee[empnum != "E1" and empnum != "E4"])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) &gt; 79])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) &gt; 79])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/works//hours[xs:integer(.) &gt;= 80])</x:label>
      <x:variable name="expr" as="xs:string">(/works//hours[xs:integer(.) &gt;= 80])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /works/employee[fn:position() lt 5][fn:position() mod 2 eq 1] return (fn:data($x/empnum), fn:data($x/pnum))</x:label>
      <x:variable name="expr" as="xs:string">for $x in /works/employee[fn:position() lt 5][fn:position() mod 2 eq 1] return (fn:data($x/empnum), fn:data($x/pnum))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $x in /works/employee[fn:position() mod 2 eq 1][fn:position() lt 5] return (fn:data($x/empnum), fn:data($x/pnum))</x:label>
      <x:variable name="expr" as="xs:string">for $x in /works/employee[fn:position() mod 2 eq 1][fn:position() lt 5] return (fn:data($x/empnum), fn:data($x/pnum))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:true()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:true()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:not(fn:false())])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:not(fn:false())])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:true() and fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:true() and fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(//integer[fn:true() or fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(//integer[fn:true() or fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false() and fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false() and fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:count((//integer[fn:false() or fn:false()]))</x:label>
      <x:variable name="expr" as="xs:string">fn:count((//integer[fn:false() or fn:false()]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/string[xs:string(.) = "A String Function"])</x:label>
      <x:variable name="expr" as="xs:string">(/root/string[xs:string(.) = "A String Function"])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/integer[xs:integer(.) = 12678967543233])</x:label>
      <x:variable name="expr" as="xs:string">(/root/integer[xs:integer(.) = 12678967543233])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/decimal[(xs:decimal(.) = 12678967.543233)])</x:label>
      <x:variable name="expr" as="xs:string">(/root/decimal[(xs:decimal(.) = 12678967.543233)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/float[xs:float(.) = xs:float(1267.43233E12)])</x:label>
      <x:variable name="expr" as="xs:string">(/root/float[xs:float(.) = xs:float(1267.43233E12)])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/double[xs:double(.) = 1267.43233E12])</x:label>
      <x:variable name="expr" as="xs:string">(/root/double[xs:double(.) = 1267.43233E12])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/boolean[xs:boolean(.) = fn:true()])</x:label>
      <x:variable name="expr" as="xs:string">(/root/boolean[xs:boolean(.) = fn:true()])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(/root/date[xs:date(.) = xs:date("2000-01-01+05:00")])</x:label>
      <x:variable name="expr" as="xs:string">(/root/date[xs:date(.) = xs:date("2000-01-01+05:00")])</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"c"[. treat as xs:string]</x:label>
      <x:variable name="expr" as="xs:string">"c"[. treat as xs:string]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/QuantifiedExpr.xml">
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x + $x = 3</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x + $x = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x + $x = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x + $x = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x - 2 = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x - 2 = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x - 2 = 0</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x - 2 = 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x * 2 = 4</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x * 2 = 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x div 2 = 1</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x div 2 = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x idiv 2 = 1</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x idiv 2 = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:avg(($x, 1)) = 1</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:avg(($x, 1)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:string($x) = "1"</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:string($x) = "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:string-length(xs:string($x)) = 1</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:string-length(xs:string($x)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:count(($x)) = 1</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:count(($x)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:true()</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:false()</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:not($x)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:not($x)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x = 1 or $x = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x = 1 or $x = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies $x = 1 and ($x +1) = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies $x = 1 and ($x +1) = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in ("A","B","C") satisfies $x = "A"</x:label>
      <x:variable name="expr" as="xs:string">some $x in ("A","B","C") satisfies $x = "A"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies $x + $y = 5</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies $x + $y = 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies $x - $y = 5</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies $x - $y = 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies $x * $y = 10</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies $x * $y = 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies $x div $y = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies $x div $y = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies $x idiv $y = 2</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies $x idiv $y = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies fn:string($x) = fn:string($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies fn:string($x) = fn:string($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies xs:integer($x) = xs:integer($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies xs:integer($x) = xs:integer($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies xs:decimal($x) = xs:decimal($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies xs:decimal($x) = xs:decimal($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies xs:float($x) = xs:float($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies xs:float($x) = xs:float($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1,2,3), $y in (4,5,6) satisfies xs:double($x) = xs:double($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1,2,3), $y in (4,5,6) satisfies xs:double($x) = xs:double($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in ("true", "false"), $y in ("false","true") satisfies xs:boolean($x) = xs:boolean($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in ("true", "false"), $y in ("false","true") satisfies xs:boolean($x) = xs:boolean($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in ("1980-05-05T13:13:13Z", "1980-05-05T13:13:13Z"), $y in ("1980-05-05T13:13:13Z","1980-05-05T13:13:13Z") satisfies xs:dateTime($x) = xs:dateTime($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in ("1980-05-05T13:13:13Z", "1980-05-05T13:13:13Z"), $y in ("1980-05-05T13:13:13Z","1980-05-05T13:13:13Z") satisfies xs:dateTime($x) = xs:dateTime($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in ("1985-07-05Z", "1985-07-05Z"), $y in ("1985-07-05Z","1985-07-05Z") satisfies xs:date($x) = xs:date($y)</x:label>
      <x:variable name="expr" as="xs:string">some $x in ("1985-07-05Z", "1985-07-05Z"), $y in ("1985-07-05Z","1985-07-05Z") satisfies xs:date($x) = xs:date($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x + $x = 3</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x + $x = 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 1) satisfies $x + $x = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 1) satisfies $x + $x = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x - 2 = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x - 2 = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (2, 2) satisfies $x - 2 = 0</x:label>
      <x:variable name="expr" as="xs:string">every $x in (2, 2) satisfies $x - 2 = 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x * 2 = 4</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x * 2 = 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x div 2 = 1</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x div 2 = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x idiv 2 = 1</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x idiv 2 = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:avg(($x, 1)) = 1</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:avg(($x, 1)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:string($x) = "1"</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:string($x) = "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:string-length(xs:string($x)) = 1</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:string-length(xs:string($x)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:count(($x)) = 1</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:count(($x)) = 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:true()</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1, 2) satisfies fn:false()</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1, 2) satisfies fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies fn:not($x)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies fn:not($x)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x = 1 or $x = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x = 1 or $x = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1, 2) satisfies $x = 1 and ($x +1) = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1, 2) satisfies $x = 1 and ($x +1) = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in ("A","B","C") satisfies $x = "A"</x:label>
      <x:variable name="expr" as="xs:string">every $x in ("A","B","C") satisfies $x = "A"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies $x + $y = 5</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies $x + $y = 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies $x - $y = 5</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies $x - $y = 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies $x * $y = 10</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies $x * $y = 10</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies $x div $y = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies $x div $y = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies $x idiv $y = 2</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies $x idiv $y = 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies fn:string($x) = fn:string($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies fn:string($x) = fn:string($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies xs:integer($x) = xs:integer($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies xs:integer($x) = xs:integer($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies xs:decimal($x) = xs:decimal($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies xs:decimal($x) = xs:decimal($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies xs:float($x) = xs:float($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies xs:float($x) = xs:float($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1,2,3), $y in (4,5,6) satisfies xs:double($x) = xs:double($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1,2,3), $y in (4,5,6) satisfies xs:double($x) = xs:double($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in ("true", "false"), $y in ("false","true") satisfies xs:boolean($x) = xs:boolean($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in ("true", "false"), $y in ("false","true") satisfies xs:boolean($x) = xs:boolean($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in ("1980-05-05T13:13:13Z", "1980-05-05T13:13:13Z"), $y in ("1980-05-05T13:13:13Z","1980-05-05T13:13:13Z") satisfies xs:dateTime($x) = xs:dateTime($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in ("1980-05-05T13:13:13Z", "1980-05-05T13:13:13Z"), $y in ("1980-05-05T13:13:13Z","1980-05-05T13:13:13Z") satisfies xs:dateTime($x) = xs:dateTime($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in ("1985-07-05Z", "1985-07-05Z"), $y in ("1985-07-05Z","1985-07-05Z") satisfies xs:date($x) = xs:date($y)</x:label>
      <x:variable name="expr" as="xs:string">every $x in ("1985-07-05Z", "1985-07-05Z"), $y in ("1985-07-05Z","1985-07-05Z") satisfies xs:date($x) = xs:date($y)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies QName("example.com/", "ncname")</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies QName("example.com/", "ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies QName("example.com/", "ncname")</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies QName("example.com/", "ncname")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies $foo eq "1"</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies $foo eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies $foo eq "1"</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies $foo eq "1"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $i in (0, 2, 3) satisfies count($i)</x:label>
      <x:variable name="expr" as="xs:string">some $i in (0, 2, 3) satisfies count($i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $i in (1, 2, 3) satisfies count($i)</x:label>
      <x:variable name="expr" as="xs:string">every $i in (1, 2, 3) satisfies count($i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $i in subsequence((0, 1, 2, current-time()), 1, 3) satisfies boolean($i treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">some $i in subsequence((0, 1, 2, current-time()), 1, 3) satisfies boolean($i treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $i in subsequence((1, 2, 3, current-time()), 1, 3) satisfies boolean($i treat as xs:integer)</x:label>
      <x:variable name="expr" as="xs:string">every $i in subsequence((1, 2, 3, current-time()), 1, 3) satisfies boolean($i treat as xs:integer)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $i in () satisfies $i</x:label>
      <x:variable name="expr" as="xs:string">every $i in () satisfies $i</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(some $i in () satisfies $i)</x:label>
      <x:variable name="expr" as="xs:string">not(some $i in () satisfies $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies true()</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies true()</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(some $foo in 1 satisfies false())</x:label>
      <x:variable name="expr" as="xs:string">not(some $foo in 1 satisfies false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $foo in 1 satisfies false())</x:label>
      <x:variable name="expr" as="xs:string">not(every $foo in 1 satisfies false())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies "a string"</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies "a string"</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $var in (true(), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">every $var in (true(), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (true(), false(), true()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (true(), false(), true()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (false(), true(), true()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (false(), true(), true()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (true(), true(), false()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (true(), true(), false()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), false(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), false(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (false(), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (false(), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), true(), false()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), true(), false()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(some $var in (false(), false(), false()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(some $var in (false(), false(), false()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $var in (xs:hexBinary("FF"), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">every $var in (xs:hexBinary("FF"), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $var in (true(), xs:hexBinary("FF"), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">every $var in (true(), xs:hexBinary("FF"), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $var in (true(), true(), xs:hexBinary("FF")) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">every $var in (true(), true(), xs:hexBinary("FF")) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (xs:hexBinary("FF"), false(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (xs:hexBinary("FF"), false(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (false(), xs:hexBinary("FF"), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (false(), xs:hexBinary("FF"), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), true(), xs:hexBinary("FF")) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), true(), xs:hexBinary("FF")) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (false(), true(), true()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (false(), true(), true()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (true(), false(), true()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (true(), false(), true()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (true(), true(), false()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (true(), true(), false()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), false(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), false(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (false(), true(), true()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (false(), true(), true()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (true(), true(), false()) satisfies $var</x:label>
      <x:variable name="expr" as="xs:string">some $var in (true(), true(), false()) satisfies $var</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(some $var in (false(), false(), false()) satisfies $var)</x:label>
      <x:variable name="expr" as="xs:string">not(some $var in (false(), false(), false()) satisfies $var)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (1, 2, 3) satisfies $var eq 3</x:label>
      <x:variable name="expr" as="xs:string">some $var in (1, 2, 3) satisfies $var eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (1, 2, 3) satisfies $var eq 3)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (1, 2, 3) satisfies $var eq 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $var in (1, 2, 3) satisfies $var eq 1 or $var eq 2 or $var eq 3</x:label>
      <x:variable name="expr" as="xs:string">every $var in (1, 2, 3) satisfies $var eq 1 or $var eq 2 or $var eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (1, 2, 3) satisfies $var eq 1 or $var eq 2 or $var eq 3</x:label>
      <x:variable name="expr" as="xs:string">some $var in (1, 2, 3) satisfies $var eq 1 or $var eq 2 or $var eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $aaa in (1, 2, 3), $bbb in (3, 2, 1) satisfies $aaa + $bbb eq 4</x:label>
      <x:variable name="expr" as="xs:string">some $aaa in (1, 2, 3), $bbb in (3, 2, 1) satisfies $aaa + $bbb eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $aaa in (3, 3, 3), $bbb in (3, 3, 3) satisfies $aaa + $bbb eq 6</x:label>
      <x:variable name="expr" as="xs:string">every $aaa in (3, 3, 3), $bbb in (3, 3, 3) satisfies $aaa + $bbb eq 6</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(every $var in (1, 2, 3) satisfies $var eq 3)</x:label>
      <x:variable name="expr" as="xs:string">not(every $var in (1, 2, 3) satisfies $var eq 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $var in (1, 2, 3) satisfies $var eq 3</x:label>
      <x:variable name="expr" as="xs:string">some $var in (1, 2, 3) satisfies $var eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (some $a in 1 satisfies $a)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (some $a in 1 satisfies $a)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (every $a in 1 satisfies $a)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (every $a in 1 satisfies $a)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (some $fn:name in (1, 2) satisfies $fn:name)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (some $fn:name in (1, 2) satisfies $fn:name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (some $xs:name in (1, 2) satisfies $xs:name)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (some $xs:name in (1, 2) satisfies $xs:name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (every $fn:name in (1, 2) satisfies $fn:name)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (every $fn:name in (1, 2) satisfies $fn:name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>true() eq (every $xs:name in (1, 2) satisfies $xs:name)</x:label>
      <x:variable name="expr" as="xs:string">true() eq (every $xs:name in (1, 2) satisfies $xs:name)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies $NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies $NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies $NOTEXIST</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies $NOTEXIST</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in (1, $foo) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in (1, $foo) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in (1, $foo) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in (1, $foo) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies $bar + (some $bar in 2 satisfies $bar)</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies $bar + (some $bar in 2 satisfies $bar)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies $bar + (some $bar in 2 satisfies $bar)</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies $bar + (some $bar in 2 satisfies $bar)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in 1 satisfies $bar + (every $bar in 2 satisfies $bar)</x:label>
      <x:variable name="expr" as="xs:string">every $foo in 1 satisfies $bar + (every $bar in 2 satisfies $bar)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in 1 satisfies $bar + (every $bar in 2 satisfies $bar)</x:label>
      <x:variable name="expr" as="xs:string">some $foo in 1 satisfies $bar + (every $bar in 2 satisfies $bar)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $a</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $b</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $c</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $c</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $a</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $b</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $c</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2), $b in (1, 2), $c in (1, 2) satisfies 1, $c</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in (1, $2) return 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in (1, $2) return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in (1, $2) return 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in (1, $2) return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in (1, 2, $foo) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in (1, 2, $foo) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in (1, $foo, 3) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in (1, $foo, 3) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in ($foo, 2, 3) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in ($foo, 2, 3) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $foo in $foo satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">some $foo in $foo satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in (1, 2, $foo) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in (1, 2, $foo) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in (1, $foo, 3) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in (1, $foo, 3) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in ($foo, 2, 3) satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in ($foo, 2, 3) satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $foo in $foo satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $foo in $foo satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in 1, $b in $b satisfies 1</x:label>
      <x:variable name="expr" as="xs:string">every $a in 1, $b in $b satisfies 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2, 3), $b in (1, 2, 3, $b) satisfies $a eq $b</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2, 3), $b in (1, 2, 3, $b) satisfies $a eq $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2, 3), $b in (1, 2, 3, $b) satisfies ($a eq $b)</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2, 3), $b in (1, 2, 3, $b) satisfies ($a eq $b)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2), $b in (1, 2) satisfies 1, $b</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2), $b in (1, 2) satisfies 1, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2), $b in (1, 2) satisfies 1, $b</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2), $b in (1, 2) satisfies 1, $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2, 3), $b in ($a, 4) satisfies $b gt 0</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2, 3), $b in ($a, 4) satisfies $b gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2, 3), $b in ($a, 4) satisfies $b gt 0</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2, 3), $b in ($a, 4) satisfies $b gt 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a in (1, 2), $b in $a satisfies $b</x:label>
      <x:variable name="expr" as="xs:string">every $a in (1, 2), $b in $a satisfies $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a in (1, 2), $b in $a satisfies $b</x:label>
      <x:variable name="expr" as="xs:string">some $a in (1, 2), $b in $a satisfies $b</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>deep-equal((for $a in 1, $b in $a, $c in $a, $d in $c return ($a, $b, $c, $d)), (1, 1, 1, 1))</x:label>
      <x:variable name="expr" as="xs:string">deep-equal((for $a in 1, $b in $a, $c in $a, $d in $c return ($a, $b, $c, $d)), (1, 1, 1, 1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $i in (1, 2, 3) satisfies ($i, $i)</x:label>
      <x:variable name="expr" as="xs:string">every $i in (1, 2, 3) satisfies ($i, $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $i in (1, 2, 3) satisfies ($i, $i)</x:label>
      <x:variable name="expr" as="xs:string">some $i in (1, 2, 3) satisfies ($i, $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $i in (1, 2, 3) satisfies ($i, $i)</x:label>
      <x:variable name="expr" as="xs:string">every $i in (1, 2, 3) satisfies ($i, $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $i in (1, 2, 3) satisfies ($i, $i)</x:label>
      <x:variable name="expr" as="xs:string">some $i in (1, 2, 3) satisfies ($i, $i)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $a at $p in (1, 2) satisfies $a</x:label>
      <x:variable name="expr" as="xs:string">some $a at $p in (1, 2) satisfies $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $a at $p in (1, 2) satisfies $a</x:label>
      <x:variable name="expr" as="xs:string">every $a at $p in (1, 2) satisfies $a</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>SOME $i in (1, 2, 3) satisfies $i</x:label>
      <x:variable name="expr" as="xs:string">SOME $i in (1, 2, 3) satisfies $i</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>EVERY $i in (1, 2, 3) satisfies $i</x:label>
      <x:variable name="expr" as="xs:string">EVERY $i in (1, 2, 3) satisfies $i</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $id in attribute::id satisfies $id</x:label>
      <x:variable name="expr" as="xs:string">some $id in attribute::id satisfies $id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1 to 10)[. div 2 = 11] satisfies false()</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1 to 10)[. div 2 = 11] satisfies false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>some $x in (1 to 10)[. div 2 = 11] satisfies true()</x:label>
      <x:variable name="expr" as="xs:string">some $x in (1 to 10)[. div 2 = 11] satisfies true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>every $x in (1 to 10)[. mod 2 = 0] satisfies true()</x:label>
      <x:variable name="expr" as="xs:string">every $x in (1 to 10)[. mod 2 = 0] satisfies true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/ReturnClause.xml">
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return data( $file/FileName )</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return data( $file/FileName )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return $file/parent::Folder/FolderName</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return $file/parent::Folder/FolderName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return 1</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return (//FileName)[1]</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return (//FileName)[1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $folder in //Folder, $file in $folder/File return ( $folder/FolderName, $file/FileName )</x:label>
      <x:variable name="expr" as="xs:string">for $folder in //Folder, $file in $folder/File return ( $folder/FolderName, $file/FileName )</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return $file return $file</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return $file return $file</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return $undefined</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return $undefined</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in for $folder in (//Folder)[1] return $folder/File return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $file in for $folder in (//Folder)[1] return $folder/File return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return ($file/Stream/StreamSize)[1] + 1</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return ($file/Stream/StreamSize)[1] + 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return ($file/Stream/StreamSize)[1] &gt; 1004</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return ($file/Stream/StreamSize)[1] &gt; 1004</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return return $file/FileName</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return return $file/FileName</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>for $file in (//Folder)[1]/File return xs:string( data( $file/FileName[1] ))</x:label>
      <x:variable name="expr" as="xs:string">for $file in (//Folder)[1]/File return xs:string( data( $file/FileName[1] ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>return 1</x:label>
      <x:variable name="expr" as="xs:string">return 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/SequenceType.xml">
    <x:scenario>
      <x:label>(1,2,3) instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">(1,2,3) instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1E3,2E3,3E3) instance of xs:double*</x:label>
      <x:variable name="expr" as="xs:string">(1E3,2E3,3E3) instance of xs:double*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.1,3.2,4.5) instance of xs:decimal*</x:label>
      <x:variable name="expr" as="xs:string">(1.1,3.2,4.5) instance of xs:decimal*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("ab","cde","fgh") instance of xs:string*</x:label>
      <x:variable name="expr" as="xs:string">("ab","cde","fgh") instance of xs:string*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("ab","cde","fgh") instance of xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">("ab","cde","fgh") instance of xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">(1) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2) instance of xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">(1,2) instance of xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2) instance of xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(1,2) instance of xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(2) castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">(2) castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1,2) castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">(1,2) castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1E3) castable as xs:double?</x:label>
      <x:variable name="expr" as="xs:string">(1E3) castable as xs:double?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1E3,2E3) castable as xs:double?</x:label>
      <x:variable name="expr" as="xs:string">(1E3,2E3) castable as xs:double?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.2) castable as xs:decimal?</x:label>
      <x:variable name="expr" as="xs:string">(1.2) castable as xs:decimal?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1.2,2.1) castable as xs:decimal?</x:label>
      <x:variable name="expr" as="xs:string">(1.2,2.1) castable as xs:decimal?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("abc") castable as xs:string?</x:label>
      <x:variable name="expr" as="xs:string">("abc") castable as xs:string?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("abc","def") castable as xs:string?</x:label>
      <x:variable name="expr" as="xs:string">("abc","def") castable as xs:string?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("abc") castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">("abc") castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("abc","def") castable as xs:integer?</x:label>
      <x:variable name="expr" as="xs:string">("abc","def") castable as xs:integer?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false()) instance of xs:boolean*</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false()) instance of xs:boolean*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false()) instance of xs:boolean?</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false()) instance of xs:boolean?</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(fn:true(),fn:false()) instance of xs:boolean+</x:label>
      <x:variable name="expr" as="xs:string">(fn:true(),fn:false()) instance of xs:boolean+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/StepExpr.xml">
    <x:scenario>
      <x:label>(/)/(//)/foo</x:label>
      <x:variable name="expr" as="xs:string">(/)/(//)/foo</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>child::local:b(:ada</x:label>
      <x:variable name="expr" as="xs:string">child::local:b(:ada</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>///</x:label>
      <x:variable name="expr" as="xs:string">///</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/TreatExpr.xml">
    <x:scenario>
      <x:label>3 treat as xs:string</x:label>
      <x:variable name="expr" as="xs:string">3 treat as xs:string</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("3") treat as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:double("3") treat as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("example.com/") treat as xs:float</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("example.com/") treat as xs:float</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3.0 treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">3.0 treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(3) treat as xs:decimal instance of xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(3) treat as xs:decimal instance of xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"3" treat as xs:string eq '3'</x:label>
      <x:variable name="expr" as="xs:string">"3" treat as xs:string eq '3'</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer("3") treat as xs:decimal instance of xs:decimal</x:label>
      <x:variable name="expr" as="xs:string">xs:integer("3") treat as xs:decimal instance of xs:decimal</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 treat as prefixDoesNotExist:integer</x:label>
      <x:variable name="expr" as="xs:string">3 treat as prefixDoesNotExist:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 treat as xs:doesNotExist</x:label>
      <x:variable name="expr" as="xs:string">3 treat as xs:doesNotExist</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 treat as empty-sequence()</x:label>
      <x:variable name="expr" as="xs:string">1 treat as empty-sequence()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("asda" treat as xs:string +) eq "asda"</x:label>
      <x:variable name="expr" as="xs:string">("asda" treat as xs:string +) eq "asda"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>("asda" treat as xs:string *) eq "asda"</x:label>
      <x:variable name="expr" as="xs:string">("asda" treat as xs:string *) eq "asda"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 treat as xs:integer * * 3) eq 9</x:label>
      <x:variable name="expr" as="xs:string">(3 treat as xs:integer * * 3) eq 9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3 treat as xs:integer ? * 3) eq 9</x:label>
      <x:variable name="expr" as="xs:string">(3 treat as xs:integer ? * 3) eq 9</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(4 treat as item() + - 5) = ((4 treat as item()+) - 5)</x:label>
      <x:variable name="expr" as="xs:string">(4 treat as item() + - 5) = ((4 treat as item()+) - 5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 treat as item(</x:label>
      <x:variable name="expr" as="xs:string">3 treat as item(</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(remove((5, 1e0), 2) treat as xs:integer) eq 5</x:label>
      <x:variable name="expr" as="xs:string">(remove((5, 1e0), 2) treat as xs:integer) eq 5</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(3) treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(3) treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 treat as item()+ + +1</x:label>
      <x:variable name="expr" as="xs:string">3 treat as item()+ + +1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>fn:root(self::node()) treat as document-node()/X</x:label>
      <x:variable name="expr" as="xs:string">fn:root(self::node()) treat as document-node()/X</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. mod 2 = 0] treat as xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. mod 2 = 0] treat as xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. mod 2 = 0] treat as xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. mod 2 = 0] treat as xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one((1 to 10)[. div 2 = 1]) treat as xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one((1 to 10)[. div 2 = 1]) treat as xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one((1 to 10)[. div 2 = 1]) treat as xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one((1 to 10)[. div 2 = 1]) treat as xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one((1 to 10)[. div 2 = 1]) treat as xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">exactly-one((1 to 10)[. div 2 = 1]) treat as xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exactly-one((1 to 10)[. div 2 = 1]) treat as xs:integer*</x:label>
      <x:variable name="expr" as="xs:string">exactly-one((1 to 10)[. div 2 = 1]) treat as xs:integer*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1 to 10)[. mod 2 = 0] treat as xs:integer+)</x:label>
      <x:variable name="expr" as="xs:string">count((1 to 10)[. mod 2 = 0] treat as xs:integer+)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>subsequence((1 to 10)[. mod 2 = 0] treat as xs:integer+,1,2)</x:label>
      <x:variable name="expr" as="xs:string">subsequence((1 to 10)[. mod 2 = 0] treat as xs:integer+,1,2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. div 2 = 0] treat as xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. div 2 = 0] treat as xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. mod 2 = 0] treat as xs:negativeInteger+</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. mod 2 = 0] treat as xs:negativeInteger+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. mod 2 = 0] treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. mod 2 = 0] treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1 to 10)[. mod 2 = 0] treat as xs:negativeInteger*</x:label>
      <x:variable name="expr" as="xs:string">(1 to 10)[. mod 2 = 0] treat as xs:negativeInteger*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one((1 to 10)[. div 2 = 0]) treat as xs:integer</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one((1 to 10)[. div 2 = 0]) treat as xs:integer</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>zero-or-one((1 to 10)[. div 2 = 0]) treat as xs:integer+</x:label>
      <x:variable name="expr" as="xs:string">zero-or-one((1 to 10)[. div 2 = 0]) treat as xs:integer+</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/prod/ValueComp.xml">
    <x:scenario>
      <x:label>(1, 2, 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) ne 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) ne 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 ne (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 ne (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) lt 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) lt 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 lt (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 lt (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) le 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) le 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 le (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 le (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) gt 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) gt 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 gt (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 gt (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(1, 2, 3) ge 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) ge 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 ge (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 ge (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() eq 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() eq 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(1 eq ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 eq ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>empty(() eq ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() eq ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("1") eq xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1") eq xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(1) eq xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) eq xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") ne xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") ne xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(1) ne xs:untypedAtomic("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1) ne xs:untypedAtomic("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") lt xs:float(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") lt xs:float(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(0) lt xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(0) lt xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("0") gt xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") gt xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:decimal(0) gt xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(0) gt xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("4") eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("4") eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>4 eq xs:untypedAtomic("4")</x:label>
      <x:variable name="expr" as="xs:string">4 eq xs:untypedAtomic("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("3") eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double(2) lt xs:untypedAtomic("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(2) lt xs:untypedAtomic("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(4) gt xs:untypedAtomic("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(4) gt xs:untypedAtomic("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("3") ne xs:decimal(3.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") ne xs:decimal(3.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:untypedAtomic("a string") eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"a string" eq xs:untypedAtomic("a string")</x:label>
      <x:variable name="expr" as="xs:string">"a string" eq xs:untypedAtomic("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((0, current-time())) ge 1</x:label>
      <x:variable name="expr" as="xs:string">count((0, current-time())) ge 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((0, current-time())) ne 0</x:label>
      <x:variable name="expr" as="xs:string">count((0, current-time())) ne 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(count((1, 2, current-time())) eq 0)</x:label>
      <x:variable name="expr" as="xs:string">not(count((1, 2, current-time())) eq 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() eq 3</x:label>
      <x:variable name="expr" as="xs:string">error() eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>error() eq error()</x:label>
      <x:variable name="expr" as="xs:string">error() eq error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq error()</x:label>
      <x:variable name="expr" as="xs:string">3 eq error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (error(), 3)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (error(), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>3 eq (3, error())</x:label>
      <x:variable name="expr" as="xs:string">3 eq (3, error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(error(), 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(error(), 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>(3, error()) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(3, error()) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count((1, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" eq concat("a", "bc")</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq concat("a", "bc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" eq string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" eq xs:string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq xs:string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>works/@id eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">works/@id eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(/works/@id) eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">string(/works/@id) eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(/works/@id) eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(/works/@id) eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" eq concat("a", "bc"))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq concat("a", "bc"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" eq /works/@id)</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq /works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" eq string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" eq xs:string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq xs:string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(works/@id eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(works/@id eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(/works/@id) eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(string(/works/@id) eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string(/works/@id) eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string(/works/@id) eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(/works/@iddddd eq "")</x:label>
      <x:variable name="expr" as="xs:string">not(/works/@iddddd eq "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" ne concat("a", "bc")</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne concat("a", "bc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" ne /works/@id</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" ne string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"abc" ne xs:string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne xs:string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>works/@id ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">works/@id ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string(/works/@id) ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">string(/works/@id) ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:string(/works/@id) ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(/works/@id) ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" ne concat("a", "bc"))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne concat("a", "bc"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" ne /works/@id)</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne /works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" ne string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not("abc" ne xs:string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne xs:string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(works/@id ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(works/@id ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(string(/works/@id) ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(string(/works/@id) ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(xs:string(/works/@id) ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string(/works/@id) ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>not(/works/@iddddd ne "")</x:label>
      <x:variable name="expr" as="xs:string">not(/works/@iddddd ne "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>13 eq 12+1</x:label>
      <x:variable name="expr" as="xs:string">13 eq 12+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>13 eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">13 eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 eq xs:integer(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:integer(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 eq xs:integer(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:integer(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(/works/employee[830]/hours) eq 40</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(/works/employee[830]/hours) eq 40</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 eq number(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq number(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40 eq xs:double(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:double(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>13e0 eq 12e0+1</x:label>
      <x:variable name="expr" as="xs:string">13e0 eq 12e0+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>13e0 eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">13e0 eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40e0 eq xs:integer(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:integer(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:integer(/works/employee[830]/hours) eq 40e0</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(/works/employee[830]/hours) eq 40e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40e0 eq number(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq number(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/anyURI.xml">
    <x:scenario>
      <x:label>xs:anyURI(())</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI(())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("odd-scheme+1.://www.example.org/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("odd-scheme+1.://www.example.org/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://%0Ad%E2%9C%90%F0%98%9A%A0/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://%0Ad%E2%9C%90%F0%98%9A%A0/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://!$&amp;'()*+,;=/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://!$&amp;'()*+,;=/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/%0Ad%E2%9C%90%F0%98%9A%A0/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/%0Ad%E2%9C%90%F0%98%9A%A0/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/!/$/&amp;/'/(/)/*/+/,/;/=/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/!/$/&amp;/'/(/)/*/+/,/;/=/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/:/@/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/:/@/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/?%0Ad%E2%9C%90%F0%98%9A%A0/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/?%0Ad%E2%9C%90%F0%98%9A%A0/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/?!$&amp;'()*+,;=")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/?!$&amp;'()*+,;=")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/?:@")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/?:@")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/#%0Ad%E2%9C%90%F0%98%9A%A0/")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/#%0Ad%E2%9C%90%F0%98%9A%A0/")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/#!$&amp;'()*+,;=")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/#!$&amp;'()*+,;=")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:anyURI("http://www.example.org/#:@")</x:label>
      <x:variable name="expr" as="xs:string">xs:anyURI("http://www.example.org/#:@")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/base64Binary.xml">
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary(""))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary(""))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("00"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("01"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("01"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("ff"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("ff"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("0000"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("0000"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("00ff"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("00ff"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("80c0"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("80c0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("aabbcc"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("aabbcc"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("010203"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("010203"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("01020304"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("01020304"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("0102030405"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("0102030405"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("010203040506"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("010203040506"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("01020304050607"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("01020304050607"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(xs:hexBinary("0102030405060708090A0B0C0D0E0F10111213131415161718191A1B1C1D1F202122232425262728292A2B2C2D2E2F"))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(xs:hexBinary("0102030405060708090A0B0C0D0E0F10111213131415161718191A1B1C1D1F202122232425262728292A2B2C2D2E2F"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AA=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AA=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQ=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQ=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("/w=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("/w=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AAA="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AAA="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AP8="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AP8="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("gMA="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("gMA="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("qrvM"))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("qrvM"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQID"))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQID"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQIDBA=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQIDBA=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQIDBAU="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQIDBAU="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQIDBAUG"))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQIDBAUG"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQIDBAUGBw=="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQIDBAUGBw=="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary("AQIDBAUGBwgJCgsMDQ4PEBESExMUFRYXGBkaGxwdHyAhIiMkJSYnKCkqKywtLi8="))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary("AQIDBAUGBwgJCgsMDQ4PEBESExMUFRYXGBkaGxwdHyAhIiMkJSYnKCkqKywtLi8="))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary(" AQIDBAUG BwgJCgsM DQ4PEBES ExMUFRYX 
 GBkaGxwdH yAhIiMkJ SYnKCkqK y w t L i 8 = "))</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary(" AQIDBAUG BwgJCgsM DQ4PEBES ExMUFRYX 
 GBkaGxwdH yAhIiMkJ SYnKCkqK y w t L i 8 = "))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("AQI")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("AQI")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("AQ=I")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("AQ=I")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("=AQI")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("=AQI")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("qrvM====")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("qrvM====")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("gMA-")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("gMA-")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("AP9=")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("AP9=")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary("Ay==")</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary("Ay==")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:base64Binary(codepoints-to-string((119070, 119070, 119070, 119070) (:treble clef:)))</x:label>
      <x:variable name="expr" as="xs:string">xs:base64Binary(codepoints-to-string((119070, 119070, 119070, 119070) (:treble clef:)))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>codepoints-to-string((119070, 119070, 119070, 119070) (:treble clef:)) castable as xs:base64Binary</x:label>
      <x:variable name="expr" as="xs:string">codepoints-to-string((119070, 119070, 119070, 119070) (:treble clef:)) castable as xs:base64Binary</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(xs:base64Binary(()))</x:label>
      <x:variable name="expr" as="xs:string">count(xs:base64Binary(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/dateTimeStamp.xml">
    <x:scenario>
      <x:label>exists(fn:timezone-from-dateTime(fn:current-dateTime()))</x:label>
      <x:variable name="expr" as="xs:string">exists(fn:timezone-from-dateTime(fn:current-dateTime()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(fn:timezone-from-dateTime(xs:dateTimeStamp("2011-07-28T12:34:56-08:00")))</x:label>
      <x:variable name="expr" as="xs:string">exists(fn:timezone-from-dateTime(xs:dateTimeStamp("2011-07-28T12:34:56-08:00")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTimeStamp("2011-07-28T12:34:56")</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTimeStamp("2011-07-28T12:34:56")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTimeStamp(xs:dateTime("2011-07-28T12:34:56"))</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTimeStamp(xs:dateTime("2011-07-28T12:34:56"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:dateTimeStamp(xs:date("2011-07-28+01:00"))</x:label>
      <x:variable name="expr" as="xs:string">xs:dateTimeStamp(xs:date("2011-07-28+01:00"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>current-date() castable as xs:dateTimeStamp</x:label>
      <x:variable name="expr" as="xs:string">current-date() castable as xs:dateTimeStamp</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/double.xml">
    <x:scenario>
      <x:label>fn:string(xs:double("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:double("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div xs:double("-0") ne 1 div xs:double("0")</x:label>
      <x:variable name="expr" as="xs:string">1 div xs:double("-0") ne 1 div xs:double("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:double("+INF"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:double("+INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:double("+INF"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:double("+INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:double("2.2250738585072012e-308")</x:label>
      <x:variable name="expr" as="xs:string">xs:double("2.2250738585072012e-308")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/float.xml">
    <x:scenario>
      <x:label>fn:string(xs:float("-0"))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(xs:float("-0"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>1 div xs:float("-0") ne 1 div xs:float("0")</x:label>
      <x:variable name="expr" as="xs:string">1 div xs:float("-0") ne 1 div xs:float("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:float("+INF"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:float("+INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>exists(xs:float("+INF"))</x:label>
      <x:variable name="expr" as="xs:string">exists(xs:float("+INF"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>count(xs:float(()))</x:label>
      <x:variable name="expr" as="xs:string">count(xs:float(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:float(xs:double('-INF')),xs:float(xs:double('INF'))</x:label>
      <x:variable name="expr" as="xs:string">xs:float(xs:double('-INF')),xs:float(xs:double('INF'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/hexBinary.xml">
    <x:scenario>
      <x:label>count(xs:hexBinary(()))</x:label>
      <x:variable name="expr" as="xs:string">count(xs:hexBinary(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/normalizedString.xml">
    <x:scenario>
      <x:label>xs:normalizedString(xs:normalizedString("test"))</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString(xs:normalizedString("test"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString('	')</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString('	')</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString(5)</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString(5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;#x9;" castable as xs:normalizedString</x:label>
      <x:variable name="expr" as="xs:string">"&amp;#x9;" castable as xs:normalizedString</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 castable as xs:normalizedString</x:label>
      <x:variable name="expr" as="xs:string">5 castable as xs:normalizedString</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:normalizedString("test") castable as xs:normalizedString</x:label>
      <x:variable name="expr" as="xs:string">xs:normalizedString("test") castable as xs:normalizedString</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario><x:scenario label="/qt3tests-master/xs/token.xml">
    <x:scenario>
      <x:label>xs:token(xs:token("test"))</x:label>
      <x:variable name="expr" as="xs:string">xs:token(xs:token("test"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>string-length(xs:token('	'))</x:label>
      <x:variable name="expr" as="xs:string">string-length(xs:token('	'))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token(5)</x:label>
      <x:variable name="expr" as="xs:string">xs:token(5)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>"&amp;#x9;" castable as xs:token</x:label>
      <x:variable name="expr" as="xs:string">"&amp;#x9;" castable as xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>5 castable as xs:token</x:label>
      <x:variable name="expr" as="xs:string">5 castable as xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
    <x:scenario>
      <x:label>xs:token("test") castable as xs:token</x:label>
      <x:variable name="expr" as="xs:string">xs:token("test") castable as xs:token</x:variable>
      <x:like label="generic-test"/>
    </x:scenario>
  </x:scenario></x:description>