<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/string-to-codepoints.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:string-to-codepoints(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(xs:string(&#34;This is a characte&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(xs:string("This is a characte"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints('b√ü⁄í„ÅçÔ§Ä')">
      <x:call>
        <x:param select="string(.)">string-to-codepoints('b√ü⁄í„ÅçÔ§Ä')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(())">
      <x:call>
        <x:param select="string(.)">string-to-codepoints(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(12)">
      <x:call>
        <x:param select="string(.)">string-to-codepoints(12)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints('abc','def')">
      <x:call>
        <x:param select="string(.)">string-to-codepoints('abc','def')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints('1')">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints('1')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints('a')">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints('a')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints('1a')">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints('1a')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints('#*^$')">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints('#*^$')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints('string-to-codepoints')">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints('string-to-codepoints')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(xs:string(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(xs:string("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(fn:upper-case(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(fn:upper-case("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:string-to-codepoints(fn:lower-case(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:string-to-codepoints(fn:lower-case("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(fn:string-to-codepoints(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:count(fn:string-to-codepoints("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:avg(fn:string-to-codepoints(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:avg(fn:string-to-codepoints("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:empty(fn:string-to-codepoints(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:empty(fn:string-to-codepoints("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:empty(fn:string-to-codepoints(()))">
      <x:call>
        <x:param select="string(.)">fn:empty(fn:string-to-codepoints(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists(fn:string-to-codepoints(()))">
      <x:call>
        <x:param select="string(.)">fn:exists(fn:string-to-codepoints(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:exists(fn:string-to-codepoints(&#34;A String&#34;))">
      <x:call>
        <x:param select="string(.)">fn:exists(fn:string-to-codepoints("A String"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:deep-equal(fn:string-to-codepoints(&#34;êÄÅêÄÇ&#34;), (65537, 65538))">
      <x:call>
        <x:param select="string(.)">fn:deep-equal(fn:string-to-codepoints("êÄÅêÄÇ"), (65537, 65538))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints()">
      <x:call>
        <x:param select="string(.)">string-to-codepoints()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;str&#34;, &#34;INVALID&#34;)">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("str", "INVALID")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(string-to-codepoints(()))">
      <x:call>
        <x:param select="string(.)">empty(string-to-codepoints(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(string-to-codepoints(&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">empty(string-to-codepoints(""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(string-to-codepoints(&#34;123&#34;)) eq 3">
      <x:call>
        <x:param select="string(.)">count(string-to-codepoints("123")) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(string-to-codepoints(&#34;&#34;)) eq 0">
      <x:call>
        <x:param select="string(.)">count(string-to-codepoints("")) eq 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(string-to-codepoints(&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">empty(string-to-codepoints(""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;e&#34;)">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("e")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="deep-equal(string-to-codepoints(&#34;ee&#34;), (101, 101))">
      <x:call>
        <x:param select="string(.)">deep-equal(string-to-codepoints("ee"), (101, 101))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="deep-equal(string-to-codepoints(&#34;eee&#34;), (101, 101, 101))">
      <x:call>
        <x:param select="string(.)">deep-equal(string-to-codepoints("eee"), (101, 101, 101))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join(for $code in string-to-codepoints(&#34;example.com/&#34;) return string($code), &#34;&#34;) eq &#34;10112097109112108101469911110947&#34;">
      <x:call>
        <x:param select="string(.)">string-join(for $code in string-to-codepoints("example.com/") return string($code), "") eq "10112097109112108101469911110947"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="deep-equal(string-to-codepoints(&#34;Th√©r√®se&#34;), (84, 104, 233, 114, 232, 115, 101))">
      <x:call>
        <x:param select="string(.)">deep-equal(string-to-codepoints("Th√©r√®se"), (84, 104, 233, 114, 232, 115, 101))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoints-to-string((87, 36, 56, 87, 102, 96)) eq &#34;W$8Wf`&#34;">
      <x:call>
        <x:param select="string(.)">codepoints-to-string((87, 36, 56, 87, 102, 96)) eq "W$8Wf`"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[last()]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[last()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[0 + last()]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[0 + last()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[last() - 1]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[last() - 1]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[last() - 0]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[last() - 0]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[0 + last()]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[0 + last()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[last() - 2]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[last() - 2]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(string-to-codepoints(&#34;Th√©r√®se&#34;)[last() - 7])">
      <x:call>
        <x:param select="string(.)">empty(string-to-codepoints("Th√©r√®se")[last() - 7])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;Th√©r√®se&#34;)[last() - 6]">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("Th√©r√®se")[last() - 6]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>