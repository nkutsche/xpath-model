<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/zero-or-one.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:zero-or-one(xs:int(&#34;-2147483648&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:int("-2147483648"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:int(&#34;-1873914410&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:int("-1873914410"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:int(&#34;2147483647&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:int("2147483647"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:integer(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:integer("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:integer(&#34;830993497117024304&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:integer("830993497117024304"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:integer(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:integer("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:decimal(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:decimal("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:decimal(&#34;617375191608514839&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:decimal("617375191608514839"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:decimal(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:decimal("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:double(&#34;-1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:double("-1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:double(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:double("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:double(&#34;1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:double("1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:float(&#34;-3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:float("-3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:float(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:float("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:float(&#34;3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:float("3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:long(&#34;-92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:long("-92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:long(&#34;-47175562203048468&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:long("-47175562203048468"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:long(&#34;92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:long("92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedShort(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedShort("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedShort(&#34;44633&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedShort("44633"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedShort(&#34;65535&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedShort("65535"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:negativeInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:negativeInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:negativeInteger(&#34;-297014075999096793&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:negativeInteger("-297014075999096793"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:negativeInteger(&#34;-1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:negativeInteger("-1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:positiveInteger(&#34;1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:positiveInteger("1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:positiveInteger(&#34;52704602390610033&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:positiveInteger("52704602390610033"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:positiveInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:positiveInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedLong(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedLong("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedLong(&#34;130747108607674654&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedLong("130747108607674654"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:unsignedLong(&#34;184467440737095516&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:unsignedLong("184467440737095516"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonPositiveInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonPositiveInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonPositiveInteger(&#34;-475688437271870490&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonPositiveInteger("-475688437271870490"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonPositiveInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonPositiveInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonNegativeInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonNegativeInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonNegativeInteger(&#34;303884545991464527&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonNegativeInteger("303884545991464527"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:nonNegativeInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:nonNegativeInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:short(&#34;-32768&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:short("-32768"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:short(&#34;-5324&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:short("-5324"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one(xs:short(&#34;32767&#34;))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one(xs:short("32767"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:zero-or-one((1,2))">
      <x:call>
        <x:param select="string(.)">fn:zero-or-one((1,2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="zero-or-one(1, 2)">
      <x:call>
        <x:param select="string(.)">zero-or-one(1, 2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="zero-or-one()">
      <x:call>
        <x:param select="string(.)">zero-or-one()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="zero-or-one(true())">
      <x:call>
        <x:param select="string(.)">zero-or-one(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(zero-or-one(()))">
      <x:call>
        <x:param select="string(.)">empty(zero-or-one(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(zero-or-one( &#34;one&#34; )) eq 1">
      <x:call>
        <x:param select="string(.)">count(zero-or-one( "one" )) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(zero-or-one( () )) eq 0">
      <x:call>
        <x:param select="string(.)">count(zero-or-one( () )) eq 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="zero-or-one(error())">
      <x:call>
        <x:param select="string(.)">zero-or-one(error())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="zero-or-one( (1, 2, 3) )">
      <x:call>
        <x:param select="string(.)">zero-or-one( (1, 2, 3) )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $x in zero-or-one((1 to 10)[. div 2 = 0]) return ()">
      <x:call>
        <x:param select="string(.)">for $x in zero-or-one((1 to 10)[. div 2 = 0]) return ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>