<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/round.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:round(xs:int(&#34;-2147483648&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:int("-2147483648"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:int(&#34;-1873914410&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:int("-1873914410"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:int(&#34;2147483647&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:int("2147483647"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:integer(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:integer("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:integer(&#34;830993497117024304&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:integer("830993497117024304"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:integer(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:integer("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;617375191608514839&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("617375191608514839"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:long(&#34;-92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:long("-92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:long(&#34;-47175562203048468&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:long("-47175562203048468"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:long(&#34;92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:long("92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedShort(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedShort("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedShort(&#34;44633&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedShort("44633"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedShort(&#34;65535&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedShort("65535"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:negativeInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:negativeInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:negativeInteger(&#34;-297014075999096793&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:negativeInteger("-297014075999096793"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:negativeInteger(&#34;-1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:negativeInteger("-1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:positiveInteger(&#34;1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:positiveInteger("1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:positiveInteger(&#34;52704602390610033&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:positiveInteger("52704602390610033"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:positiveInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:positiveInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedLong(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedLong("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedLong(&#34;130747108607674654&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedLong("130747108607674654"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:unsignedLong(&#34;184467440737095516&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:unsignedLong("184467440737095516"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonPositiveInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonPositiveInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonPositiveInteger(&#34;-475688437271870490&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonPositiveInteger("-475688437271870490"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonPositiveInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonPositiveInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonNegativeInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonNegativeInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonNegativeInteger(&#34;303884545991464527&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonNegativeInteger("303884545991464527"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:nonNegativeInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:nonNegativeInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:short(&#34;-32768&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:short("-32768"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:short(&#34;-5324&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:short("-5324"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:short(&#34;32767&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:short("32767"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round()">
      <x:call>
        <x:param select="string(.)">round()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(round(()))">
      <x:call>
        <x:param select="string(.)">empty(round(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(1) eq 1">
      <x:call>
        <x:param select="string(.)">round(1) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(1.1) eq 1">
      <x:call>
        <x:param select="string(.)">round(1.1) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:double(1)) eq 1">
      <x:call>
        <x:param select="string(.)">round(xs:double(1)) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:float(1)) eq 1">
      <x:call>
        <x:param select="string(.)">round(xs:float(1)) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(2.4999) eq 2">
      <x:call>
        <x:param select="string(.)">round(2.4999) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(-2.5) eq -2">
      <x:call>
        <x:param select="string(.)">round(-2.5) eq -2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:unsignedShort(.)) instance of xs:unsignedShort">
      <x:call>
        <x:param select="string(.)">round(xs:unsignedShort(.)) instance of xs:unsignedShort</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:unsignedLong(.)) instance of xs:unsignedLong">
      <x:call>
        <x:param select="string(.)">round(xs:unsignedLong(.)) instance of xs:unsignedLong</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:unsignedInt(.)) instance of xs:unsignedInt">
      <x:call>
        <x:param select="string(.)">round(xs:unsignedInt(.)) instance of xs:unsignedInt</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:unsignedByte(.)) instance of xs:unsignedByte">
      <x:call>
        <x:param select="string(.)">round(xs:unsignedByte(.)) instance of xs:unsignedByte</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:positiveInteger(.)) instance of xs:positiveInteger">
      <x:call>
        <x:param select="string(.)">round(xs:positiveInteger(.)) instance of xs:positiveInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:nonPositiveInteger(.)) instance of xs:nonPositiveInteger">
      <x:call>
        <x:param select="string(.)">round(xs:nonPositiveInteger(.)) instance of xs:nonPositiveInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:nonNegativeInteger(.)) instance of xs:nonNegativeInteger">
      <x:call>
        <x:param select="string(.)">round(xs:nonNegativeInteger(.)) instance of xs:nonNegativeInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:negativeInteger(.)) instance of xs:negativeInteger">
      <x:call>
        <x:param select="string(.)">round(xs:negativeInteger(.)) instance of xs:negativeInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:long(.)) instance of xs:long">
      <x:call>
        <x:param select="string(.)">round(xs:long(.)) instance of xs:long</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:int(.)) instance of xs:int">
      <x:call>
        <x:param select="string(.)">round(xs:int(.)) instance of xs:int</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:short(.)) instance of xs:short">
      <x:call>
        <x:param select="string(.)">round(xs:short(.)) instance of xs:short</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:byte(.)) instance of xs:byte">
      <x:call>
        <x:param select="string(.)">round(xs:byte(.)) instance of xs:byte</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:double(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:double("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:double(&#34;-0&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:double("-0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:float(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:float("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round(xs:float(&#34;-0&#34;))">
      <x:call>
        <x:param select="string(.)">round(xs:float("-0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.01&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.01"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.01&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.01"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.01&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.01"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.01&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.01"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.04&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.04"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.04&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.04"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.04&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.04"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.04&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.04"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.05&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.05"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.05&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.05"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.05&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.05"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.05&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.05"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.06&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.06"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.06&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.06"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.06&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.06"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.06&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.06"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.09&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.09"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.09&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.09"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.09&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.09"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.09&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.09"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.00&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.00&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.00&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.00&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.11&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.11&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.11&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.11&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.14&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.14"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.14&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.14"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.14&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.14"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.14&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.14"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.15&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.15"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.15&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.15"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.15&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.15"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.15&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.15"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.16&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.16"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.16&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.16"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.16&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.16"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.16&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.16"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.19&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.19"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.19&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.19"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.19&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.19"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.19&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.19"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.10&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.10"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.10&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.10"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.10&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.10"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.10&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.10"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.41&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.41"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.41&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.41"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.41&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.41"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.41&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.41"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.44&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.44"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.44&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.44"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.44&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.44"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.44&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.44"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.45&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.45"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.45&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.45"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.45&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.45"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.45&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.45"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.46&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.46"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.46&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.46"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.46&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.46"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.46&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.46"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.49&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.49"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.49&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.49"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.49&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.49"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.49&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.49"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.40&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.40"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.40&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.40"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.40&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.40"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.40&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.40"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.51&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.51"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.51&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.51"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.51&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.51"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.51&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.51"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.54&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.54"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.54&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.54"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.54&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.54"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.54&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.54"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.55&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.55"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.55&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.55"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.55&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.55"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.55&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.55"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.56&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.56"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.56&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.56"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.56&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.56"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.56&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.56"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.59&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.59"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.59&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.59"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.59&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.59"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.59&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.59"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.50&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.50"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.50&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.50"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.50&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.50"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.50&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.50"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.61&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.61"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.61&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.61"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.61&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.61"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.61&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.61"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.64&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.64"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.64&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.64"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.64&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.64"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.64&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.64"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.65&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.65"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.65&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.65"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.65&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.65"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.65&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.65"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.66&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.66"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.66&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.66"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.66&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.66"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.66&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.66"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.69&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.69"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.69&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.69"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.69&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.69"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.69&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.69"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.60&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.60"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.60&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.60"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.60&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.60"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.60&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.60"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.91&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.91"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.91&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.91"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.91&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.91"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.91&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.91"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.94&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.94"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.94&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.94"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.94&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.94"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.94&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.94"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.95&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.95"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.95&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.95"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.95&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.95"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.95&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.95"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.96&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.96"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.96&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.96"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.96&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.96"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.96&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.96"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.99&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.99"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.99&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.99"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.99&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.99"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.99&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.99"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.90&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.90"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.90&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.90"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.90&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.90"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.90&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.90"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.101&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.101"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.101&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.101"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.101&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.101"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.101&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.101"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.104&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.104"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.104&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.104"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.104&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.104"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.104&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.104"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.105&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.105"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.105&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.105"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.105&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.105"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.105&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.105"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.106&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.106"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.106&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.106"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.106&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.106"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.106&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.106"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.109&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.109"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.109&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.109"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.109&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.109"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.109&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.109"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;0.100&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("0.100"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;0.100&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("0.100"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:float(&#34;-0.100&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:float("-0.100"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:double(&#34;-0.100&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:double("-0.100"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) &#xA;            return if ((round($x)) instance of xs:integer) then &#34;integer&#34; &#xA;           else if ((round($x)) instance of xs:decimal) then &#34;decimal&#34; &#xA;           else if ((round($x)) instance of xs:float) then &#34;float&#34;&#xA;           else if ((round($x)) instance of xs:double) then &#34;double&#34; &#xA;           else error()">
      <x:call>
        <x:param select="string(.)">for $x in (1, xs:decimal(2), xs:float(3), xs:double(4)) 
            return if ((round($x)) instance of xs:integer) then "integer" 
           else if ((round($x)) instance of xs:decimal) then "decimal" 
           else if ((round($x)) instance of xs:float) then "float"
           else if ((round($x)) instance of xs:double) then "double" 
           else error()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;12.1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("12.1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;12.7&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("12.7"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;12.5&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("12.5"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;-12.7&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("-12.7"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;-12.1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("-12.1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:round(xs:decimal(&#34;-12.5&#34;))">
      <x:call>
        <x:param select="string(.)">fn:round(xs:decimal("-12.5"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>