<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName("arg1","arg2")</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName("arg1","arg2")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(xs:integer(1))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:integer(1))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:prefix-from-QName(xs:QName("name")))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:prefix-from-QName(xs:QName("name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:string-length(xs:string(fn:prefix-from-QName(xs:QName("name"))))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(xs:string(fn:prefix-from-QName(xs:QName("name"))))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:label>
      <x:variable name="expr" as="xs:string">xs:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string(fn:prefix-from-QName(xs:QName("foo:name")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:count(fn:prefix-from-QName(()))</x:label>
      <x:variable name="expr" as="xs:string">fn:count(fn:prefix-from-QName(()))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(xs:QName("foo:bar"))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:QName("foo:bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:upper-case(fn:prefix-from-QName(xs:QName("foo:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:upper-case(fn:prefix-from-QName(xs:QName("foo:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:lower-case(fn:prefix-from-QName(xs:QName("FOO:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:lower-case(fn:prefix-from-QName(xs:QName("FOO:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:concat(fn:prefix-from-QName(xs:QName("foo:bar")),":bar")</x:label>
      <x:variable name="expr" as="xs:string">fn:concat(fn:prefix-from-QName(xs:QName("foo:bar")),":bar")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-before(fn:prefix-from-QName(xs:QName("foo:bar")),"oo")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-before(fn:prefix-from-QName(xs:QName("foo:bar")),"oo")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring-after(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:substring-after(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:string-length(fn:prefix-from-QName(xs:QName("foo:bar")))</x:label>
      <x:variable name="expr" as="xs:string">fn:string-length(fn:prefix-from-QName(xs:QName("foo:bar")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:substring(fn:prefix-from-QName(xs:QName("foo:bar")),2)</x:label>
      <x:variable name="expr" as="xs:string">fn:substring(fn:prefix-from-QName(xs:QName("foo:bar")),2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:string-join((fn:prefix-from-QName(xs:QName("foo:bar")),":bar"),"")</x:label>
      <x:variable name="expr" as="xs:string">fn:string-join((fn:prefix-from-QName(xs:QName("foo:bar")),":bar"),"")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:starts-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:starts-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:ends-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:ends-with(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:contains(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:label>
      <x:variable name="expr" as="xs:string">fn:contains(fn:prefix-from-QName(xs:QName("foo:bar")),"f")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(xs:QName("foo:bar"))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(xs:QName("foo:bar"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(node-name((//@*)[1]))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name((//@*)[1]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:prefix-from-QName(node-name(/*))</x:label>
      <x:variable name="expr" as="xs:string">fn:prefix-from-QName(node-name(/*))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>prefix-from-QName()</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>prefix-from-QName(1, 2)</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName(1, 2)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(prefix-from-QName( () ))</x:label>
      <x:variable name="expr" as="xs:string">empty(prefix-from-QName( () ))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>prefix-from-QName( QName("example.com/", "pre:lname")) eq "pre"</x:label>
      <x:variable name="expr" as="xs:string">prefix-from-QName( QName("example.com/", "pre:lname")) eq "pre"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>