<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/fn/boolean.xml"><x:call function="nk:xpath-model"/><x:scenario label="fn:boolean(xs:int(&#34;-2147483648&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int("-2147483648"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int(&#34;-1873914410&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int("-1873914410"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int(&#34;2147483647&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int("2147483647"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer(&#34;830993497117024304&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer("830993497117024304"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal(&#34;617375191608514839&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal("617375191608514839"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double(&#34;-1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double("-1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double(&#34;1.7976931348623157E308&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double("1.7976931348623157E308"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(&#34;-3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float("-3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(&#34;3.4028235E38&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float("3.4028235E38"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long(&#34;-92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long("-92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long(&#34;-47175562203048468&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long("-47175562203048468"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long(&#34;92233720368547758&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long("92233720368547758"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedShort(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedShort("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedShort(&#34;44633&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedShort("44633"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedShort(&#34;65535&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedShort("65535"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:negativeInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:negativeInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:negativeInteger(&#34;-297014075999096793&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:negativeInteger("-297014075999096793"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:negativeInteger(&#34;-1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:negativeInteger("-1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:positiveInteger(&#34;1&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:positiveInteger("1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:positiveInteger(&#34;52704602390610033&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:positiveInteger("52704602390610033"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:positiveInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:positiveInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedLong(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedLong("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedLong(&#34;130747108607674654&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedLong("130747108607674654"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:unsignedLong(&#34;184467440737095516&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:unsignedLong("184467440737095516"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger(&#34;-999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger("-999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger(&#34;-475688437271870490&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger("-475688437271870490"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonNegativeInteger(&#34;0&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonNegativeInteger("0"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonNegativeInteger(&#34;303884545991464527&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonNegativeInteger("303884545991464527"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonNegativeInteger(&#34;999999999999999999&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonNegativeInteger("999999999999999999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:short(&#34;-32768&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:short("-32768"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:short(&#34;-5324&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:short("-5324"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:short(&#34;32767&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:short("32767"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(())">
      <x:call>
        <x:param select="string(.)">fn:boolean(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">fn:boolean("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(false())">
      <x:call>
        <x:param select="string(.)">fn:boolean(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(true())">
      <x:call>
        <x:param select="string(.)">fn:boolean(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:string(&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:string(""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(('a'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(('a'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:string('abc'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:string('abc'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(0)">
      <x:call>
        <x:param select="string(.)">fn:boolean(0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(1)">
      <x:call>
        <x:param select="string(.)">fn:boolean(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(-1)">
      <x:call>
        <x:param select="string(.)">fn:boolean(-1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float('NaN'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float('NaN'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float('-INF'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float('-INF'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float('INF'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float('INF'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(0))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(1))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float(1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:float(-1))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:float(-1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double('NaN'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double('NaN'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double('-INF'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double('-INF'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double('INF'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double('INF'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double(0))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double(1))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double(1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:double('NaN'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:double('NaN'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal('9.99999999999999999999999999'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal('9.99999999999999999999999999'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal('-123456789.123456789123456789'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal('-123456789.123456789123456789'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal('0'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal('0'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:decimal('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:decimal('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer('0'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer('0'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:integer('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:integer('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger('-99999999999999999'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger('-99999999999999999'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger('0'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger('0'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:nonPositiveInteger('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:nonPositiveInteger('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:negativeInteger('-99999999999999999'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:negativeInteger('-99999999999999999'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:negativeInteger('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:negativeInteger('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:positiveInteger('99999999999999999'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:positiveInteger('99999999999999999'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:positiveInteger('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:positiveInteger('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long('9223372036854775807'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long('9223372036854775807'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long('-9223372036854775808'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long('-9223372036854775808'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long('0'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long('0'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:long('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:long('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int('2147483647'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int('2147483647'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int('-2147483648'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int('-2147483648'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int('0'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int('0'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int('1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int('1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:int('-1'))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:int('-1'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:anyURI(&#34;http://www.example.org/examples&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:anyURI("http://www.example.org/examples"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(xs:dateTime(&#34;1999-12-31T00:00:00&#34;))">
      <x:call>
        <x:param select="string(.)">fn:boolean(xs:dateTime("1999-12-31T00:00:00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean()">
      <x:call>
        <x:param select="string(.)">boolean()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(1, &#34;wrong param&#34;)">
      <x:call>
        <x:param select="string(.)">boolean(1, "wrong param")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((1, 2))">
      <x:call>
        <x:param select="string(.)">boolean((1, 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:QName(&#34;valid-local-name&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:QName("valid-local-name"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:hexBinary(&#34;03&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:hexBinary("03"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:base64Binary(&#34;aaaa&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:base64Binary("aaaa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:anyURI(&#34;example.com/&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:anyURI("example.com/"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(xs:anyURI(&#34;&#34;)))">
      <x:call>
        <x:param select="string(.)">not(boolean(xs:anyURI("")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(&#34;string&#34;)">
      <x:call>
        <x:param select="string(.)">boolean("string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:untypedAtomic(&#34;string&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:untypedAtomic("string"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(xs:untypedAtomic(&#34;&#34;)))">
      <x:call>
        <x:param select="string(.)">not(boolean(xs:untypedAtomic("")))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(1)">
      <x:call>
        <x:param select="string(.)">boolean(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(&#34;&#34;))">
      <x:call>
        <x:param select="string(.)">not(boolean(""))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(false()))">
      <x:call>
        <x:param select="string(.)">not(boolean(false()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(true())">
      <x:call>
        <x:param select="string(.)">boolean(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() eq boolean(remove((xs:hexBinary(&#34;FF&#34;), 1), 1) treat as xs:integer)">
      <x:call>
        <x:param select="string(.)">true() eq boolean(remove((xs:hexBinary("FF"), 1), 1) treat as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(0)">
      <x:call>
        <x:param select="string(.)">not(0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(1)">
      <x:call>
        <x:param select="string(.)">boolean(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(1.1)">
      <x:call>
        <x:param select="string(.)">boolean(1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(1.1e1)">
      <x:call>
        <x:param select="string(.)">boolean(1.1e1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(0.0e0)">
      <x:call>
        <x:param select="string(.)">not(0.0e0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(0.0)">
      <x:call>
        <x:param select="string(.)">not(0.0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(-1)">
      <x:call>
        <x:param select="string(.)">boolean(-1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(())">
      <x:call>
        <x:param select="string(.)">not(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(()))">
      <x:call>
        <x:param select="string(.)">not(boolean(()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(())">
      <x:call>
        <x:param select="string(.)">not(())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(empty((1, 2)))">
      <x:call>
        <x:param select="string(.)">not(empty((1, 2)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(empty(((), 1, 2)))">
      <x:call>
        <x:param select="string(.)">not(empty(((), 1, 2)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean('nada')">
      <x:call>
        <x:param select="string(.)">boolean('nada')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean('&#34;&#34;')">
      <x:call>
        <x:param select="string(.)">boolean('""')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not('')">
      <x:call>
        <x:param select="string(.)">not('')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:boolean(count((1, 2, 3, timezone-from-time(current-time()), 4)))">
      <x:call>
        <x:param select="string(.)">fn:boolean(count((1, 2, 3, timezone-from-time(current-time()), 4)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(//*:Open)">
      <x:call>
        <x:param select="string(.)">boolean(//*:Open)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(//*:NotAtAllOpen)">
      <x:call>
        <x:param select="string(.)">boolean(//*:NotAtAllOpen)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((/, 93.7))">
      <x:call>
        <x:param select="string(.)">boolean((/, 93.7))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((93.7, /))">
      <x:call>
        <x:param select="string(.)">boolean((93.7, /))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((true(), false()))">
      <x:call>
        <x:param select="string(.)">boolean((true(), false()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((1, 0))">
      <x:call>
        <x:param select="string(.)">boolean((1, 0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((&#34;&#34;, &#34;a&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(("", "a"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean((true(), //aspidistra))">
      <x:call>
        <x:param select="string(.)">boolean((true(), //aspidistra))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(string(false()))">
      <x:call>
        <x:param select="string(.)">boolean(string(false()))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(boolean(for $x in 1 to 10 return $x * $x))">
      <x:call>
        <x:param select="string(.)">not(boolean(for $x in 1 to 10 return $x * $x))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>