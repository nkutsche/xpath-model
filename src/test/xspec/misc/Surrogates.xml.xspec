<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/misc/Surrogates.xml"><x:call function="nk:xpath-model"/><x:scenario label="codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))">
      <x:call>
        <x:param select="string(.)">codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-length(&#34;abc𝅖def&#34;)">
      <x:call>
        <x:param select="string(.)">string-length("abc𝅖def")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="substring(&#34;abc𝅖def&#34;, 5)">
      <x:call>
        <x:param select="string(.)">substring("abc𝅖def", 5)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="substring(&#34;abc𝅖def&#34;, 4)">
      <x:call>
        <x:param select="string(.)">substring("abc𝅖def", 4)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="translate(&#34;abc𝅖def&#34;, &#34;𝅖&#34;, &#34;#&#34;)">
      <x:call>
        <x:param select="string(.)">translate("abc𝅖def", "𝅖", "#")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="translate(&#34;abc𝅖def&#34;, &#34;𝅖de&#34;, &#34;#DE&#34;)">
      <x:call>
        <x:param select="string(.)">translate("abc𝅖def", "𝅖de", "#DE")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="translate(&#34;abc𝅖def&#34;, &#34;def&#34;, &#34;𝅖EF&#34;)">
      <x:call>
        <x:param select="string(.)">translate("abc𝅖def", "def", "𝅖EF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(&#34;abc𝅖def&#34;)">
      <x:call>
        <x:param select="string(.)">string-to-codepoints("abc𝅖def")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))">
      <x:call>
        <x:param select="string(.)">codepoints-to-string((97, 98, 99, 119126, 100, 101, 102))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="substring-before(&#34;abc𝅖def&#34;, &#34;𝅖&#34;)">
      <x:call>
        <x:param select="string(.)">substring-before("abc𝅖def", "𝅖")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="substring-before(&#34;abc𝅖def&#34;, &#34;f&#34;)">
      <x:call>
        <x:param select="string(.)">substring-before("abc𝅖def", "f")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="substring-after(&#34;abc𝅖def&#34;, &#34;𝅖&#34;)">
      <x:call>
        <x:param select="string(.)">substring-after("abc𝅖def", "𝅖")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="matches(&#34;abc𝅗def&#34;, &#34;abc[𝅖-𝅘]def&#34;)">
      <x:call>
        <x:param select="string(.)">matches("abc𝅗def", "abc[𝅖-𝅘]def")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="matches(&#34;abc𝅗def&#34;, &#34;abc.def&#34;)">
      <x:call>
        <x:param select="string(.)">matches("abc𝅗def", "abc.def")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="replace(&#34;abc𝅚def&#34;, &#34;[𝅐-𝅘𝅥]&#34;, &#34;𝅘𝅥&#34;)">
      <x:call>
        <x:param select="string(.)">replace("abc𝅚def", "[𝅐-𝅘𝅥]", "𝅘𝅥")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="replace(&#34;abc𝅗def&#34;, &#34;[^a-f]&#34;, &#34;###&#34;)">
      <x:call>
        <x:param select="string(.)">replace("abc𝅗def", "[^a-f]", "###")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(substring(&#34;􏰀A&#34;, 2, 1))">
      <x:call>
        <x:param select="string(.)">string-to-codepoints(substring("􏰀A", 2, 1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>