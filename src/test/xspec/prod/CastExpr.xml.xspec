<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/prod/CastExpr.xml"><x:call function="nk:xpath-model"/><x:scenario label="(5 + 5) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(5 + 5) cast as xs:float">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(5 + 5) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(5 + 5) cast as xs:double">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(5 + 5) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(5 + 5) cast as xs:string">
      <x:call>
        <x:param select="string(.)">(5 + 5) cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;A String&#34; cast as xs:string">
      <x:call>
        <x:param select="string(.)">"A String" cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(2.1E3) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:float(2.1E3) cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(2.1E3) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:float(2.1E3) cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(2.1E3) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:float(2.1E3) cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(2.1E3) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float(2.1E3) cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1267.43233E12) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:double(1267.43233E12) cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1267.43233E12) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:double(1267.43233E12) cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(1267.43233E12) cast as xs:float) eq xs:float(1267.43233E12)">
      <x:call>
        <x:param select="string(.)">(xs:double(1267.43233E12) cast as xs:float) eq xs:float(1267.43233E12)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1267.43233E12) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:double(1267.43233E12) cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(12678967.543233) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:decimal(12678967.543233) cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12678967543233) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:integer(12678967543233) cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(12678967543233) cast as xs:float) eq xs:float(12678967543233)">
      <x:call>
        <x:param select="string(.)">(xs:integer(12678967543233) cast as xs:float) eq xs:float(12678967543233)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12678967543233) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:integer(12678967543233) cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12678967543233) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:integer(12678967543233) cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12678967543233) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:integer(12678967543233) cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12678967543233) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:integer(12678967543233) cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00-05:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00-05:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00-05:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;12:00:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:time("12:00:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;12:00:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:time("12:00:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:string">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:float">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:double">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:integer">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:true() cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">fn:true() cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;A String&#34;) cast as xs:NOTATION">
      <x:call>
        <x:param select="string(.)">xs:string("A String") cast as xs:NOTATION</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;INF&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("INF") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;0.0E0&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("0.0E0") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;INF&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("INF") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;0.0E0&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("0.0E0") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0.0E0&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0.0E0") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;NaN&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("NaN") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1e-5&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1e-5") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-10000000&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-10000000") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0.0E0&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0.0E0") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;NaN&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("NaN") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1e-5&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1e-5") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-10000000&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-10000000") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0.0E0&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0.0E0") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;NaN&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("NaN") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1e-5&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1e-5") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;5.5432&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("5.5432") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0.0E0&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0.0E0") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;NaN&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("NaN") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1e-5&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1e-5") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-1.1234&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-1.1234") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("P1Y2M3DT10H30M23S") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;P24M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("P24M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-P21M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-P21M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;P3DT10H30M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("P3DT10H30M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-PT100M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-PT100M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999-05-31T13:20:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999-05-31T13:20:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;2000-01-16T00:00:00Z&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("2000-01-16T00:00:00Z") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;13:20:00-05:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("13:20:00-05:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;13:20:02.123&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("13:20:02.123") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;13:20:00Z&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("13:20:00Z") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999-05-31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999-05-31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0012-12-03-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0012-12-03-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999-05-31Z&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999-05-31Z") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999-05&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999-05") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0012-12-05:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0012-12-05:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999-05Z&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999-05Z") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;-0012-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("-0012-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;1999Z&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("1999Z") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--05-31&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--05-31") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--05-31+14:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--05-31+14:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--05-31Z&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--05-31Z") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;---31&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("---31") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;---03-05:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("---03-05:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;---31Z&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("---31Z") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--05&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--05") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--12-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--12-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;--05Z&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("--05Z") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;0.0&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("0.0") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;0&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("0") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;00000000&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("00000000") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;D74D35D35D35&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("D74D35D35D35") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;010010101&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("010010101") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;0fb7&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("0fb7") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;D74D35D35D35&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("D74D35D35D35") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;http://www.example.com/~b%C3%A9b%C3%A9&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;INF&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:string("INF") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;0.0E0&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:string("0.0E0") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;INF&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:string("INF") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;0.0E0&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:string("0.0E0") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0.0E0&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:string("-0.0E0") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;NaN&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:string("NaN") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1e-5&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:string("1e-5") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-10000000&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:string("-10000000") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0.0E0&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:string("-0.0E0") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;NaN&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:string("NaN") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1e-5&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:string("1e-5") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-10000000&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:string("-10000000") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0.0E0&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string("-0.0E0") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;NaN&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string("NaN") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1e-5&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string("1e-5") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;5.5432&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string("5.5432") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0.0E0&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:string("-0.0E0") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;NaN&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:string("NaN") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1e-5&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:string("1e-5") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-1.1234&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:string("-1.1234") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:string("P1Y2M3DT10H30M23S") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;P24M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:string("P24M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-P21M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:string("-P21M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-P1Y1M1DT1H1M1.123S&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:string("-P1Y1M1DT1H1M1.123S") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;P3DT10H30M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:string("P3DT10H30M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-PT100M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:string("-PT100M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999-05-31T13:20:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:string("1999-05-31T13:20:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:string("-1999-05-31T13:20:00+14:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;2000-01-16T00:00:00Z&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:string("2000-01-16T00:00:00Z") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;13:20:00-05:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:string("13:20:00-05:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;13:20:02.123&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:string("13:20:02.123") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;13:20:00Z&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:string("13:20:00Z") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999-05-31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:string("1999-05-31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0012-12-03-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:string("-0012-12-03-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999-05-31Z&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:string("1999-05-31Z") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999-05&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:string("1999-05") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0012-12-05:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:string("-0012-12-05:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999-05Z&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:string("1999-05Z") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:string("1999") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;-0012-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:string("-0012-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;1999Z&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:string("1999Z") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--05-31&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:string("--05-31") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--05-31+14:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:string("--05-31+14:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--05-31Z&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:string("--05-31Z") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;---31&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:string("---31") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;---03-05:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:string("---03-05:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;---31Z&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:string("---31Z") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--05&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:string("--05") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--12-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:string("--12-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;--05Z&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:string("--05Z") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;0.0&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:string("0.0") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;0&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:string("0") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;00000000&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:string("00000000") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;D74D35D35D35&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:string("D74D35D35D35") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;010010101&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:string("010010101") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;0fb7&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:string("0fb7") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;D74D35D35D35&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:string("D74D35D35D35") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;http://www.example.com/~b%C3%A9b%C3%A9&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:string("http://www.example.com/~b%C3%A9b%C3%A9") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;true&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:string("true") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:string("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;1e5&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:float("1e5") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-0.0E0&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:float("-0.0E0") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;NaN&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:float("NaN") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-1.75e-3&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:float("-1.75e-3") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;INF&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:float("INF") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-0.0E0&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:float("-0.0E0") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-0.0E0&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:float("-0.0E0") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;1e5&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:float("1e5") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round-half-to-even(xs:float(&#34;-1.75e-3&#34;) cast as xs:decimal,5)">
      <x:call>
        <x:param select="string(.)">round-half-to-even(xs:float("-1.75e-3") cast as xs:decimal,5)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-0.0E0&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:float("-0.0E0") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;1e5&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:float("1e5") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;INF&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:float("INF") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-1.75e-3&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:float("-1.75e-3") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-0.0E0&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float("-0.0E0") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;1e5&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float("1e5") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;NaN&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float("NaN") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;5.4321E-100&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:float("5.4321E-100") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:double("INF") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e8&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:double("1e8") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:double("INF") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-0.0E0&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("-0.0E0") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;5.4321E-1001&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("5.4321E-1001") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.75e-3&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("-1.75e-3") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;NaN&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("NaN") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:double("INF") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-0.0E0&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:double("-0.0E0") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;5.4321E-1001&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:double("5.4321E-1001") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="round-half-to-even(xs:double(&#34;-1.75e-3&#34;) cast as xs:decimal,5)">
      <x:call>
        <x:param select="string(.)">round-half-to-even(xs:double("-1.75e-3") cast as xs:decimal,5)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:double("INF") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-0.0E0&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:double("-0.0E0") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.75e-3&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:double("-1.75e-3") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:double("INF") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;NaN&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:double("NaN") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1e5&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:double("1e5") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;5.5432&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:decimal("5.5432") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.1234&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.1234") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;1&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:integer("1") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-100&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:integer("-100") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;PT10H&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:duration("PT10H") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;PT10H&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("PT10H") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P24M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P24M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;PT10H&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("PT10H") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P24M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P24M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M23S&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M23S") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;-P21M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("-P21M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y2M&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y2M") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;-PT100M&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("-PT100M") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;-PT100M&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("-PT100M") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;PT24H&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("PT24H") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;-PT100M&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("-PT100M") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P14D&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P14D") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;-PT100M&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("-PT100M") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H30M&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H30M") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2000-01-16T00:00:00Z&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2000-01-16T00:00:00Z") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;-1999-05-31T13:20:00+14:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("-1999-05-31T13:20:00+14:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-05-31T13:20:00&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-05-31T13:20:00") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:02.123&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:02.123") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00Z&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00Z") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;13:20:00-05:00&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:time("13:20:00-05:00") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-0012-12-03-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:date("-0012-12-03-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31Z&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31Z") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-05-31&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:date("1999-05-31") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;-0012-12-05:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("-0012-12-05:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-05Z&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-05Z") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;-0012-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYear("-0012-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999Z&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999Z") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--12-03-05:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--12-03-05:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31Z&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31Z") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--05-31&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--05-31") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03-05:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03-05:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31Z&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31Z") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---31&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gDay("---31") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--12-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--12-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05Z&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05Z") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--05&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--05") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;false&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:boolean("false") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;false&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:boolean("false") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;false&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:boolean("false") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;false&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:boolean("false") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;false&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:boolean("false") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;01001010&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("01001010") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;0FB7&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("0FB7") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;01001010&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("01001010") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;0FB7&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("0FB7") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;01001010&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("01001010") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;0FB7&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("0FB7") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;00000000&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("00000000") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aA+zZ/09&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aA+zZ/09") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;0FB7&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("0FB7") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;10010101&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("10010101") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0fb7&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0fb7") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;d74d35d35d35&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("d74d35d35d35") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;D74D35D35D35&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("D74D35D35D35") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.ietf.org/rfc/rfc2396.txt&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.ietf.org/rfc/rfc2396.txt") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(2.123456789123456789) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:string(2.123456789123456789) cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(-20) cast as xs:nonPositiveInteger">
      <x:call>
        <x:param select="string(.)">xs:string(-20) cast as xs:nonPositiveInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(20) cast as xs:long">
      <x:call>
        <x:param select="string(.)">xs:string(20) cast as xs:long</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(200) cast as xs:nonNegativeInteger">
      <x:call>
        <x:param select="string(.)">xs:string(200) cast as xs:nonNegativeInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(-201) cast as xs:negativeInteger">
      <x:call>
        <x:param select="string(.)">xs:string(-201) cast as xs:negativeInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(20) cast as xs:int">
      <x:call>
        <x:param select="string(.)">xs:string(20) cast as xs:int</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(20) cast as xs:unsignedLong">
      <x:call>
        <x:param select="string(.)">xs:string(20) cast as xs:unsignedLong</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(300) cast as xs:positiveInteger">
      <x:call>
        <x:param select="string(.)">xs:string(300) cast as xs:positiveInteger</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(30) cast as xs:short">
      <x:call>
        <x:param select="string(.)">xs:string(30) cast as xs:short</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(300) cast as xs:unsignedInt">
      <x:call>
        <x:param select="string(.)">xs:string(300) cast as xs:unsignedInt</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(120) cast as xs:byte">
      <x:call>
        <x:param select="string(.)">xs:string(120) cast as xs:byte</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(12) cast as xs:unsignedShort">
      <x:call>
        <x:param select="string(.)">xs:string(12) cast as xs:unsignedShort</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(12) cast as xs:unsignedByte">
      <x:call>
        <x:param select="string(.)">xs:string(12) cast as xs:unsignedByte</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;9999-12-31T23:59:59.9999999&#34;) cast as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dateTime("9999-12-31T23:59:59.9999999") cast as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(xs:normalizedString(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))">
      <x:call>
        <x:param select="string(.)">string-to-codepoints(xs:normalizedString(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-to-codepoints(xs:token(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))">
      <x:call>
        <x:param select="string(.)">string-to-codepoints(xs:token(codepoints-to-string((32, 09, 48, 13, 10, 48, 160, 32, 09))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime('2017-07-19T12:00:00-00:30')">
      <x:call>
        <x:param select="string(.)">xs:dateTime('2017-07-19T12:00:00-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time('12:00:00-00:30')">
      <x:call>
        <x:param select="string(.)">xs:time('12:00:00-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date('2017-07-19-00:30')">
      <x:call>
        <x:param select="string(.)">xs:date('2017-07-19-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear('2017-00:30')">
      <x:call>
        <x:param select="string(.)">xs:gYear('2017-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth('2017-07-00:30')">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth('2017-07-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth('--07-00:30')">
      <x:call>
        <x:param select="string(.)">xs:gMonth('--07-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay('--07-12-00:30')">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay('--07-12-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay('---12-00:30')">
      <x:call>
        <x:param select="string(.)">xs:gDay('---12-00:30')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(12345678901234567.3)">
      <x:call>
        <x:param select="string(.)">xs:integer(12345678901234567.3)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(99e100)">
      <x:call>
        <x:param select="string(.)">xs:decimal(99e100)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(99e100)">
      <x:call>
        <x:param select="string(.)">xs:integer(99e100)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'string' cast as xs:anyAtomicType">
      <x:call>
        <x:param select="string(.)">'string' cast as xs:anyAtomicType</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 cast as prefixDoesNotExist:integer">
      <x:call>
        <x:param select="string(.)">3 cast as prefixDoesNotExist:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'1' cast as xs:boolean eq true()">
      <x:call>
        <x:param select="string(.)">'1' cast as xs:boolean eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'true' cast as xs:boolean eq true()">
      <x:call>
        <x:param select="string(.)">'true' cast as xs:boolean eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'false' cast as xs:boolean eq false()">
      <x:call>
        <x:param select="string(.)">'false' cast as xs:boolean eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'0' cast as xs:boolean eq false()">
      <x:call>
        <x:param select="string(.)">'0' cast as xs:boolean eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="false() cast as xs:boolean eq false()">
      <x:call>
        <x:param select="string(.)">false() cast as xs:boolean eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(true() cast as xs:boolean eq false())">
      <x:call>
        <x:param select="string(.)">not(true() cast as xs:boolean eq false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:double(3)) eq true()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:double(3)) eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:string(1)) eq true()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:string(1)) eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:integer(3)) eq true()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:integer(3)) eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:decimal(3)) eq true()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:decimal(3)) eq true()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:double(0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:double(0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:string(0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:string(0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:integer(0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:integer(0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:decimal(0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:decimal(0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:decimal(0.0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:decimal(0.0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(+0) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(+0) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(-0) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(-0) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:double(+0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:double(+0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:double(-0)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:double(-0)) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(0.0E0) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(0.0E0) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:double(&#34;NaN&#34;)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:double("NaN")) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:float(&#34;NaN&#34;)) eq false()">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:float("NaN")) eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="'12312' cast as xs:boolean eq false()">
      <x:call>
        <x:param select="string(.)">'12312' cast as xs:boolean eq false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="false() cast as xs:string eq &#34;false&#34;">
      <x:call>
        <x:param select="string(.)">false() cast as xs:string eq "false"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() cast as xs:string eq &#34;true&#34;">
      <x:call>
        <x:param select="string(.)">true() cast as xs:string eq "true"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="('1' cast as xs:boolean) cast as xs:string eq 'true'">
      <x:call>
        <x:param select="string(.)">('1' cast as xs:boolean) cast as xs:string eq 'true'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean('0') cast as xs:string eq 'false'">
      <x:call>
        <x:param select="string(.)">xs:boolean('0') cast as xs:string eq 'false'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34; white space left alone&#34; cast as xs:string eq xs:string(&#34; white space left alone&#34;)">
      <x:call>
        <x:param select="string(.)">" white space left alone" cast as xs:string eq xs:string(" white space left alone")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:QName(&#34;fn:local-name&#34;) cast as xs:string) eq &#34;fn:local-name&#34;">
      <x:call>
        <x:param select="string(.)">(xs:QName("fn:local-name") cast as xs:string) eq "fn:local-name"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:QName(&#34;local-name&#34;) cast as xs:string) eq &#34;local-name&#34;">
      <x:call>
        <x:param select="string(.)">(xs:QName("local-name") cast as xs:string) eq "local-name"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:anyURI('example.com/')) eq 'example.com/'">
      <x:call>
        <x:param select="string(.)">xs:string(xs:anyURI('example.com/')) eq 'example.com/'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:double(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:string(xs:double(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:string(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:string(xs:string(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:integer(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:string(xs:integer(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:decimal(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:string(xs:decimal(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;untyped a &#34; cast as xs:untypedAtomic eq xs:untypedAtomic(&#34;untyped a &#34;)">
      <x:call>
        <x:param select="string(.)">"untyped a " cast as xs:untypedAtomic eq xs:untypedAtomic("untyped a ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="false() cast as xs:untypedAtomic eq xs:untypedAtomic(&#34;false&#34;)">
      <x:call>
        <x:param select="string(.)">false() cast as xs:untypedAtomic eq xs:untypedAtomic("false")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() cast as xs:untypedAtomic eq xs:untypedAtomic(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">true() cast as xs:untypedAtomic eq xs:untypedAtomic("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="false() cast as xs:untypedAtomic instance of xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">false() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() cast as xs:untypedAtomic instance of xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">true() cast as xs:untypedAtomic instance of xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:QName(&#34;local-name&#34;) cast as xs:untypedAtomic) eq xs:untypedAtomic(&#34;local-name&#34;)">
      <x:call>
        <x:param select="string(.)">(xs:QName("local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("local-name")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:QName(&#34;fn:local-name&#34;) cast as xs:untypedAtomic) eq xs:untypedAtomic(&#34;fn:local-name&#34;)">
      <x:call>
        <x:param select="string(.)">(xs:QName("fn:local-name") cast as xs:untypedAtomic) eq xs:untypedAtomic("fn:local-name")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:anyURI('example.com/')) eq 'example.com/'">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:anyURI('example.com/')) eq 'example.com/'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:double(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:double(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:string(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:string(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:integer(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:integer(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:decimal(3)) eq '3'">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:decimal(3)) eq '3'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;notation is abstract&#34; cast as xs:NOTATION">
      <x:call>
        <x:param select="string(.)">"notation is abstract" cast as xs:NOTATION</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;notation is abstract&#34; cast as xs:NOTATION?">
      <x:call>
        <x:param select="string(.)">"notation is abstract" cast as xs:NOTATION?</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() cast as xs:NOTATION?">
      <x:call>
        <x:param select="string(.)">() cast as xs:NOTATION?</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() cast as xs:NOTATION">
      <x:call>
        <x:param select="string(.)">() cast as xs:NOTATION</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NOTATION(xs:anyURI('example.com/'))">
      <x:call>
        <x:param select="string(.)">xs:NOTATION(xs:anyURI('example.com/'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NOTATION(QName('example.com', 'p:foo'))">
      <x:call>
        <x:param select="string(.)">xs:NOTATION(QName('example.com', 'p:foo'))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() cast as xs:QName">
      <x:call>
        <x:param select="string(.)">() cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 cast as xs:QName">
      <x:call>
        <x:param select="string(.)">3 cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label=". cast as xs:QName">
      <x:call>
        <x:param select="string(.)">. cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:QName(&#34;local-name&#34;) cast as xs:QName) eq xs:QName(&#34;local-name&#34;)">
      <x:call>
        <x:param select="string(.)">(xs:QName("local-name") cast as xs:QName) eq xs:QName("local-name")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;example.com/&#34; cast as xs:anyURI eq xs:anyURI('example.com/')">
      <x:call>
        <x:param select="string(.)">"example.com/" cast as xs:anyURI eq xs:anyURI('example.com/')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;example.com/&#34;) cast as xs:anyURI eq xs:anyURI('example.com/')">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;example.com/&#34;) cast as xs:anyURI eq xs:anyURI('example.com/')">
      <x:call>
        <x:param select="string(.)">xs:anyURI("example.com/") cast as xs:anyURI eq xs:anyURI('example.com/')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(3) eq 3">
      <x:call>
        <x:param select="string(.)">xs:double(3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(3.1) eq 3.1">
      <x:call>
        <x:param select="string(.)">xs:double(3.1) eq 3.1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(6) instance of xs:double">
      <x:call>
        <x:param select="string(.)">xs:double(6) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:double(&#34;INF&#34;)) eq &#34;INF&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:double("INF")) eq "INF"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:double(&#34;-INF&#34;)) eq &#34;-INF&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:double("-INF")) eq "-INF"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(3) eq 3">
      <x:call>
        <x:param select="string(.)">xs:float(3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(3.1) eq 3.1">
      <x:call>
        <x:param select="string(.)">xs:float(3.1) eq 3.1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(6) instance of xs:float">
      <x:call>
        <x:param select="string(.)">xs:float(6) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:float(&#34;INF&#34;)) eq &#34;INF&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:float("INF")) eq "INF"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:float(&#34;-INF&#34;)) eq &#34;-INF&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:float("-INF")) eq "-INF"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(3) eq 3">
      <x:call>
        <x:param select="string(.)">xs:decimal(3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(3.1) eq 3.1">
      <x:call>
        <x:param select="string(.)">xs:decimal(3.1) eq 3.1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(6) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:decimal(6) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(3) eq 3">
      <x:call>
        <x:param select="string(.)">xs:integer(3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(3.1) eq 3">
      <x:call>
        <x:param select="string(.)">xs:integer(3.1) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(3.1) eq 3">
      <x:call>
        <x:param select="string(.)">xs:integer(3.1) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(6) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">xs:integer(6) instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(6) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:integer(6) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;FFF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("FFF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;FFxF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("FFxF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0xFF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0xFF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;F&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("F")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;x&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("x")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(xs:hexBinary(&#34;Ab08bcFFAA08b6&#34;))">
      <x:call>
        <x:param select="string(.)">exists(xs:hexBinary("Ab08bcFFAA08b6"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(xs:hexBinary(&#34;FF&#34;))">
      <x:call>
        <x:param select="string(.)">exists(xs:hexBinary("FF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="exists(xs:hexBinary(&#34;aa&#34;))">
      <x:call>
        <x:param select="string(.)">exists(xs:hexBinary("aa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(xs:hexBinary(xs:hexBinary(&#34;03&#34;))) eq 1">
      <x:call>
        <x:param select="string(.)">count(xs:hexBinary(xs:hexBinary("03"))) eq 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;aa&#34;)) eq &#34;AA&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("aa")) eq "AA"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;0a&#34;)) eq &#34;0A&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("0a")) eq "0A"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;a0&#34;)) eq &#34;A0&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("a0")) eq "A0"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;a4&#34;)) eq &#34;A4&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("a4")) eq "A4"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;c0&#34;)) eq &#34;C0&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("c0")) eq "C0"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;fA&#34;)) eq &#34;FA&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("fA")) eq "FA"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;10&#34;)) eq &#34;10&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("10")) eq "10"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;031a34123b&#34;)) eq &#34;031A34123B&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("031a34123b")) eq "031A34123B"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;03&#34;)) eq &#34;03&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("03")) eq "03"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;0c&#34;)) eq &#34;0C&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("0c")) eq "0C"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;0b&#34;)) eq &#34;0B&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("0b")) eq "0B"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;3a&#34;)) eq &#34;3A&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("3a")) eq "3A"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(&#34;&#34;)) eq &#34;&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary("")) eq ""</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;=aaabbcd&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("=aaabbcd"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;F===&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("F==="))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;a&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("a"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaaa====&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaaa===="))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaaa=bcd&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaaa=bcd"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaaaa=======&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaaaa======="))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaaabcd&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaaabcd"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaaabcd|&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaaabcd|"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aabb=d==&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aabb=d=="))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aabbcd=a&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aabbcd=a"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;abcdefghi&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("abcdefghi"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;0w==&#34;)) eq &#34;0w==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("0w==")) eq "0w=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;aaa a&#34;)) eq &#34;aaaa&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("aaa a")) eq "aaaa"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;frfhforlksid7453&#34;)) eq &#34;frfhforlksid7453&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("frfhforlksid7453")) eq "frfhforlksid7453"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;frfhforlksid745323==&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("frfhforlksid745323==")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;03&#34;))) eq &#34;Aw==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("03"))) eq "Aw=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;0f3c&#34;))) eq &#34;Dzw=&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("0f3c"))) eq "Dzw="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;12&#34;))) eq &#34;Eg==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("12"))) eq "Eg=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;3B&#34;))) eq &#34;Ow==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("3B"))) eq "Ow=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;69A69A&#34;))) eq &#34;aaaa&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("69A69A"))) eq "aaaa"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;F43D1234ce8f&#34;))) eq &#34;9D0SNM6P&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("F43D1234ce8f"))) eq "9D0SNM6P"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;f0&#34;))) eq &#34;8A==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("f0"))) eq "8A=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;ffaabbddcceeff0134f001d8ca9bc77899c83e6f7d&#34;))) eq &#34;/6q73czu/wE08AHYypvHeJnIPm99&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("ffaabbddcceeff0134f001d8ca9bc77899c83e6f7d"))) eq "/6q73czu/wE08AHYypvHeJnIPm99"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;ffff&#34;))) eq &#34;//8=&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("ffff"))) eq "//8="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(xs:hexBinary(&#34;ffff34564321deac9876&#34;))) eq &#34;//80VkMh3qyYdg==&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary(xs:hexBinary("ffff34564321deac9876"))) eq "//80VkMh3qyYdg=="</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(xs:base64Binary(&#34;Ow==&#34;))) eq &#34;3B&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary(xs:base64Binary("Ow=="))) eq "3B"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:hexBinary(xs:base64Binary(&#34;aaa a&#34;))) eq &#34;69A69A&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:hexBinary(xs:base64Binary("aaa a"))) eq "69A69A"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:base64Binary(&#34;&#34;)) eq &#34;&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:base64Binary("")) eq ""</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(remove((&#34;3B&#34;, 1.1), 2) treat as xs:string)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary(remove(("3B", 1.1), 2) treat as xs:string)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(remove((3e3, 1.1), 1))) eq 1.1">
      <x:call>
        <x:param select="string(.)">(xs:decimal(remove((3e3, 1.1), 1))) eq 1.1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(remove((1, 2, 3), 1))">
      <x:call>
        <x:param select="string(.)">xs:decimal(remove((1, 2, 3), 1))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;+P1Y2M123DT10H30M99S&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("+P1Y2M123DT10H30M99S")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M123DT10H30M99S+08:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M123DT10H30M99S+08:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;1Y2M123DT10H30M99S&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("1Y2M123DT10H30M99S")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;-P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("-P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y24MT&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y24MT")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P24H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P24H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P0010Y0010M0010DT0010H0010M0010S&#34;)) eq &#34;P10Y10M10DT10H10M10S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P0010Y0010M0010DT0010H0010M0010S")) eq "P10Y10M10DT10H10M10S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;-P0010DT0010H0010M0010S&#34;)) eq &#34;-P10DT10H10M10S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P0Y0M0DT00H00M00.000S&#34;)) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P0Y0M0DT00H00M00.000S")) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;-PT8H23M0S&#34;)) eq &#34;-PT8H23M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("-PT8H23M0S")) eq "-PT8H23M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;-P2000Y11M5DT0H0M0.000S&#34;)) eq &#34;-P2000Y11M5D&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("-P2000Y11M5DT0H0M0.000S")) eq "-P2000Y11M5D"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P365D&#34;)) eq &#34;P365D&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P365D")) eq "P365D"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P12M&#34;)) eq &#34;P1Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P12M")) eq "P1Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P31D&#34;)) eq &#34;P31D&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P31D")) eq "P31D"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;P3Y0M&#34;)) eq &#34;P3Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("P3Y0M")) eq "P3Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;P31DT3H2M10.001S&#34;)) eq &#34;P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(&#34;-PT0S&#34;)) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration("-PT0S")) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(xs:dayTimeDuration(&#34;P31DT3H2M10.001S&#34;))) eq &#34;P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(xs:yearMonthDuration(&#34;P543Y456M&#34;))) eq &#34;P581Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration(xs:yearMonthDuration("P543Y456M"))) eq "P581Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(xs:dayTimeDuration(&#34;-P31DT3H2M10.001S&#34;))) eq &#34;-P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:duration(xs:yearMonthDuration(&#34;-P543Y456M&#34;))) eq &#34;-P581Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:duration(xs:yearMonthDuration("-P543Y456M"))) eq "-P581Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;+P3DT10H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("+P3DT10H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT10H+08:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT10H+08:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;3DT10H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("3DT10H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;-P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("-P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P1DT&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P1DT")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;P0DT00H00M00.000S&#34;)) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("P0DT00H00M00.000S")) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P1Y12M1D&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P1Y12M1D")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P24M1D&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P24M1D")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;PDT3H2M10.001S&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("PDT3H2M10.001S")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;P0010DT0010H0010M0010S&#34;)) eq &#34;P10DT10H10M10S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("P0010DT0010H0010M0010S")) eq "P10DT10H10M10S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;-P0010DT0010H0010M0010S&#34;)) eq &#34;-P10DT10H10M10S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("-P0010DT0010H0010M0010S")) eq "-P10DT10H10M10S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;-PT8H23M0S&#34;)) eq &#34;-PT8H23M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("-PT8H23M0S")) eq "-PT8H23M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;-P5DT0H0M0.000S&#34;)) eq &#34;-P5D&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("-P5DT0H0M0.000S")) eq "-P5D"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;P9876DT1M&#34;)) eq &#34;P9876DT1M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("P9876DT1M")) eq "P9876DT1M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;PT9876H1M&#34;)) eq &#34;P411DT12H1M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("PT9876H1M")) eq "P411DT12H1M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;PT6000M&#34;)) eq &#34;P4DT4H&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("PT6000M")) eq "P4DT4H"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;PT1M1231.432S&#34;)) eq &#34;PT21M31.432S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("PT1M1231.432S")) eq "PT21M31.432S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;P31DT3H2M10.001S&#34;)) eq &#34;P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("P31DT3H2M10.001S")) eq "P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;-PT0S&#34;)) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("-PT0S")) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(xs:duration(&#34;P3Y0M31DT3H2M10.001S&#34;))) eq &#34;P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(xs:yearMonthDuration(&#34;P543Y456M&#34;))) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration(xs:yearMonthDuration("P543Y456M"))) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(xs:duration(&#34;-P3Y0M31DT3H2M10.001S&#34;))) eq &#34;-P31DT3H2M10.001S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P31DT3H2M10.001S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(xs:yearMonthDuration(&#34;-P543Y456M&#34;))) eq &#34;PT0S&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration(xs:yearMonthDuration("-P543Y456M"))) eq "PT0S"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dayTimeDuration(&#34;P3D&#34;)) eq &#34;P3D&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dayTimeDuration("P3D")) eq "P3D"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;+P20Y15M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("+P20Y15M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P20Y15M+08:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P20Y15M+08:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;20Y15M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("20Y15M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;-P&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("-P")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y24MT&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y24MT")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P731D&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P731D")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;-P3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("-P3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;P0010Y0010M&#34;)) eq &#34;P10Y10M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("P0010Y0010M")) eq "P10Y10M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;-P0010Y0010M&#34;)) eq &#34;-P10Y10M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("-P0010Y0010M")) eq "-P10Y10M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;P0Y0M&#34;)) eq &#34;P0M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("P0Y0M")) eq "P0M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;P2Y323M&#34;)) eq &#34;P28Y11M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("P2Y323M")) eq "P28Y11M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;-P543Y456M&#34;)) eq &#34;-P581Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("-P543Y456M")) eq "-P581Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(&#34;-P0M&#34;)) eq &#34;P0M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration("-P0M")) eq "P0M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(xs:duration(&#34;P3Y0M31DT3H2M10.001S&#34;))) eq &#34;P3Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration(xs:duration("P3Y0M31DT3H2M10.001S"))) eq "P3Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(xs:dayTimeDuration(&#34;P31DT3H2M10.001S&#34;))) eq &#34;P0M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration(xs:dayTimeDuration("P31DT3H2M10.001S"))) eq "P0M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(xs:duration(&#34;-P3Y0M31DT3H2M10.001S&#34;))) eq &#34;-P3Y&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration(xs:duration("-P3Y0M31DT3H2M10.001S"))) eq "-P3Y"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:yearMonthDuration(xs:dayTimeDuration(&#34;-P31DT3H2M10.001S&#34;))) eq &#34;P0M&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:yearMonthDuration(xs:dayTimeDuration("-P31DT3H2M10.001S"))) eq "P0M"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;867&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("867")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;+1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("+1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;+1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("+1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;+0000&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("+0000")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1111-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1111-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1111a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1111a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;a1111&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("a1111")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1 111&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1 111")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1111 Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1111 Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1111 Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1111 Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1956-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1956-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1956+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1956+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1956+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1956+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1956-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1956-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;02004&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("02004")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1956-10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1956-10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYear(&#34;1999-00:00&#34;)) eq &#34;1999Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYear("1999-00:00")) eq "1999Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYear(&#34;1999+00:00&#34;)) eq &#34;1999Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYear("1999+00:00")) eq "1999Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYear(&#34;1999Z&#34;)) eq &#34;1999Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYear("1999Z")) eq "1999Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---321&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---321")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;--01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("--01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;E---01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("E---01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---01E&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---01E")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---01-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---01-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---32&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---32")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;+--08&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("+--08")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;+--08&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("+--08")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;+---08&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("+---08")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08 Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08 Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---08-10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---08-10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gDay(&#34;---01-00:00&#34;)) eq &#34;---01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gDay("---01-00:00")) eq "---01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gDay(&#34;---01+00:00&#34;)) eq &#34;---01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gDay("---01+00:00")) eq "---01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gDay(&#34;---01Z&#34;)) eq &#34;---01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gDay("---01Z")) eq "---01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;---01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("---01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;+--01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("+--01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--431&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--431")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--08-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--08-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--08+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--08+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--08+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--08+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--08-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--08-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--08-10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--08-10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonth(&#34;--01-00:00&#34;)) eq &#34;--01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonth("--01-00:00")) eq "--01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonth(&#34;--01+00:00&#34;)) eq &#34;--01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonth("--01+00:00")) eq "--01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonth(&#34;--01Z&#34;)) eq &#34;--01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonth("--01Z")) eq "--01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;--1999-12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("--1999-12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;+1999-12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("+1999-12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-12-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-12-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999--12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999--12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;02004-08&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("02004-08")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-08-10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-08-10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-01-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-01-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-01+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-01+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-01+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-01+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-01-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-01-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYearMonth(&#34;1999-01-00:00&#34;)) eq &#34;1999-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYearMonth("1999-01-00:00")) eq "1999-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYearMonth(&#34;1999-01+00:00&#34;)) eq &#34;1999-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYearMonth("1999-01+00:00")) eq "1999-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gYearMonth(&#34;1999-01Z&#34;)) eq &#34;1999-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gYearMonth("1999-01Z")) eq "1999-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;-01-12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("-01-12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;+--01-12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("+--01-12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;01-12-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("01-12-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01--12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01--12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01-00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01-00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--00-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--00-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--13-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--13-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--111-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--111-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--1967-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--1967-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--02-31&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--02-31")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-08-10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-08-10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--02-30&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--02-30")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--04-31&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--04-31")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-31&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-31")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01-01-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01-01-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01-01+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01-01+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01-01+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01-01+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--01-01-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--01-01-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonthDay(&#34;--01-01-00:00&#34;)) eq &#34;--01-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonthDay("--01-01-00:00")) eq "--01-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonthDay(&#34;--01-01+00:00&#34;)) eq &#34;--01-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonthDay("--01-01+00:00")) eq "--01-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:gMonthDay(&#34;--01-01Z&#34;)) eq &#34;--01-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:gMonthDay("--01-01Z")) eq "--01-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--02-29+00:00&#34;) eq xs:gMonthDay(&#34;--02-29+00:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--02-29+00:00") eq xs:gMonthDay("--02-29+00:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;+2004-08-01T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("+2004-08-01T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;02004-08-01T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("02004-08-01T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;00004-08-01T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("00004-08-01T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2004-32-01T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2004-32-01T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-30T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-30T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-002-15T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-002-15T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-150T12:44:05&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-150T12:44:05")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-15T24:00:00.001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-15T24:00:00.001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-15T24:01:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-15T24:01:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-15T25:01:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-15T25:01:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-15T21:60:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-15T21:60:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-02-15T21:01:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-02-15T21:01:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;--2002-02-15T21:01:23&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("--2002-02-15T21:01:23")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01T23:59:12.432-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01T23:59:12.432-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01T23:59:12.432+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01T23:59:12.432+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01T23:59:12.432+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01T23:59:12.432+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01T23:59:12.432-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01T23:59:12.432-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01T23:59:12.999-00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01T23:59:12.999-00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(xs:dateTime(&#34;2002-11-23T23:12:23.867-00:00&#34;)) eq xs:gYear(&#34;2002Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYear("2002Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(xs:dateTime(&#34;2002-11-23T23:12:23.867-13:37&#34;)) eq xs:gYear(&#34;2002-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYear("2002-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(xs:dateTime(&#34;2002-11-23T23:12:23.867-00:00&#34;)) eq xs:gYearMonth(&#34;2002-11Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-00:00")) eq xs:gYearMonth("2002-11Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(xs:dateTime(&#34;2002-11-23T23:12:23.867-13:37&#34;)) eq xs:gYearMonth(&#34;2002-11-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(xs:dateTime("2002-11-23T23:12:23.867-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(xs:dateTime(&#34;2002-11-23T22:12:23.867-00:00&#34;)) eq xs:gMonth(&#34;--11Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonth("--11Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(xs:dateTime(&#34;2002-11-23T22:12:23.867-13:37&#34;)) eq xs:gMonth(&#34;--11-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonth("--11-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(xs:dateTime(&#34;2002-11-23T22:12:23.867-00:00&#34;)) eq xs:gMonthDay(&#34;--11-23Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gMonthDay("--11-23Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(xs:dateTime(&#34;2002-11-23T22:12:23.867-13:37&#34;)) eq xs:gMonthDay(&#34;--11-23-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(xs:dateTime(&#34;2002-11-23T22:12:23.867-00:00&#34;)) eq xs:gDay(&#34;---23Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:gDay("---23Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(xs:dateTime(&#34;2002-11-23T22:12:23.867-13:37&#34;)) eq xs:gDay(&#34;---23-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:gDay("---23-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(xs:dateTime(&#34;2002-11-23T22:12:23.867-00:00&#34;)) eq xs:date(&#34;2002-11-23Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:date("2002-11-23Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(xs:dateTime(&#34;2002-11-23T22:12:23.867-13:37&#34;)) eq xs:date(&#34;2002-11-23-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:date("2002-11-23-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(xs:dateTime(&#34;2002-11-23T22:12:23.867-00:00&#34;)) eq xs:time(&#34;22:12:23.867Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time(xs:dateTime("2002-11-23T22:12:23.867-00:00")) eq xs:time("22:12:23.867Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(xs:dateTime(&#34;2002-11-23T22:12:23.867-13:37&#34;)) eq xs:time(&#34;22:12:23.867-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time(xs:dateTime("2002-11-23T22:12:23.867-13:37")) eq xs:time("22:12:23.867-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;1999-12-01T23:59:12.999-00:00&#34;)) eq &#34;1999-12-01T23:59:12.999Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("1999-12-01T23:59:12.999-00:00")) eq "1999-12-01T23:59:12.999Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;1999-12-01T23:59:12.432+00:00&#34;)) eq &#34;1999-12-01T23:59:12.432Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("1999-12-01T23:59:12.432+00:00")) eq "1999-12-01T23:59:12.432Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.000&#34;)) eq &#34;2002-02-15T21:01:23&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.000")) eq "2002-02-15T21:01:23"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.100&#34;)) eq &#34;2002-02-15T21:01:23.1&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.100")) eq "2002-02-15T21:01:23.1"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.001&#34;)) eq &#34;2002-02-15T21:01:23.001&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.001")) eq "2002-02-15T21:01:23.001"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.010&#34;)) eq &#34;2002-02-15T21:01:23.01&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.010")) eq "2002-02-15T21:01:23.01"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.435&#34;)) eq &#34;2002-02-15T21:01:23.435&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.435")) eq "2002-02-15T21:01:23.435"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.11&#34;)) eq &#34;2002-02-15T21:01:23.11&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.11")) eq "2002-02-15T21:01:23.11"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:dateTime(&#34;2002-02-15T21:01:23.110&#34;)) eq &#34;2002-02-15T21:01:23.11&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:dateTime("2002-02-15T21:01:23.110")) eq "2002-02-15T21:01:23.11"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:dateTime(&#34;2000-08-01T12:44:05&#34;)) eq &#34;2000-08-01T12:44:05&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:dateTime("2000-08-01T12:44:05")) eq "2000-08-01T12:44:05"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:dateTime(&#34;2004-03-31T24:00:00&#34;)) eq &#34;2004-04-01T00:00:00&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:dateTime("2004-03-31T24:00:00")) eq "2004-04-01T00:00:00"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;24:00:00.001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("24:00:00.001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;24:01:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("24:01:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;25:01:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("25:01:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;21:60:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("21:60:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;21:01:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("21:01:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;+21:01:50&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("+21:01:50")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;-21:01:50&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("-21:01:50")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;2002-02-15T08:12:12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("2002-02-15T08:12:12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;23:59:12.432-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("23:59:12.432-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;23:59:12.432+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("23:59:12.432+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;23:59:12.432+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("23:59:12.432+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;23:59:12.432-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("23:59:12.432-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;T23:59:12.999-03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("T23:59:12.999-03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:time(&#34;12:44:05&#34;)) eq &#34;12:44:05&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:time("12:44:05")) eq "12:44:05"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;23:59:12.999-00:00&#34;)) eq &#34;23:59:12.999Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("23:59:12.999-00:00")) eq "23:59:12.999Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;23:59:12.432+00:00&#34;)) eq &#34;23:59:12.432Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("23:59:12.432+00:00")) eq "23:59:12.432Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.000&#34;)) eq &#34;21:01:23&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.000")) eq "21:01:23"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.100&#34;)) eq &#34;21:01:23.1&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.100")) eq "21:01:23.1"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.001&#34;)) eq &#34;21:01:23.001&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.001")) eq "21:01:23.001"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.010&#34;)) eq &#34;21:01:23.01&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.010")) eq "21:01:23.01"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.435&#34;)) eq &#34;21:01:23.435&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.435")) eq "21:01:23.435"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.11&#34;)) eq &#34;21:01:23.11&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.11")) eq "21:01:23.11"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:time(&#34;21:01:23.110&#34;)) eq &#34;21:01:23.11&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:time("21:01:23.110")) eq "21:01:23.11"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:time(&#34;24:00:00&#34;)) eq &#34;00:00:00&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:time("24:00:00")) eq "00:00:00"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;+2004-08-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("+2004-08-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;02004-08-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("02004-08-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;00004-08-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("00004-08-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-32-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-32-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2002-02-30&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2002-02-30")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2002-002-15&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2002-002-15")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2002-02-150&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2002-02-150")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;--2002-02-15&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("--2002-02-15")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2002-02-15T08:12:12&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2002-02-15T08:12:12")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-12-01-15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1999-12-01-15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-12-01+15:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1999-12-01+15:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-12-01+10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1999-12-01+10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1999-12-01-10:60&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1999-12-01-10:60")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;1999-12-01-03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("1999-12-01-03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(xs:date(&#34;2002-11-23Z&#34;)) eq xs:gYear(&#34;2002Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(xs:date("2002-11-23Z")) eq xs:gYear("2002Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:gYear(&#34;2002-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(xs:date("2002-11-23-13:37")) eq xs:gYear("2002-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(xs:date(&#34;2002-11-23Z&#34;)) eq xs:gYearMonth(&#34;2002-11Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(xs:date("2002-11-23Z")) eq xs:gYearMonth("2002-11Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:gYearMonth(&#34;2002-11-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(xs:date("2002-11-23-13:37")) eq xs:gYearMonth("2002-11-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(xs:date(&#34;2002-11-23-00:00&#34;)) eq xs:gMonth(&#34;--11Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(xs:date("2002-11-23-00:00")) eq xs:gMonth("--11Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:gMonth(&#34;--11-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(xs:date("2002-11-23-13:37")) eq xs:gMonth("--11-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(xs:date(&#34;2002-11-23-00:00&#34;)) eq xs:gMonthDay(&#34;--11-23Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(xs:date("2002-11-23-00:00")) eq xs:gMonthDay("--11-23Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:gMonthDay(&#34;--11-23-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(xs:date("2002-11-23-13:37")) eq xs:gMonthDay("--11-23-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(xs:date(&#34;2002-11-23-00:00&#34;)) eq xs:gDay(&#34;---23Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(xs:date("2002-11-23-00:00")) eq xs:gDay("---23Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:gDay(&#34;---23-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(xs:date("2002-11-23-13:37")) eq xs:gDay("---23-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(xs:date(&#34;2002-11-23-00:00&#34;)) eq xs:dateTime(&#34;2002-11-23T00:00:00.000Z&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime(xs:date("2002-11-23-00:00")) eq xs:dateTime("2002-11-23T00:00:00.000Z")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(xs:date(&#34;2002-11-23-13:37&#34;)) eq xs:dateTime(&#34;2002-11-23T00:00:00.000-13:37&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime(xs:date("2002-11-23-13:37")) eq xs:dateTime("2002-11-23T00:00:00.000-13:37")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;1999-12-01-00:00&#34;)) eq &#34;1999-12-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("1999-12-01-00:00")) eq "1999-12-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;1999-12-01+00:00&#34;)) eq &#34;1999-12-01Z&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("1999-12-01+00:00")) eq "1999-12-01Z"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:date(&#34;2002-02-15&#34;)) eq &#34;2002-02-15&#34;">
      <x:call>
        <x:param select="string(.)">xs:string(xs:date("2002-02-15")) eq "2002-02-15"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic()">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic( &#34;an arbitrary string(untypedAtomic source)&#34; , &#34;an arbitrary string(untypedAtomic source)&#34; )">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" , "an arbitrary string(untypedAtomic source)" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)), 3, 1) instance of xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:untypedAtomic("an arbitrary string(untypedAtomic source)")), 3, 1) instance of xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34; an arbitrary string(untypedAtomic source) &#34;) eq xs:untypedAtomic(&#34; an arbitrary string(untypedAtomic source) &#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ") eq xs:untypedAtomic(" an arbitrary string(untypedAtomic source) ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;&#34;) eq xs:untypedAtomic(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("") eq xs:untypedAtomic("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:untypedAtomic( &#34;an arbitrary string(untypedAtomic source)&#34; )) eq xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:untypedAtomic( "an arbitrary string(untypedAtomic source)" )) eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:untypedAtomic("an arbitrary string(untypedAtomic source)"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) cast as xs:untypedAtomic eq xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:untypedAtomic eq xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:untypedAtomic("an arbitrary string(untypedAtomic source)") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string()">
      <x:call>
        <x:param select="string(.)">xs:string()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string( &#34;an arbitrary string&#34; , &#34;an arbitrary string&#34; )">
      <x:call>
        <x:param select="string(.)">xs:string( "an arbitrary string" , "an arbitrary string" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:string(&#34;an arbitrary string&#34;)), 3, 1) instance of xs:string">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:string("an arbitrary string")), 3, 1) instance of xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34; an arbitrary string &#34;) eq xs:string(&#34; an arbitrary string &#34;)">
      <x:call>
        <x:param select="string(.)">xs:string(" an arbitrary string ") eq xs:string(" an arbitrary string ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;&#34;) eq xs:string(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:string("") eq xs:string("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:untypedAtomic( &#34;an arbitrary string&#34; )) eq xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:string(xs:untypedAtomic( "an arbitrary string" )) eq xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:string(&#34;an arbitrary string&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:string("an arbitrary string"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;an arbitrary string&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:string("an arbitrary string") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;an arbitrary string&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:string("an arbitrary string") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;an arbitrary string&#34;) cast as xs:string eq xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:string("an arbitrary string") cast as xs:string eq xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(&#34;an arbitrary string&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:string("an arbitrary string") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:string(&#34;an arbitrary string&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:string("an arbitrary string") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float()">
      <x:call>
        <x:param select="string(.)">xs:float()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float( &#34;3.4e5&#34; , &#34;3.4e5&#34; )">
      <x:call>
        <x:param select="string(.)">xs:float( "3.4e5" , "3.4e5" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:float(&#34;3.4e5&#34;)), 3, 1) instance of xs:float">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:float("3.4e5")), 3, 1) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34; 3.4e5 &#34;) eq xs:float(&#34; 3.4e5 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:float(" 3.4e5 ") eq xs:float(" 3.4e5 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:untypedAtomic( &#34;3.4e5&#34; )) eq xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float(xs:untypedAtomic( "3.4e5" )) eq xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:float(&#34;3.4e5&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:float("3.4e5"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:float eq xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:float eq xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) castable as xs:float">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") castable as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:double ne xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:double ne xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) castable as xs:double">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") castable as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:boolean eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:boolean eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) castable as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") castable as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4e5&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:float("3.4e5") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:float(&#34;3.4e5&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:float("3.4e5") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double()">
      <x:call>
        <x:param select="string(.)">xs:double()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double( &#34;3.3e3&#34; , &#34;3.3e3&#34; )">
      <x:call>
        <x:param select="string(.)">xs:double( "3.3e3" , "3.3e3" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:double(&#34;3.3e3&#34;)), 3, 1) instance of xs:double">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:double("3.3e3")), 3, 1) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34; 3.3e3 &#34;) eq xs:double(&#34; 3.3e3 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:double(" 3.3e3 ") eq xs:double(" 3.3e3 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:untypedAtomic( &#34;3.3e3&#34; )) eq xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double(xs:untypedAtomic( "3.3e3" )) eq xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:double(&#34;3.3e3&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:double("3.3e3"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:float ne xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:float ne xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) castable as xs:float">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") castable as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:double eq xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:double eq xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) castable as xs:double">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") castable as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:boolean eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:boolean eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) castable as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") castable as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;3.3e3&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:double("3.3e3") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:double(&#34;3.3e3&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:double("3.3e3") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal()">
      <x:call>
        <x:param select="string(.)">xs:decimal()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal( &#34;10.01&#34; , &#34;10.01&#34; )">
      <x:call>
        <x:param select="string(.)">xs:decimal( "10.01" , "10.01" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:decimal(&#34;10.01&#34;)), 3, 1) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:decimal("10.01")), 3, 1) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34; 10.01 &#34;) eq xs:decimal(&#34; 10.01 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal(" 10.01 ") eq xs:decimal(" 10.01 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:untypedAtomic( &#34;10.01&#34; )) eq xs:decimal(&#34;10.01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:untypedAtomic( "10.01" )) eq xs:decimal("10.01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:decimal(&#34;10.01&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:decimal("10.01"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:float ne xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:float ne xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:float">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:double ne xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:double ne xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:double">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:decimal eq xs:decimal(&#34;10.01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:decimal eq xs:decimal("10.01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:integer ne xs:integer(&#34;6789&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:integer ne xs:integer("6789")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:boolean eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:boolean eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) castable as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") castable as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;10.01&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:decimal("10.01") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:decimal(&#34;10.01&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:decimal("10.01") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer()">
      <x:call>
        <x:param select="string(.)">xs:integer()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer( &#34;6789&#34; , &#34;6789&#34; )">
      <x:call>
        <x:param select="string(.)">xs:integer( "6789" , "6789" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:integer(&#34;6789&#34;)), 3, 1) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:integer("6789")), 3, 1) instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34; 6789 &#34;) eq xs:integer(&#34; 6789 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer(" 6789 ") eq xs:integer(" 6789 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:untypedAtomic( &#34;6789&#34; )) eq xs:integer(&#34;6789&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:untypedAtomic( "6789" )) eq xs:integer("6789")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:integer(&#34;6789&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:integer("6789"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:float ne xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:float ne xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:float">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:double ne xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:double ne xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:double">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:decimal ne xs:decimal(&#34;10.01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:decimal ne xs:decimal("10.01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:integer eq xs:integer(&#34;6789&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:integer eq xs:integer("6789")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:boolean eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:boolean eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) castable as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") castable as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;6789&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:integer("6789") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:integer(&#34;6789&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:integer("6789") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration()">
      <x:call>
        <x:param select="string(.)">xs:duration()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration( &#34;P1Y2M3DT10H30M&#34; , &#34;P1Y2M3DT10H30M&#34; )">
      <x:call>
        <x:param select="string(.)">xs:duration( "P1Y2M3DT10H30M" , "P1Y2M3DT10H30M" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:duration(&#34;P1Y2M3DT10H30M&#34;)), 3, 1) instance of xs:duration">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:duration("P1Y2M3DT10H30M")), 3, 1) instance of xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34; P1Y2M3DT10H30M &#34;) eq xs:duration(&#34; P1Y2M3DT10H30M &#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration(" P1Y2M3DT10H30M ") eq xs:duration(" P1Y2M3DT10H30M ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(xs:untypedAtomic( &#34;P1Y2M3DT10H30M&#34; )) eq xs:duration(&#34;P1Y2M3DT10H30M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration(xs:untypedAtomic( "P1Y2M3DT10H30M" )) eq xs:duration("P1Y2M3DT10H30M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:duration(&#34;P1Y2M3DT10H30M&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:duration("P1Y2M3DT10H30M"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:duration eq xs:duration(&#34;P1Y2M3DT10H30M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:duration eq xs:duration("P1Y2M3DT10H30M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") castable as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:yearMonthDuration ne xs:yearMonthDuration(&#34;P1Y12M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") castable as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:dayTimeDuration ne xs:dayTimeDuration(&#34;P3DT2H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") castable as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:duration(&#34;P1Y2M3DT10H30M&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:duration("P1Y2M3DT10H30M") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:duration(&#34;P1Y2M3DT10H30M&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:duration("P1Y2M3DT10H30M") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration()">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration( &#34;P1Y12M&#34; , &#34;P1Y12M&#34; )">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration( "P1Y12M" , "P1Y12M" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:yearMonthDuration(&#34;P1Y12M&#34;)), 3, 1) instance of xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:yearMonthDuration("P1Y12M")), 3, 1) instance of xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34; P1Y12M &#34;) eq xs:yearMonthDuration(&#34; P1Y12M &#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration(" P1Y12M ") eq xs:yearMonthDuration(" P1Y12M ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(xs:untypedAtomic( &#34;P1Y12M&#34; )) eq xs:yearMonthDuration(&#34;P1Y12M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration(xs:untypedAtomic( "P1Y12M" )) eq xs:yearMonthDuration("P1Y12M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:yearMonthDuration(&#34;P1Y12M&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:yearMonthDuration("P1Y12M"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:duration ne xs:duration(&#34;P1Y2M3DT10H30M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") castable as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:yearMonthDuration eq xs:yearMonthDuration(&#34;P1Y12M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:yearMonthDuration eq xs:yearMonthDuration("P1Y12M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") castable as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:dayTimeDuration ne xs:dayTimeDuration(&#34;P3DT2H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:dayTimeDuration ne xs:dayTimeDuration("P3DT2H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") castable as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:yearMonthDuration(&#34;P1Y12M&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:yearMonthDuration("P1Y12M") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:yearMonthDuration(&#34;P1Y12M&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:yearMonthDuration("P1Y12M") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration()">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration( &#34;P3DT2H&#34; , &#34;P3DT2H&#34; )">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration( "P3DT2H" , "P3DT2H" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:dayTimeDuration(&#34;P3DT2H&#34;)), 3, 1) instance of xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:dayTimeDuration("P3DT2H")), 3, 1) instance of xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34; P3DT2H &#34;) eq xs:dayTimeDuration(&#34; P3DT2H &#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration(" P3DT2H ") eq xs:dayTimeDuration(" P3DT2H ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(xs:untypedAtomic( &#34;P3DT2H&#34; )) eq xs:dayTimeDuration(&#34;P3DT2H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration(xs:untypedAtomic( "P3DT2H" )) eq xs:dayTimeDuration("P3DT2H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:dayTimeDuration(&#34;P3DT2H&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:dayTimeDuration("P3DT2H"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:duration ne xs:duration(&#34;P1Y2M3DT10H30M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:duration ne xs:duration("P1Y2M3DT10H30M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") castable as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:yearMonthDuration ne xs:yearMonthDuration(&#34;P1Y12M&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:yearMonthDuration ne xs:yearMonthDuration("P1Y12M")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") castable as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:dayTimeDuration eq xs:dayTimeDuration(&#34;P3DT2H&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:dayTimeDuration eq xs:dayTimeDuration("P3DT2H")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") castable as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dayTimeDuration(&#34;P3DT2H&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:dayTimeDuration("P3DT2H") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dayTimeDuration(&#34;P3DT2H&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:dayTimeDuration("P3DT2H") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime()">
      <x:call>
        <x:param select="string(.)">xs:dateTime()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime( &#34;2002-10-10T12:00:00-05:00&#34; , &#34;2002-10-10T12:00:00-05:00&#34; )">
      <x:call>
        <x:param select="string(.)">xs:dateTime( "2002-10-10T12:00:00-05:00" , "2002-10-10T12:00:00-05:00" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;)), 3, 1) instance of xs:dateTime">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:dateTime("2002-10-10T12:00:00-05:00")), 3, 1) instance of xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34; 2002-10-10T12:00:00-05:00 &#34;) eq xs:dateTime(&#34; 2002-10-10T12:00:00-05:00 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime(" 2002-10-10T12:00:00-05:00 ") eq xs:dateTime(" 2002-10-10T12:00:00-05:00 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(xs:untypedAtomic( &#34;2002-10-10T12:00:00-05:00&#34; )) eq xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime(xs:untypedAtomic( "2002-10-10T12:00:00-05:00" )) eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:dateTime("2002-10-10T12:00:00-05:00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:dateTime eq xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:dateTime eq xs:dateTime("2002-10-10T12:00:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:time ne xs:time(&#34;03:20:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:time ne xs:time("03:20:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:time">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:date ne xs:date(&#34;2004-10-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:date ne xs:date("2004-10-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:date">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:gYearMonth ne xs:gYearMonth(&#34;1999-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:gYear ne xs:gYear(&#34;1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gYear ne xs:gYear("1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:gMonthDay ne xs:gMonthDay(&#34;--11-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:gDay ne xs:gDay(&#34;---03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gDay ne xs:gDay("---03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:gMonth ne xs:gMonth(&#34;--11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:gMonth ne xs:gMonth("--11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-10-10T12:00:00-05:00") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:dateTime("2002-10-10T12:00:00-05:00") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time()">
      <x:call>
        <x:param select="string(.)">xs:time()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time( &#34;03:20:00-05:00&#34; , &#34;03:20:00-05:00&#34; )">
      <x:call>
        <x:param select="string(.)">xs:time( "03:20:00-05:00" , "03:20:00-05:00" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:time(&#34;03:20:00-05:00&#34;)), 3, 1) instance of xs:time">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:time("03:20:00-05:00")), 3, 1) instance of xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34; 03:20:00-05:00 &#34;) eq xs:time(&#34; 03:20:00-05:00 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:time(" 03:20:00-05:00 ") eq xs:time(" 03:20:00-05:00 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(xs:untypedAtomic( &#34;03:20:00-05:00&#34; )) eq xs:time(&#34;03:20:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time(xs:untypedAtomic( "03:20:00-05:00" )) eq xs:time("03:20:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:time(&#34;03:20:00-05:00&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:time("03:20:00-05:00"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:time eq xs:time(&#34;03:20:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:time eq xs:time("03:20:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) castable as xs:time">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") castable as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;03:20:00-05:00&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:time("03:20:00-05:00") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:time(&#34;03:20:00-05:00&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:time("03:20:00-05:00") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date()">
      <x:call>
        <x:param select="string(.)">xs:date()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date( &#34;2004-10-13&#34; , &#34;2004-10-13&#34; )">
      <x:call>
        <x:param select="string(.)">xs:date( "2004-10-13" , "2004-10-13" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:date(&#34;2004-10-13&#34;)), 3, 1) instance of xs:date">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:date("2004-10-13")), 3, 1) instance of xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34; 2004-10-13 &#34;) eq xs:date(&#34; 2004-10-13 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(" 2004-10-13 ") eq xs:date(" 2004-10-13 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(xs:untypedAtomic( &#34;2004-10-13&#34; )) eq xs:date(&#34;2004-10-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(xs:untypedAtomic( "2004-10-13" )) eq xs:date("2004-10-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:date(&#34;2004-10-13&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:date("2004-10-13"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:dateTime ne xs:dateTime(&#34;2002-10-10T12:00:00-05:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:dateTime ne xs:dateTime("2002-10-10T12:00:00-05:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:date eq xs:date(&#34;2004-10-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:date eq xs:date("2004-10-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:date">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:gYearMonth ne xs:gYearMonth(&#34;1999-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:gYearMonth ne xs:gYearMonth("1999-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:gYear ne xs:gYear(&#34;1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:gYear ne xs:gYear("1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:gMonthDay ne xs:gMonthDay(&#34;--11-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:gMonthDay ne xs:gMonthDay("--11-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:gDay ne xs:gDay(&#34;---03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:gDay ne xs:gDay("---03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:gMonth ne xs:gMonth(&#34;--11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:gMonth ne xs:gMonth("--11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) castable as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") castable as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;2004-10-13&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:date("2004-10-13") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:date(&#34;2004-10-13&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:date("2004-10-13") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth()">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth( &#34;1999-11&#34; , &#34;1999-11&#34; )">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth( "1999-11" , "1999-11" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:gYearMonth(&#34;1999-11&#34;)), 3, 1) instance of xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:gYearMonth("1999-11")), 3, 1) instance of xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34; 1999-11 &#34;) eq xs:gYearMonth(&#34; 1999-11 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(" 1999-11 ") eq xs:gYearMonth(" 1999-11 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(xs:untypedAtomic( &#34;1999-11&#34; )) eq xs:gYearMonth(&#34;1999-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth(xs:untypedAtomic( "1999-11" )) eq xs:gYearMonth("1999-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:gYearMonth(&#34;1999-11&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:gYearMonth("1999-11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:gYearMonth eq xs:gYearMonth(&#34;1999-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:gYearMonth eq xs:gYearMonth("1999-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) castable as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") castable as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;1999-11&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("1999-11") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYearMonth(&#34;1999-11&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:gYearMonth("1999-11") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear()">
      <x:call>
        <x:param select="string(.)">xs:gYear()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear( &#34;1999&#34; , &#34;1999&#34; )">
      <x:call>
        <x:param select="string(.)">xs:gYear( "1999" , "1999" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:gYear(&#34;1999&#34;)), 3, 1) instance of xs:gYear">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:gYear("1999")), 3, 1) instance of xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34; 1999 &#34;) eq xs:gYear(&#34; 1999 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(" 1999 ") eq xs:gYear(" 1999 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(xs:untypedAtomic( &#34;1999&#34; )) eq xs:gYear(&#34;1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear(xs:untypedAtomic( "1999" )) eq xs:gYear("1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:gYear(&#34;1999&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:gYear("1999"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gYear eq xs:gYear(&#34;1999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gYear eq xs:gYear("1999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) castable as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") castable as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;1999&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:gYear("1999") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gYear(&#34;1999&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:gYear("1999") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay()">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay( &#34;--11-13&#34; , &#34;--11-13&#34; )">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay( "--11-13" , "--11-13" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:gMonthDay(&#34;--11-13&#34;)), 3, 1) instance of xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:gMonthDay("--11-13")), 3, 1) instance of xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34; --11-13 &#34;) eq xs:gMonthDay(&#34; --11-13 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(" --11-13 ") eq xs:gMonthDay(" --11-13 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(xs:untypedAtomic( &#34;--11-13&#34; )) eq xs:gMonthDay(&#34;--11-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay(xs:untypedAtomic( "--11-13" )) eq xs:gMonthDay("--11-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:gMonthDay(&#34;--11-13&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:gMonthDay("--11-13"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:gMonthDay eq xs:gMonthDay(&#34;--11-13&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:gMonthDay eq xs:gMonthDay("--11-13")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) castable as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") castable as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonthDay(&#34;--11-13&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:gMonthDay("--11-13") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonthDay(&#34;--11-13&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonthDay("--11-13") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay()">
      <x:call>
        <x:param select="string(.)">xs:gDay()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay( &#34;---03&#34; , &#34;---03&#34; )">
      <x:call>
        <x:param select="string(.)">xs:gDay( "---03" , "---03" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:gDay(&#34;---03&#34;)), 3, 1) instance of xs:gDay">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:gDay("---03")), 3, 1) instance of xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34; ---03 &#34;) eq xs:gDay(&#34; ---03 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(" ---03 ") eq xs:gDay(" ---03 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(xs:untypedAtomic( &#34;---03&#34; )) eq xs:gDay(&#34;---03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay(xs:untypedAtomic( "---03" )) eq xs:gDay("---03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:gDay(&#34;---03&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:gDay("---03"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:gDay eq xs:gDay(&#34;---03&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:gDay eq xs:gDay("---03")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) castable as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") castable as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gDay(&#34;---03&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:gDay("---03") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gDay(&#34;---03&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:gDay("---03") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth()">
      <x:call>
        <x:param select="string(.)">xs:gMonth()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth( &#34;--11&#34; , &#34;--11&#34; )">
      <x:call>
        <x:param select="string(.)">xs:gMonth( "--11" , "--11" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:gMonth(&#34;--11&#34;)), 3, 1) instance of xs:gMonth">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:gMonth("--11")), 3, 1) instance of xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34; --11 &#34;) eq xs:gMonth(&#34; --11 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(" --11 ") eq xs:gMonth(" --11 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(xs:untypedAtomic( &#34;--11&#34; )) eq xs:gMonth(&#34;--11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth(xs:untypedAtomic( "--11" )) eq xs:gMonth("--11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:gMonth(&#34;--11&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:gMonth("--11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:gMonth eq xs:gMonth(&#34;--11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:gMonth eq xs:gMonth("--11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) castable as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") castable as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--11&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--11") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:gMonth(&#34;--11&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:gMonth("--11") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean()">
      <x:call>
        <x:param select="string(.)">xs:boolean()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean( &#34;true&#34; , &#34;true&#34; )">
      <x:call>
        <x:param select="string(.)">xs:boolean( "true" , "true" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:boolean(&#34;true&#34;)), 3, 1) instance of xs:boolean">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:boolean("true")), 3, 1) instance of xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34; true &#34;) eq xs:boolean(&#34; true &#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean(" true ") eq xs:boolean(" true ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(xs:untypedAtomic( &#34;true&#34; )) eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean(xs:untypedAtomic( "true" )) eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:boolean(&#34;true&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:boolean("true"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:float ne xs:float(&#34;3.4e5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:float ne xs:float("3.4e5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:float">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:double ne xs:double(&#34;3.3e3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:double ne xs:double("3.3e3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:double">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:decimal ne xs:decimal(&#34;10.01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:decimal ne xs:decimal("10.01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:integer ne xs:integer(&#34;6789&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:integer ne xs:integer("6789")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:boolean eq xs:boolean(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:boolean eq xs:boolean("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) castable as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") castable as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:boolean(&#34;true&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:boolean("true") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:boolean(&#34;true&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:boolean("true") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary()">
      <x:call>
        <x:param select="string(.)">xs:base64Binary()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary( &#34;aaaa&#34; , &#34;aaaa&#34; )">
      <x:call>
        <x:param select="string(.)">xs:base64Binary( "aaaa" , "aaaa" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:base64Binary(&#34;aaaa&#34;)), 3, 1) instance of xs:base64Binary">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:base64Binary("aaaa")), 3, 1) instance of xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34; aaaa &#34;) eq xs:base64Binary(&#34; aaaa &#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary(" aaaa ") eq xs:base64Binary(" aaaa ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;&#34;) eq xs:base64Binary(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("") eq xs:base64Binary("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(xs:untypedAtomic( &#34;aaaa&#34; )) eq xs:base64Binary(&#34;aaaa&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary(xs:untypedAtomic( "aaaa" )) eq xs:base64Binary("aaaa")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:base64Binary(&#34;aaaa&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:base64Binary("aaaa"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:base64Binary eq xs:base64Binary(&#34;aaaa&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:base64Binary eq xs:base64Binary("aaaa")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) castable as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") castable as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:hexBinary ne xs:hexBinary(&#34;0FB7&#34;)">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:hexBinary ne xs:hexBinary("0FB7")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) castable as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") castable as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:base64Binary(&#34;aaaa&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:base64Binary("aaaa") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:base64Binary(&#34;aaaa&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:base64Binary("aaaa") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary()">
      <x:call>
        <x:param select="string(.)">xs:hexBinary()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary( &#34;0FB7&#34; , &#34;0FB7&#34; )">
      <x:call>
        <x:param select="string(.)">xs:hexBinary( "0FB7" , "0FB7" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:hexBinary(&#34;0FB7&#34;)), 3, 1) instance of xs:hexBinary">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:hexBinary("0FB7")), 3, 1) instance of xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34; 0FB7 &#34;) eq xs:hexBinary(&#34; 0FB7 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary(" 0FB7 ") eq xs:hexBinary(" 0FB7 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;&#34;) eq xs:hexBinary(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("") eq xs:hexBinary("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(xs:untypedAtomic( &#34;0FB7&#34; )) eq xs:hexBinary(&#34;0FB7&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary(xs:untypedAtomic( "0FB7" )) eq xs:hexBinary("0FB7")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:hexBinary(&#34;0FB7&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:hexBinary("0FB7"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:base64Binary ne xs:base64Binary(&#34;aaaa&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:base64Binary ne xs:base64Binary("aaaa")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) castable as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") castable as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:hexBinary eq xs:hexBinary(&#34;0FB7&#34;)">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:hexBinary eq xs:hexBinary("0FB7")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) castable as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") castable as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:hexBinary(&#34;0FB7&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:hexBinary("0FB7") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:hexBinary(&#34;0FB7&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:hexBinary("0FB7") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI()">
      <x:call>
        <x:param select="string(.)">xs:anyURI()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI( &#34;http://www.example.com/an/arbitrary/URI.ext&#34; , &#34;http://www.example.com/an/arbitrary/URI.ext&#34; )">
      <x:call>
        <x:param select="string(.)">xs:anyURI( "http://www.example.com/an/arbitrary/URI.ext" , "http://www.example.com/an/arbitrary/URI.ext" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;)), 3, 1) instance of xs:anyURI">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")), 3, 1) instance of xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34; http://www.example.com/an/arbitrary/URI.ext &#34;) eq xs:anyURI(&#34; http://www.example.com/an/arbitrary/URI.ext &#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ") eq xs:anyURI(" http://www.example.com/an/arbitrary/URI.ext ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;&#34;) eq xs:anyURI(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("") eq xs:anyURI("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(xs:untypedAtomic( &#34;http://www.example.com/an/arbitrary/URI.ext&#34; )) &#xA;      eq xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(xs:untypedAtomic( "http://www.example.com/an/arbitrary/URI.ext" )) 
      eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:untypedAtomic&#xA;      ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:untypedAtomic
      ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:anyURI eq xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:anyURI eq xs:anyURI("http://www.example.com/an/arbitrary/URI.ext")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) cast as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") cast as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:anyURI(&#34;http://www.example.com/an/arbitrary/URI.ext&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:anyURI("http://www.example.com/an/arbitrary/URI.ext") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName()">
      <x:call>
        <x:param select="string(.)">xs:QName()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName( &#34;ncname&#34; , &#34;ncname&#34; )">
      <x:call>
        <x:param select="string(.)">xs:QName( "ncname" , "ncname" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence((&#34;dummy&#34;, 1.1, xs:QName(&#34;ncname&#34;)), 3, 1) instance of xs:QName">
      <x:call>
        <x:param select="string(.)">subsequence(("dummy", 1.1, xs:QName("ncname")), 3, 1) instance of xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34; ncname &#34;) eq xs:QName(&#34; ncname &#34;)">
      <x:call>
        <x:param select="string(.)">xs:QName(" ncname ") eq xs:QName(" ncname ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:QName("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="boolean(xs:QName(&#34;ncname&#34;))">
      <x:call>
        <x:param select="string(.)">boolean(xs:QName("ncname"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:untypedAtomic ne xs:untypedAtomic(&#34;an arbitrary string(untypedAtomic source)&#34;)">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:untypedAtomic ne xs:untypedAtomic("an arbitrary string(untypedAtomic source)")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) castable as xs:untypedAtomic">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") castable as xs:untypedAtomic</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:string ne xs:string(&#34;an arbitrary string&#34;)">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:string ne xs:string("an arbitrary string")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) castable as xs:string">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") castable as xs:string</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:float">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:double">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:integer">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:duration">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:duration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:yearMonthDuration">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:yearMonthDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:dayTimeDuration">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:dayTimeDuration</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:dateTime">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:dateTime</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:time">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:time</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:date">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:date</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:gYearMonth">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:gYearMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:gYear">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:gYear</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:gMonthDay">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:gMonthDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:gDay">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:gDay</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:gMonth">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:gMonth</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:boolean">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:boolean</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:base64Binary">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:base64Binary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:hexBinary">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:hexBinary</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) cast as xs:anyURI">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") cast as xs:anyURI</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:QName(&#34;ncname&#34;) castable as xs:QName">
      <x:call>
        <x:param select="string(.)">xs:QName("ncname") castable as xs:QName</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:QName(&#34;ncname&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:QName("ncname") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NOTATION()">
      <x:call>
        <x:param select="string(.)">xs:NOTATION()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NOTATION( &#34;prefix:local&#34; , &#34;prefix:local&#34; )">
      <x:call>
        <x:param select="string(.)">xs:NOTATION( "prefix:local" , "prefix:local" )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:untypedAtomic)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:untypedAtomic)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:string)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:string)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:float)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:float)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:double)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:double)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:decimal)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:decimal)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:integer)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:integer)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:duration)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:duration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:yearMonthDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:yearMonthDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:dayTimeDuration)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:dayTimeDuration)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:dateTime)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:dateTime)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:time)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:time)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:date)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:date)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:gYearMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:gYearMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:gYear)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:gYear)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:gMonthDay)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:gMonthDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:gDay)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:gDay)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:gMonth)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:gMonth)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:boolean)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:boolean)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:base64Binary)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:base64Binary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:hexBinary)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:hexBinary)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:anyURI)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:anyURI)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:QName)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:QName)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:NOTATION(&#34;prefix:local&#34;) castable as xs:NOTATION)">
      <x:call>
        <x:param select="string(.)">not(xs:NOTATION("prefix:local") castable as xs:NOTATION)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;myPrefix:ncname&#34; cast as xs:QName eq QName(&#34;http://example.com/&#34;, &#34;anotherPrefix:ncname&#34;)">
      <x:call>
        <x:param select="string(.)">"myPrefix:ncname" cast as xs:QName eq QName("http://example.com/", "anotherPrefix:ncname")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() cast as xs:QName?)">
      <x:call>
        <x:param select="string(.)">empty(() cast as xs:QName?)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;9223372036854775807&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("9223372036854775807")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;2147483647&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("2147483647")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;-128&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("-128")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-9223372036854775808&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-9223372036854775808")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;32767&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("32767")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;127&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("127")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;18446744073709551615&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("18446744073709551615")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;4294967295&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("4294967295")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;65535&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("65535")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;255&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("255")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(false())">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(true())">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(false())">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(true())">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(false())">
      <x:call>
        <x:param select="string(.)">xs:long(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(true())">
      <x:call>
        <x:param select="string(.)">xs:long(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(false())">
      <x:call>
        <x:param select="string(.)">xs:int(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(true())">
      <x:call>
        <x:param select="string(.)">xs:int(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(false())">
      <x:call>
        <x:param select="string(.)">xs:short(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(true())">
      <x:call>
        <x:param select="string(.)">xs:short(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(false())">
      <x:call>
        <x:param select="string(.)">xs:byte(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(true())">
      <x:call>
        <x:param select="string(.)">xs:byte(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(false())">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(true())">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(false())">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(true())">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(false())">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(true())">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(false())">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(true())">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(false())">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(true())">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(false())">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(true())">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;+0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("+0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;--0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("--0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;--1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("--1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;--0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("--0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;--1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("--1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;++1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("++1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;++1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("++1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;++0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("++0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-9223372036854775809&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-9223372036854775809")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483649&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483649")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32769&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32769")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;-129&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("-129")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;9223372036854775808&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("9223372036854775808")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;128&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("128")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;3.0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("3.0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;- 0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("- 0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;+ 0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("+ 0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;- 3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("- 3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;+ 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("+ 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;+ 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("+ 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;+ 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("+ 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;+ 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("+ 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;- 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("- 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;- 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("- 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;- 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("- 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;- 5&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("- 5")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;+ 0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("+ 0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;- 0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("- 0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;+ 3&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("+ 3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-000000000&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-000000000")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;000000001&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("000000001")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-0x1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-0x1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;0x9223372036854775807&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("0x9223372036854775807")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;0x2147483647&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("0x2147483647")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-0x32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-0x32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(&#34;-0x128&#34;)">
      <x:call>
        <x:param select="string(.)">xs:byte("-0x128")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0x0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0x0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;0x1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("0x1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(false())">
      <x:call>
        <x:param select="string(.)">xs:language(false())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(true())">
      <x:call>
        <x:param select="string(.)">xs:language(true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcdefjhl&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcdefjhl")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;a1a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("a1a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;a.a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("a.a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;a*a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("a*a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc--ab&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc--ab")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-ab-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-ab-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-abcdefikl&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-abcdefikl")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-abcdef.k&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-abcdef.k")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-ab1efikl&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-ab1efikl")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-a-1b1efikl&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-a-1b1efikl")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-a-1-1b1efil&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-a-1-1b1efil")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc-a-1-1b01efil&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc-a-1-1b01efil")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(1)">
      <x:call>
        <x:param select="string(.)">xs:language(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:short(&#34;1&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:short("1"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(current-date())">
      <x:call>
        <x:param select="string(.)">xs:language(current-date())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(current-time())">
      <x:call>
        <x:param select="string(.)">xs:language(current-time())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(current-dateTime())">
      <x:call>
        <x:param select="string(.)">xs:language(current-dateTime())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:name(&#34;input&#34;)">
      <x:call>
        <x:param select="string(.)">xs:name("input")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;1abc&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("1abc")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;ab\c&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("ab\c")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;ab|&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("ab|")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;a c&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("a c")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;::::&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("::::")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;_&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("_")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;:&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name(":")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34; a &#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name(" a ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;a1123-_--__-__--....-.--.-..12309asd&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("a1123-_--__-__--....-.--.-..12309asd")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:normalizedString(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:normalizedString("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:token(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:token("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:Name(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:Name("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NCName(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:NCName("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:ID(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:ID("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:IDREF(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:IDREF("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:ENTITY(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:ENTITY("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="namespace-uri-from-QName(xs:QName(&#34;ncname&#34;))">
      <x:call>
        <x:param select="string(.)">namespace-uri-from-QName(xs:QName("ncname"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34; ::::...:SDA21455313 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN(" ::::...:SDA21455313 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34; f f&#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN(" f f")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN("")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34; &#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN(" ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NMTOKEN(&#34;;&#34;)">
      <x:call>
        <x:param select="string(.)">xs:NMTOKEN(";")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http:\\invalid&gt;URI\someURI&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http:\\invalid&gt;URI\someURI")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="concat(&#34;b&#34;, xs:anyURI(&#34; &#34;), &#34;b&#34;)">
      <x:call>
        <x:param select="string(.)">concat("b", xs:anyURI(" "), "b")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;〜&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("〜")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;http://www.example.com/file%GF.html&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("http://www.example.com/file%GF.html")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyAtomic(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyAtomic("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyAtomic(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyAtomic("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:positiveInteger(&#34;52&#34;))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:positiveInteger("52"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:int(&#34;-1873914410&#34;))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:int("-1873914410"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;+Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("+Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;+Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("+Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34; NaN &#34;)">
      <x:call>
        <x:param select="string(.)">xs:float(" NaN ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34; NaN &#34;)">
      <x:call>
        <x:param select="string(.)">xs:double(" NaN ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34; INF &#34;)">
      <x:call>
        <x:param select="string(.)">xs:float(" INF ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34; INF &#34;)">
      <x:call>
        <x:param select="string(.)">xs:double(" INF ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;nan&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("nan")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;nan&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("nan")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;- INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("- INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;- INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("- INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;+ INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("+ INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;+ INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("+ INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;+INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("+INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;+INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("+INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;+INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("+INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;+INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("+INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;+Inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("+Inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;nan&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("nan")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;- INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("- INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;+ INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("+ INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;+INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("+INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;NaN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("NaN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:integer(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:long(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:int(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:short(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:byte(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:byte(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedByte(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedByte(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;-INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("-INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;INF&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("INF"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:float(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:float("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInt(xs:double(&#34;NaN&#34;))">
      <x:call>
        <x:param select="string(.)">xs:unsignedInt(xs:double("NaN"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedInteger(1)">
      <x:call>
        <x:param select="string(.)">xs:unsignedInteger(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:byte(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:byte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:int(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:int(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:long(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:long(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:negativeInteger(-3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:negativeInteger(-3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:nonNegativeInteger(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:nonNegativeInteger(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:nonPositiveInteger(0))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:nonPositiveInteger(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:short(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:short(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:unsignedByte(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:unsignedByte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:unsignedLong(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:unsignedLong(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(xs:unsignedShort(3))">
      <x:call>
        <x:param select="string(.)">xs:double(xs:unsignedShort(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:byte(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:byte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:int(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:int(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:long(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:long(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:negativeInteger(-3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:negativeInteger(-3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:nonNegativeInteger(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:nonNegativeInteger(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:nonPositiveInteger(0))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:nonPositiveInteger(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:short(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:short(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:unsignedByte(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:unsignedByte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:unsignedLong(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:unsignedLong(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(xs:unsignedShort(3))">
      <x:call>
        <x:param select="string(.)">xs:float(xs:unsignedShort(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:byte(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:byte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:int(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:int(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:long(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:long(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:negativeInteger(-3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:negativeInteger(-3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:nonNegativeInteger(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:nonNegativeInteger(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:nonPositiveInteger(0))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:nonPositiveInteger(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:short(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:short(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:unsignedByte(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:unsignedByte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:unsignedLong(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:unsignedLong(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(xs:unsignedShort(3))">
      <x:call>
        <x:param select="string(.)">xs:decimal(xs:unsignedShort(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:byte(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:byte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:int(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:int(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:long(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:long(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:negativeInteger(-3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:negativeInteger(-3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:nonNegativeInteger(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:nonNegativeInteger(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:nonPositiveInteger(0))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:nonPositiveInteger(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:short(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:short(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:unsignedByte(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:unsignedByte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:unsignedLong(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:unsignedLong(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:unsignedShort(3))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:unsignedShort(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:byte(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:byte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:int(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:int(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:long(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:long(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:negativeInteger(-3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:negativeInteger(-3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:nonNegativeInteger(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:nonNegativeInteger(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:nonPositiveInteger(0))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:nonPositiveInteger(0))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:short(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:short(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:unsignedByte(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:unsignedByte(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:unsignedInt(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:unsignedInt(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:unsignedLong(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:unsignedLong(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:unsignedShort(3))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:unsignedShort(3))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:normalizedString(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:normalizedString("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:token(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:token("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:language(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:language("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:NMTOKEN(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:NMTOKEN("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:Name(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:Name("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:NCName(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:NCName("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:ID(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:ID("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:IDREF(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:IDREF("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(xs:ENTITY(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic(xs:ENTITY("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:normalizedString(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:normalizedString("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:token(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:token("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:language(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:language("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:NMTOKEN(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:NMTOKEN("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:Name(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:Name("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:NCName(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:NCName("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:ID(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:ID("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:IDREF(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:IDREF("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:string(xs:ENTITY(&#34;foo&#34;))">
      <x:call>
        <x:param select="string(.)">xs:string(xs:ENTITY("foo"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;a&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("a")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;ab&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("ab")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abc&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abc")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcd&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcd")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcde&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcde")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcdef&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcdef")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcdefg&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcdefg")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcdefgh&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcdefgh")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(&#34;abcdefgh-abcdefgh&#34;)">
      <x:call>
        <x:param select="string(.)">xs:language("abcdefgh-abcdefgh")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34; http://example.com/ foo.xml &#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(" http://example.com/ foo.xml ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;foo://&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("foo://")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;%gg&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("%gg")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;:/cut.jpg&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(":/cut.jpg")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;:/images/cut.png&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(":/images/cut.png")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join((&#34;START&#34;, &#xA;      &#x9;&#x9;string(QName(&#34;http://example.com&#34;, &#34;prefix:localName&#34;)), &#xA;      &#x9;&#x9;string(QName(&#34;http://example.com&#34;, &#34;localName&#34;)), &#xA;      &#x9;&#x9;string(QName(&#34;http://example.com&#34;, &#34;localName&#34;)), &#xA;      &#x9;&#x9;string(QName(&#34;&#34;, &#34;localName&#34;)), &#xA;      &#x9;&#x9;string(QName((), &#34;localName&#34;)), &#xA;      &#x9;&#x9;&#34;END&#34;), &#34; &#34;)">
      <x:call>
        <x:param select="string(.)">string-join(("START", 
      		string(QName("http://example.com", "prefix:localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("http://example.com", "localName")), 
      		string(QName("", "localName")), 
      		string(QName((), "localName")), 
      		"END"), " ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string-join((&#34;START&#34;, &#xA;      &#x9;string(QName(&#34;http://example.com&#34;, &#xA;      &#x9;&#34;prefix:localName&#34;)), &#xA;      &#x9;string(QName(&#34;http://example.com&#34;, &#34;localName&#34;)), &#xA;      &#x9;string(QName(&#34;http://example.com&#34;, &#34;localName&#34;)), &#xA;      &#x9;string(QName(&#34;&#34;, &#34;localName&#34;)), &#xA;      &#x9;string(QName((), &#34;localName&#34;)), &#xA;      &#x9;&#34;END&#34;), &#34; &#34;)">
      <x:call>
        <x:param select="string(.)">string-join(("START", 
      	string(QName("http://example.com", 
      	"prefix:localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("http://example.com", "localName")), 
      	string(QName("", "localName")), 
      	string(QName((), "localName")), 
      	"END"), " ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;//server/share/dir1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI("//server/share/dir1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;-9876&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("-9876")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:-1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:-1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:+1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:+1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11: 1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11: 1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11: 1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11: 1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;-1:11:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("-1:11:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;+1:11:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("+1:11:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;+1:11:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("+1:11:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:1e0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:1e0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:1E0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:1E0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:1b0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:1b0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11: 10&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11: 10")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11b33&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11b33")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:111&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:111")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11.+11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11.+11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11.-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11.-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11. 11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11. 11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;24:00:00.1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("24:00:00.1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;24:01:00&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("24:01:00")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;24:00:01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("24:00:01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11++1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11++1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11+-1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11+-1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11+ 1:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11+ 1:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11+11:+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11+11:+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11+11:-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11+11:-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:11+11: 1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:11+11: 1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;1 :11:11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("1 :11:11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:time(&#34;11:11:1 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:time("11:11:1 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;+2002-12-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("+2002-12-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34; 111-11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(" 111-11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34; +11-11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date(" +11-11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111- 1-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111- 1-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;-111-11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("-111-11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;+111-11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("+111-11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-11- 1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-11- 1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-+1-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-+1-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-11-+1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-11-+1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111--1-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111--1-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-11--1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-11--1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-11-1F&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-11-1F")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;0x10-11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("0x10-11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;111 -11-11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("111 -11-11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-1 -11&#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-1 -11")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:date(&#34;1111-11-1 &#34;)">
      <x:call>
        <x:param select="string(.)">xs:date("1111-11-1 ")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:dateTime(&#34;2002-11-23&#34;)">
      <x:call>
        <x:param select="string(.)">xs:dateTime("2002-11-23")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYear(&#34;0040&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYear("0040")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gYearMonth(&#34;0040-01&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gYearMonth("0040-01")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;xs:untypedAtomic&#34;), xs:dateTime(&#34;2002-10-10T23:02:12Z&#34;), xs:date(&#34;2002-10-10Z&#34;), xs:time(&#34;23:02:12Z&#34;),&#xA;                xs:duration(&#34;P12M&#34;), xs:dayTimeDuration(&#34;PT1S&#34;), xs:yearMonthDuration(&#34;P1M&#34;), xs:float(&#34;3e3&#34;), xs:double(&#34;4e4&#34;),&#xA;                xs:decimal(&#34;2.0&#34;), xs:integer(&#34;16&#34;), xs:nonPositiveInteger(&#34;0&#34;), xs:negativeInteger(&#34;-4&#34;), xs:long(&#34;5&#34;),&#xA;                xs:int(&#34;6&#34;), xs:short(&#34;7&#34;), xs:byte(&#34;8&#34;), xs:nonNegativeInteger(&#34;9&#34;), xs:unsignedLong(&#34;10&#34;),&#xA;                xs:unsignedInt(&#34;11&#34;), xs:unsignedShort(&#34;12&#34;), xs:unsignedByte(&#34;13&#34;), xs:positiveInteger(&#34;14&#34;),&#xA;                xs:gYearMonth(&#34;1976-02Z&#34;), xs:gYear(&#34;2005-12:00&#34;), xs:gMonthDay(&#34;--12-25-14:00&#34;),&#xA;                xs:gDay(&#34;---25-14:00&#34;), xs:gMonth(&#34;--12-14:00&#34;), xs:boolean(&#34;true&#34;), xs:base64Binary(&#34;aaaa&#34;),&#xA;                xs:hexBinary(&#34;FFFF&#34;), xs:anyURI(&#34;http://example.com/&#34;), xs:QName(&#34;localName&#34;),&#xA;                xs:string(&#34;An xs:string&#34;), xs:normalizedString(&#34;normalizedString&#34;), xs:token(&#34;token&#34;),&#xA;                xs:language(&#34;language&#34;), xs:NMTOKEN(&#34;NMTOKEN&#34;), xs:Name(&#34;Name&#34;), xs:NCName(&#34;NCName&#34;),&#xA;                xs:ID(&#34;ID&#34;), xs:IDREF(&#34;IDREF&#34;), xs:ENTITY(&#34;ENTITY&#34;)">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("xs:untypedAtomic"), xs:dateTime("2002-10-10T23:02:12Z"), xs:date("2002-10-10Z"), xs:time("23:02:12Z"),
                xs:duration("P12M"), xs:dayTimeDuration("PT1S"), xs:yearMonthDuration("P1M"), xs:float("3e3"), xs:double("4e4"),
                xs:decimal("2.0"), xs:integer("16"), xs:nonPositiveInteger("0"), xs:negativeInteger("-4"), xs:long("5"),
                xs:int("6"), xs:short("7"), xs:byte("8"), xs:nonNegativeInteger("9"), xs:unsignedLong("10"),
                xs:unsignedInt("11"), xs:unsignedShort("12"), xs:unsignedByte("13"), xs:positiveInteger("14"),
                xs:gYearMonth("1976-02Z"), xs:gYear("2005-12:00"), xs:gMonthDay("--12-25-14:00"),
                xs:gDay("---25-14:00"), xs:gMonth("--12-14:00"), xs:boolean("true"), xs:base64Binary("aaaa"),
                xs:hexBinary("FFFF"), xs:anyURI("http://example.com/"), xs:QName("localName"),
                xs:string("An xs:string"), xs:normalizedString("normalizedString"), xs:token("token"),
                xs:language("language"), xs:NMTOKEN("NMTOKEN"), xs:Name("Name"), xs:NCName("NCName"),
                xs:ID("ID"), xs:IDREF("IDREF"), xs:ENTITY("ENTITY")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;inf&#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"inf" cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;inF&#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"inF" cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;-inF&#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"-inF" cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;inF &#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"inF " cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;-inF &#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"-inF " cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;naN&#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">"naN" cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34; naN&#34; cast as xs:decimal">
      <x:call>
        <x:param select="string(.)">" naN" cast as xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(QName(&#34;http://example.com/&#34;, &#34;p:localName&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(QName("http://example.com/", "p:localName"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:base64Binary(&#34;1111&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:base64Binary("1111"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:hexBinary(&#34;11&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:hexBinary("11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:gMonth(&#34;--10&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:gMonth("--10"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:gDay(&#34;---11&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:gDay("---11"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:gMonthDay(&#34;--10-15&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:gMonthDay("--10-15"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:gYear(&#34;4004&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:gYear("4004"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:integer(&#34;543&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:integer("543"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:decimal(&#34;543&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:decimal("543"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:double(&#34;543&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:double("543"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:float(&#34;543&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:float("543"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(current-time())">
      <x:call>
        <x:param select="string(.)">xs:language(current-time())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(current-date())">
      <x:call>
        <x:param select="string(.)">xs:language(current-date())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:duration(&#34;P1M&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:duration("P1M"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:dayTimeDuration(&#34;P1DT4H&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:dayTimeDuration("P1DT4H"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:language(xs:yearMonthDuration(&#34;P4Y5M&#34;))">
      <x:call>
        <x:param select="string(.)">xs:language(xs:yearMonthDuration("P4Y5M"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:NCName(codepoints-to-string((3648, 3592, 3617, 3626, 3660)))">
      <x:call>
        <x:param select="string(.)">xs:NCName(codepoints-to-string((3648, 3592, 3617, 3626, 3660)))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;:/&#34;)">
      <x:call>
        <x:param select="string(.)">xs:anyURI(":/")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:gMonth(&#34;--02--&#34;)">
      <x:call>
        <x:param select="string(.)">xs:gMonth("--02--")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;inF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("inF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;inF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("inF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;inF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("inF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;inf&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("inf")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;+InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("+InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;+InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("+InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;+InF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("+InF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;naN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("naN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;naN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("naN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;naN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("naN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>