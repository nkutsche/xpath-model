<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/prod/GeneralComp.le.xml"><x:call function="nk:xpath-model"/><x:scenario label="() &lt;= ()">
      <x:call>
        <x:param select="string(.)">() &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= 10000">
      <x:call>
        <x:param select="string(.)">() &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">() &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">() &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">() &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">() &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">() &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= ()">
      <x:call>
        <x:param select="string(.)">10000 &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">10000 &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">10000 &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">10000 &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">10000 &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">10000 &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= ()">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= 10000">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">(50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= ()">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= 10000">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= ()">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= 10000">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= ()">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= 10000">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &lt;= (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ()">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= 10000">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (50000)">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (10000,50000)">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &lt;= ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:anyURI(&#34;http://www.example/com&#34;)) &lt;= (xs:anyURI(&#34;http://www.example/com&#34;))">
      <x:call>
        <x:param select="string(.)">(xs:anyURI("http://www.example/com")) &lt;= (xs:anyURI("http://www.example/com"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(() &lt;= () )">
      <x:call>
        <x:param select="string(.)">not(() &lt;= () )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(1 &lt;= () )">
      <x:call>
        <x:param select="string(.)">not(1 &lt;= () )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(() &lt;= 1 )">
      <x:call>
        <x:param select="string(.)">not(() &lt;= 1 )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 &lt;= 1">
      <x:call>
        <x:param select="string(.)">1 &lt;= 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;false&#34;) &lt;= false()">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("false") &lt;= false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="false() &lt;= xs:untypedAtomic(&#34;false&#34;)">
      <x:call>
        <x:param select="string(.)">false() &lt;= xs:untypedAtomic("false")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;false&#34;) &lt;= false()">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("false") &lt;= false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() &lt;= xs:untypedAtomic(&#34;true&#34;)">
      <x:call>
        <x:param select="string(.)">true() &lt;= xs:untypedAtomic("true")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>