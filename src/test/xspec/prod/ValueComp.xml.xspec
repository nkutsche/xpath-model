<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>(1, 2, 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 eq (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3) ne 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) ne 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 ne (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 ne (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3) lt 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) lt 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 lt (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 lt (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3) le 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) le 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 le (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 le (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3) gt 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) gt 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 gt (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 gt (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(1, 2, 3) ge 3</x:label>
      <x:variable name="expr" as="xs:string">(1, 2, 3) ge 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 ge (1, 2, 3)</x:label>
      <x:variable name="expr" as="xs:string">3 ge (1, 2, 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(() eq 1)</x:label>
      <x:variable name="expr" as="xs:string">empty(() eq 1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(1 eq ())</x:label>
      <x:variable name="expr" as="xs:string">empty(1 eq ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>empty(() eq ())</x:label>
      <x:variable name="expr" as="xs:string">empty(() eq ())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("1") eq xs:integer(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("1") eq xs:integer(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:integer(1) eq xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(1) eq xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("0") ne xs:double(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") ne xs:double(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:double(1) ne xs:untypedAtomic("0")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(1) ne xs:untypedAtomic("0")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("0") lt xs:float(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") lt xs:float(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:float(0) lt xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(0) lt xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("0") gt xs:decimal(1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("0") gt xs:decimal(1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:decimal(0) gt xs:untypedAtomic("1")</x:label>
      <x:variable name="expr" as="xs:string">xs:decimal(0) gt xs:untypedAtomic("1")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("4") eq 4</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("4") eq 4</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>4 eq xs:untypedAtomic("4")</x:label>
      <x:variable name="expr" as="xs:string">4 eq xs:untypedAtomic("4")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("3") eq 3</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:double(2) lt xs:untypedAtomic("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:double(2) lt xs:untypedAtomic("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:float(4) gt xs:untypedAtomic("3")</x:label>
      <x:variable name="expr" as="xs:string">xs:float(4) gt xs:untypedAtomic("3")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("3") ne xs:decimal(3.1)</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("3") ne xs:decimal(3.1)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:untypedAtomic("a string") eq "a string"</x:label>
      <x:variable name="expr" as="xs:string">xs:untypedAtomic("a string") eq "a string"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"a string" eq xs:untypedAtomic("a string")</x:label>
      <x:variable name="expr" as="xs:string">"a string" eq xs:untypedAtomic("a string")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>count((0, current-time())) ge 1</x:label>
      <x:variable name="expr" as="xs:string">count((0, current-time())) ge 1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>count((0, current-time())) ne 0</x:label>
      <x:variable name="expr" as="xs:string">count((0, current-time())) ne 0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(count((1, 2, current-time())) eq 0)</x:label>
      <x:variable name="expr" as="xs:string">not(count((1, 2, current-time())) eq 0)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>error() eq 3</x:label>
      <x:variable name="expr" as="xs:string">error() eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>error() eq error()</x:label>
      <x:variable name="expr" as="xs:string">error() eq error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 eq error()</x:label>
      <x:variable name="expr" as="xs:string">3 eq error()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 eq (error(), 3)</x:label>
      <x:variable name="expr" as="xs:string">3 eq (error(), 3)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>3 eq (3, error())</x:label>
      <x:variable name="expr" as="xs:string">3 eq (3, error())</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(error(), 3) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(error(), 3) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(3, error()) eq 3</x:label>
      <x:variable name="expr" as="xs:string">(3, error()) eq 3</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>count((1, 2)) eq 2</x:label>
      <x:variable name="expr" as="xs:string">count((1, 2)) eq 2</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" eq concat("a", "bc")</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq concat("a", "bc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" eq string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" eq xs:string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" eq xs:string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>works/@id eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">works/@id eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>string(/works/@id) eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">string(/works/@id) eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:string(/works/@id) eq "abc"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(/works/@id) eq "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" eq concat("a", "bc"))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq concat("a", "bc"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" eq /works/@id)</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq /works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" eq string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" eq xs:string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" eq xs:string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(works/@id eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(works/@id eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(string(/works/@id) eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(string(/works/@id) eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(xs:string(/works/@id) eq "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string(/works/@id) eq "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(/works/@iddddd eq "")</x:label>
      <x:variable name="expr" as="xs:string">not(/works/@iddddd eq "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" ne concat("a", "bc")</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne concat("a", "bc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" ne /works/@id</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" ne string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>"abc" ne xs:string(/works/@id)</x:label>
      <x:variable name="expr" as="xs:string">"abc" ne xs:string(/works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>works/@id ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">works/@id ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>string(/works/@id) ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">string(/works/@id) ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:string(/works/@id) ne "abc"</x:label>
      <x:variable name="expr" as="xs:string">xs:string(/works/@id) ne "abc"</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" ne concat("a", "bc"))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne concat("a", "bc"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" ne /works/@id)</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne /works/@id)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" ne string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not("abc" ne xs:string(/works/@id))</x:label>
      <x:variable name="expr" as="xs:string">not("abc" ne xs:string(/works/@id))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(works/@id ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(works/@id ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(string(/works/@id) ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(string(/works/@id) ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(xs:string(/works/@id) ne "abc")</x:label>
      <x:variable name="expr" as="xs:string">not(xs:string(/works/@id) ne "abc")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(/works/@iddddd ne "")</x:label>
      <x:variable name="expr" as="xs:string">not(/works/@iddddd ne "")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>13 eq 12+1</x:label>
      <x:variable name="expr" as="xs:string">13 eq 12+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>13 eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">13 eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40 eq xs:integer(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:integer(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40 eq xs:integer(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:integer(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:integer(/works/employee[830]/hours) eq 40</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(/works/employee[830]/hours) eq 40</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40 eq number(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq number(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40 eq xs:double(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40 eq xs:double(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>13e0 eq 12e0+1</x:label>
      <x:variable name="expr" as="xs:string">13e0 eq 12e0+1</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>13e0 eq /works/@id</x:label>
      <x:variable name="expr" as="xs:string">13e0 eq /works/@id</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40e0 eq xs:integer(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:integer(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:integer(/works/employee[830]/hours) eq 40e0</x:label>
      <x:variable name="expr" as="xs:string">xs:integer(/works/employee[830]/hours) eq 40e0</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40e0 eq number(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq number(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[1]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[1]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>40e0 eq xs:double(/works/employee[830]/hours)</x:label>
      <x:variable name="expr" as="xs:string">40e0 eq xs:double(/works/employee[830]/hours)</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>