<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/prod/NameTest.xml"><x:call function="nk:xpath-model"/><x:scenario label="/*/*[1]/name()">
      <x:call>
        <x:param select="string(.)">/*/*[1]/name()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/.">
      <x:call>
        <x:param select="string(.)">/.</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/*/.">
      <x:call>
        <x:param select="string(.)">/*/.</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="no-binding:*">
      <x:call>
        <x:param select="string(.)">no-binding:*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="schema-element(notDeclared:ncname)">
      <x:call>
        <x:param select="string(.)">schema-element(notDeclared:ncname)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="schema-attribute(notDeclared:ncname)">
      <x:call>
        <x:param select="string(.)">schema-attribute(notDeclared:ncname)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="schema-element(thisTypeDoesNotExistExample.Com)">
      <x:call>
        <x:param select="string(.)">schema-element(thisTypeDoesNotExistExample.Com)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="schema-attribute(thisTypeDoesNotExistExample.Com)">
      <x:call>
        <x:param select="string(.)">schema-attribute(thisTypeDoesNotExistExample.Com)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="unknownprefix:*">
      <x:call>
        <x:param select="string(.)">unknownprefix:*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="@unknownprefix:*">
      <x:call>
        <x:param select="string(.)">@unknownprefix:*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="@xmlns:*">
      <x:call>
        <x:param select="string(.)">@xmlns:*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="@xmlns:ncname">
      <x:call>
        <x:param select="string(.)">@xmlns:ncname</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xmlns:ncname">
      <x:call>
        <x:param select="string(.)">xmlns:ncname</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xmlns:*">
      <x:call>
        <x:param select="string(.)">xmlns:*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="let">
      <x:call>
        <x:param select="string(.)">let</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="let">
      <x:call>
        <x:param select="string(.)">let</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="as">
      <x:call>
        <x:param select="string(.)">as</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="of">
      <x:call>
        <x:param select="string(.)">of</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="child::element">
      <x:call>
        <x:param select="string(.)">child::element</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="_">
      <x:call>
        <x:param select="string(.)">_</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="pod_pod">
      <x:call>
        <x:param select="string(.)">pod_pod</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>