<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/prod/AxisStep.unabbr.xml"><x:call function="nk:xpath-model"/><x:scenario label="for $h in (/works/employee) return $h/child::empnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee) return $h/child::empnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[1]) return $h/child::*">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[1]) return $h/child::*</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works[1]/employee[2]) return $h/child::text()">
      <x:call>
        <x:param select="string(.)">for $h in (/works[1]/employee[2]) return $h/child::text()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[1]) return $h/child::node()">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[1]) return $h/child::node()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[2]) return $h/child::node()">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[2]) return $h/child::node()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[1]/hours) return $h/parent::node()">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[1]/hours) return $h/parent::node()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee) return $h/descendant::empnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee) return $h/descendant::empnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[1]) return $h/descendant-or-self::employee">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[1]) return $h/descendant-or-self::employee</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[1]) return $h/self::employee">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[1]) return $h/self::employee</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))">
      <x:call>
        <x:param select="string(.)">for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee/descendant::empnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee/descendant::empnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::*/child::pnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::*/child::pnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/descendant::pnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/descendant::pnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/descendant::employee/child::pnum">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/descendant::employee/child::pnum</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[fn:position() = 1]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[fn:position() = 1]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[fn:position() = fn:last()]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[fn:position() = fn:last()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/descendant::employee[fn:position() = 12]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/descendant::employee[fn:position() = 12]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]">
      <x:call>
        <x:param select="string(.)">/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[attribute::name eq &#34;Jane Doe 11&#34;]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[attribute::name eq "Jane Doe 11"]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[child::empnum = 'E3']">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[child::empnum = 'E3']</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works) return $h/child::employee[child::status]">
      <x:call>
        <x:param select="string(.)">for $h in (/works) return $h/child::employee[child::status]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]">
      <x:call>
        <x:param select="string(.)">for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>