<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee) return $h/child::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/child::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/child::*</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/child::*</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works[1]/employee[2]) return $h/child::text()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works[1]/employee[2]) return $h/child::text()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/child::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/child::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[2]) return $h/child::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[2]) return $h/child::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[1]/hours) return $h/parent::node()</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]/hours) return $h/parent::node()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee) return $h/descendant::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/descendant::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/descendant-or-self::employee</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/descendant-or-self::employee</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[1]) return $h/self::employee</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[1]) return $h/self::employee</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works[1]/employee[1]) return fn:count(($h/self::employee[1000]))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee/descendant::empnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee/descendant::empnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::*/child::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::*/child::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/descendant::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/descendant::employee/child::pnum</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::employee/child::pnum</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = fn:last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = fn:last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[fn:position() = fn:last()-1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee) return $h/child::hours[fn:position() &gt; 1]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/descendant::employee[fn:position() = 12]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/descendant::employee[fn:position() = 12]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]</x:label>
      <x:variable name="expr" as="xs:string">/child::works/child::employee[fn:position() = 5]/child::hours[fn:position() = 2]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[attribute::name eq "Jane Doe 11"]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[attribute::name eq "Jane Doe 11"]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[attribute::gender eq 'female'][fn:position() = 5]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[child::empnum = 'E3']</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[child::empnum = 'E3']</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works) return $h/child::employee[child::status]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works) return $h/child::employee[child::status]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[7]) return $h/child::*[self::pnum or self::empnum]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]</x:label>
      <x:variable name="expr" as="xs:string">for $h in (/works/employee[6]) return $h/child::*[self::empnum or self::pnum][fn:position() = fn:last()]</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>