<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/prod/GeneralComp.gt.xml"><x:call function="nk:xpath-model"/><x:scenario label="() &gt; ()">
      <x:call>
        <x:param select="string(.)">() &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; 10000">
      <x:call>
        <x:param select="string(.)">() &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; (50000)">
      <x:call>
        <x:param select="string(.)">() &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">() &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">() &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">() &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">() &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; ()">
      <x:call>
        <x:param select="string(.)">10000 &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; (50000)">
      <x:call>
        <x:param select="string(.)">10000 &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">10000 &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">10000 &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">10000 &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="10000 &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">10000 &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; ()">
      <x:call>
        <x:param select="string(.)">(50000) &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; 10000">
      <x:call>
        <x:param select="string(.)">(50000) &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; (50000)">
      <x:call>
        <x:param select="string(.)">(50000) &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">(50000) &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(50000) &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">(50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; ()">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; 10000">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; (50000)">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(10000,50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">(10000,50000) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; ()">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; 10000">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; (50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; ()">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; 10000">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">(/works/employee[1]/hours[1],/works/employee[6]/hours[1]) &gt; (/works/employee[1]/hours[1],/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$staff/staff/employee[6]/grade[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ()">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; 10000">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; 10000</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (50000)">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (10000,50000)">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; (10000,50000)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])">
      <x:call>
        <x:param select="string(.)">($works/works/employee[1]/hours[1],$staff/staff/employee[6]/hours[1]) &gt; ($works/works/employee[1]/hours[1],$works/works/employee[6]/hours[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:anyURI(&#34;http://www.example/com&#34;)) &gt; (xs:anyURI(&#34;http://www.example/com&#34;))">
      <x:call>
        <x:param select="string(.)">(xs:anyURI("http://www.example/com")) &gt; (xs:anyURI("http://www.example/com"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(() &gt; () )">
      <x:call>
        <x:param select="string(.)">not(() &gt; () )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(1 &gt; () )">
      <x:call>
        <x:param select="string(.)">not(1 &gt; () )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(() &gt; 1 )">
      <x:call>
        <x:param select="string(.)">not(() &gt; 1 )</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2, 3) &gt; 1">
      <x:call>
        <x:param select="string(.)">(1, 2, 3) &gt; 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2, 3) &gt; 2">
      <x:call>
        <x:param select="string(.)">(1, 2, 3) &gt; 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2, 3) &gt; 0">
      <x:call>
        <x:param select="string(.)">(1, 2, 3) &gt; 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="4 &gt; (1, 2, 3)">
      <x:call>
        <x:param select="string(.)">4 &gt; (1, 2, 3)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 &gt; (1, 2, 3)">
      <x:call>
        <x:param select="string(.)">2 &gt; (1, 2, 3)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 &gt; (1, 2, 3)">
      <x:call>
        <x:param select="string(.)">3 &gt; (1, 2, 3)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 &gt; 1">
      <x:call>
        <x:param select="string(.)">2 &gt; 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 &gt;= 1">
      <x:call>
        <x:param select="string(.)">1 &gt;= 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;true&#34;) &gt; false()">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("true") &gt; false()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="true() &gt; xs:untypedAtomic(&#34;false&#34;)">
      <x:call>
        <x:param select="string(.)">true() &gt; xs:untypedAtomic("false")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(xs:untypedAtomic(&#34;false&#34;) &gt; true())">
      <x:call>
        <x:param select="string(.)">not(xs:untypedAtomic("false") &gt; true())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(false() &gt; xs:untypedAtomic(&#34;true&#34;))">
      <x:call>
        <x:param select="string(.)">not(false() &gt; xs:untypedAtomic("true"))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 &gt; xs:anyURI(&#34;2&#34;)">
      <x:call>
        <x:param select="string(.)">1 &gt; xs:anyURI("2")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:anyURI(&#34;2&#34;) &gt; 1">
      <x:call>
        <x:param select="string(.)">xs:anyURI("2") &gt; 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt; 0">
      <x:call>
        <x:param select="string(.)">count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt; 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt;= 0">
      <x:call>
        <x:param select="string(.)">count((1, 2, 3, timezone-from-time(current-time()), 4)) &gt;= 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>