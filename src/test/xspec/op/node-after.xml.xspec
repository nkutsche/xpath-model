<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/op/node-after.xml"><x:call function="nk:xpath-model"/><x:scenario label="count(() &gt;&gt; ())">
      <x:call>
        <x:param select="string(.)">count(() &gt;&gt; ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(() &gt;&gt; /works[1]/employee[1]/empnum[1])">
      <x:call>
        <x:param select="string(.)">count(() &gt;&gt; /works[1]/employee[1]/empnum[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(() &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">count(() &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(/works[1]/employee[1]/empnum[1] &gt;&gt; ())">
      <x:call>
        <x:param select="string(.)">count(/works[1]/employee[1]/empnum[1] &gt;&gt; ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="/works[1]/employee[1]/empnum[1] &gt;&gt; /works[1]/employee[1]/empnum[1]">
      <x:call>
        <x:param select="string(.)">/works[1]/employee[1]/empnum[1] &gt;&gt; /works[1]/employee[1]/empnum[1]</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="$works/works[1]/employee[1]/empnum[1] &gt;&gt; ($staff/staff[1]/employee[1]/empnum[1])">
      <x:call>
        <x:param select="string(.)">$works/works[1]/employee[1]/empnum[1] &gt;&gt; ($staff/staff[1]/employee[1]/empnum[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count((/staff[1]/employee[1]/empnum[1]) &gt;&gt; ())">
      <x:call>
        <x:param select="string(.)">count((/staff[1]/employee[1]/empnum[1]) &gt;&gt; ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) &#xA;         and ($works/works[1]/employee[2]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) &#xA;         and ($works/works[1]/employee[3]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1])) &#xA;         or (($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) &#xA;         and ($works/works[1]/employee[2]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) &#xA;         and ($works/works[1]/employee[3]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">(($works/works[1]/employee[1]/empnum[1] &gt;&gt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &gt;&gt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &gt;&gt; $staff/staff[1]/employee[3]/empnum[1])) 
         or (($works/works[1]/employee[1]/empnum[1] &lt;&lt; $staff/staff[1]/employee[1]/empnum[1]) 
         and ($works/works[1]/employee[2]/empnum[1] &lt;&lt; $staff/staff[1]/employee[2]/empnum[1]) 
         and ($works/works[1]/employee[3]/empnum[1] &lt;&lt; $staff/staff[1]/employee[3]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])">
      <x:call>
        <x:param select="string(.)">(/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:not((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">fn:not((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) &#xA;         lt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         lt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) &#xA;         ge ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         ge ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) &#xA;         gt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         gt ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) &#xA;         le ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))">
      <x:call>
        <x:param select="string(.)">((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1])) 
         le ((/staff[1]/employee[1]/empnum[1]) &gt;&gt; (/staff[1]/employee[1]/empnum[1]))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="fn:count(() &gt;&gt; 100)">
      <x:call>
        <x:param select="string(.)">fn:count(() &gt;&gt; 100)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(1 &gt;&gt; ())">
      <x:call>
        <x:param select="string(.)">empty(1 &gt;&gt; ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() &gt;&gt; 1)">
      <x:call>
        <x:param select="string(.)">empty(() &gt;&gt; 1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 &gt;&gt; 1">
      <x:call>
        <x:param select="string(.)">1 &gt;&gt; 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() &gt;&gt; ())">
      <x:call>
        <x:param select="string(.)">empty(() &gt;&gt; ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>