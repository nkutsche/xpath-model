<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="generic-test" shared="yes">
    <x:call function="nk:xpath-model">
      <x:param select="$expr"/>
    </x:call>
    <x:expect label="result should be valid">
      <expr>...</expr>
    </x:expect>
  </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("6e7875626264756366") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("6e7875626264756366") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("6e7875626264756366")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("6e7875626264756366")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") eq xs:hexBinary("786174616d61616772")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") eq xs:hexBinary("786174616d61616772")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("6e7875626264756366") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("6e7875626264756366") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("6e7875626264756366")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("6e7875626264756366")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("767479716c6a647663") ne xs:hexBinary("786174616d61616772")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("767479716c6a647663") ne xs:hexBinary("786174616d61616772")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not((xs:hexBinary("786174616d61616772") eq xs:hexBinary("786174616d61616772")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:hexBinary("786174616d61616772") eq xs:hexBinary("786174616d61616772")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") eq xs:hexBinary("767479716c6a647663")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or (xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>fn:not((xs:hexBinary("786174616d61616772") ne xs:hexBinary("786174616d61616772")))</x:label>
      <x:variable name="expr" as="xs:string">fn:not((xs:hexBinary("786174616d61616772") ne xs:hexBinary("786174616d61616772")))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) and fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:true()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:true()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:false()</x:label>
      <x:variable name="expr" as="xs:string">(xs:hexBinary("786174616d61616772") ne xs:hexBinary("767479716c6a647663")) or fn:false()</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("FF") eq xs:hexBinary("ff")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FF") eq xs:hexBinary("ff")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("FF") ne xs:hexBinary("aa")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("FF") ne xs:hexBinary("aa")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>not(xs:hexBinary("FF") eq xs:hexBinary("aa"))</x:label>
      <x:variable name="expr" as="xs:string">not(xs:hexBinary("FF") eq xs:hexBinary("aa"))</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) eq xs:hexBinary("03")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) eq xs:hexBinary("03")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) ne xs:hexBinary("13")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary(xs:base64Binary(xs:hexBinary("03"))) ne xs:hexBinary("13")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("") eq xs:hexBinary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("") eq xs:hexBinary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("") eq xs:hexBinary("01")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("") eq xs:hexBinary("01")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario><x:scenario>
      <x:label>xs:hexBinary("00") eq xs:hexBinary("")</x:label>
      <x:variable name="expr" as="xs:string">xs:hexBinary("00") eq xs:hexBinary("")</x:variable>
      <x:like label="generic-test"/>
    </x:scenario></x:description>