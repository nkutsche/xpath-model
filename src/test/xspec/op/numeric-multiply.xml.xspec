<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/op/numeric-multiply.xml"><x:call function="nk:xpath-model"/><x:scenario label="xs:decimal(&#34;-1.0000000000&#34;) * xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.0000000000") * xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;617375191608514839&#34;) * xs:decimal(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("617375191608514839") * xs:decimal("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;999999999999999999&#34;) * xs:decimal(&#34;-1.0000000000&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("999999999999999999") * xs:decimal("-1.0000000000")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;0&#34;) * xs:decimal(&#34;617375191608514839&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("0") * xs:decimal("617375191608514839")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-1.0000000000&#34;) * xs:decimal(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-1.0000000000") * xs:decimal("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.0000000000&#34;) * xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.0000000000") * xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) * xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") * xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1.7976931348623157E308&#34;) * xs:double(&#34;-1.0000000000&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("1.7976931348623157E308") * xs:double("-1.0000000000")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) * xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") * xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.0000000000&#34;) * xs:double(&#34;1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.0000000000") * xs:double("1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-1.0000000000&#34;) * xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-1.0000000000") * xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) * xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") * xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4028235E38&#34;) * xs:float(&#34;-1.0000000000&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4028235E38") * xs:float("-1.0000000000")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) * xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") * xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-1.0000000000&#34;) * xs:float(&#34;3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-1.0000000000") * xs:float("3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) * xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") * xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;44633&#34;) * xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("44633") * xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;65535&#34;) * xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("65535") * xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) * xs:unsignedShort(&#34;44633&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") * xs:unsignedShort("44633")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) * xs:unsignedShort(&#34;65535&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") * xs:unsignedShort("65535")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) * xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") * xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;52704602390610033&#34;) * xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("52704602390610033") * xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;999999999999999999&#34;) * xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("999999999999999999") * xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) * xs:positiveInteger(&#34;52704602390610033&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") * xs:positiveInteger("52704602390610033")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) * xs:positiveInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") * xs:positiveInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) * xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") * xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;130747108607674654&#34;) * xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("130747108607674654") * xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;184467440737095516&#34;) * xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("184467440737095516") * xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) * xs:unsignedLong(&#34;130747108607674654&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") * xs:unsignedLong("130747108607674654")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) * xs:unsignedLong(&#34;184467440737095516&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") * xs:unsignedLong("184467440737095516")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0&#34;) * xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0") * xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) * xs:nonPositiveInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") * xs:nonPositiveInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) * xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;303884545991464527&#34;) * xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("303884545991464527") * xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;999999999999999999&#34;) * xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("999999999999999999") * xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) * xs:nonNegativeInteger(&#34;303884545991464527&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("303884545991464527")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) * xs:nonNegativeInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") * xs:nonNegativeInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 * ()">
      <x:call>
        <x:param select="string(.)">1 * ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 * '1'">
      <x:call>
        <x:param select="string(.)">1 * '1'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 * xs:integer('1')">
      <x:call>
        <x:param select="string(.)">1 * xs:integer('1')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(6) * xs:double(2) eq 12">
      <x:call>
        <x:param select="string(.)">xs:double(6) * xs:double(2) eq 12</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(6) * xs:decimal(2) eq 12">
      <x:call>
        <x:param select="string(.)">xs:decimal(6) * xs:decimal(2) eq 12</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(6) * xs:integer(2) eq 12">
      <x:call>
        <x:param select="string(.)">xs:integer(6) * xs:integer(2) eq 12</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(6) * xs:float(2) eq 12">
      <x:call>
        <x:param select="string(.)">xs:float(6) * xs:float(2) eq 12</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) * xs:integer(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) * xs:integer(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) * xs:decimal(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) * xs:decimal(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) * xs:integer(2)) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) * xs:integer(2)) instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) * xs:decimal(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) * xs:decimal(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) * xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) * xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) * xs:decimal(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) * xs:decimal(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) * xs:integer(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) * xs:integer(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) * xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) * xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) * xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) * xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) * xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) * xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) * xs:decimal(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) * xs:decimal(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) * xs:float(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) * xs:float(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) * xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:float(6) * xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) * xs:integer(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) * xs:integer(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) * xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) * xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) * xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) * xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:float(&#34;NaN&#34;) * 3) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:float("NaN") * 3) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:double(&#34;NaN&#34;) * 3) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:double("NaN") * 3) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(3 * xs:float(&#34;NaN&#34;)) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(3 * xs:float("NaN")) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(3 * xs:double(&#34;NaN&#34;)) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(3 * xs:double("NaN")) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;3&#34; * &#34;3&#34;">
      <x:call>
        <x:param select="string(.)">"3" * "3"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 * &#34;3&#34;">
      <x:call>
        <x:param select="string(.)">1 * "3"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(3 * xs:untypedAtomic(3)) eq 9">
      <x:call>
        <x:param select="string(.)">(3 * xs:untypedAtomic(3)) eq 9</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:untypedAtomic(3) * 3) eq 9">
      <x:call>
        <x:param select="string(.)">(xs:untypedAtomic(3) * 3) eq 9</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() * ())">
      <x:call>
        <x:param select="string(.)">empty(() * ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() * 1)">
      <x:call>
        <x:param select="string(.)">empty(() * 1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>