<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/op/numeric-equal.xml"><x:call function="nk:xpath-model"/><x:scenario label="xs:int(&#34;-2147483648&#34;) eq xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") eq xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-1873914410&#34;) eq xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-1873914410") eq xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;2147483647&#34;) eq xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("2147483647") eq xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) eq xs:int(&#34;-1873914410&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") eq xs:int("-1873914410")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) eq xs:int(&#34;2147483647&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") eq xs:int("2147483647")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) ne xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") ne xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-1873914410&#34;) ne xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-1873914410") ne xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;2147483647&#34;) ne xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("2147483647") ne xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) ne xs:int(&#34;-1873914410&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") ne xs:int("-1873914410")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) ne xs:int(&#34;2147483647&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") ne xs:int("2147483647")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) eq xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") eq xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;830993497117024304&#34;) eq xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("830993497117024304") eq xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;999999999999999999&#34;) eq xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("999999999999999999") eq xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) eq xs:integer(&#34;830993497117024304&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") eq xs:integer("830993497117024304")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) eq xs:integer(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") eq xs:integer("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) ne xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") ne xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;830993497117024304&#34;) ne xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("830993497117024304") ne xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;999999999999999999&#34;) ne xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("999999999999999999") ne xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) ne xs:integer(&#34;830993497117024304&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") ne xs:integer("830993497117024304")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) ne xs:integer(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") ne xs:integer("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) eq xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") eq xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;617375191608514839&#34;) eq xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("617375191608514839") eq xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;999999999999999999&#34;) eq xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("999999999999999999") eq xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) eq xs:decimal(&#34;617375191608514839&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") eq xs:decimal("617375191608514839")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) eq xs:decimal(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") eq xs:decimal("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) ne xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") ne xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;617375191608514839&#34;) ne xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("617375191608514839") ne xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;999999999999999999&#34;) ne xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("999999999999999999") ne xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) ne xs:decimal(&#34;617375191608514839&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") ne xs:decimal("617375191608514839")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) ne xs:decimal(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") ne xs:decimal("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) eq xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) eq xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") eq xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1.7976931348623157E308&#34;) eq xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("1.7976931348623157E308") eq xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) eq xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") eq xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) eq xs:double(&#34;1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") eq xs:double("1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) ne xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) ne xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") ne xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1.7976931348623157E308&#34;) ne xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("1.7976931348623157E308") ne xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) ne xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") ne xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) ne xs:double(&#34;1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") ne xs:double("1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) eq xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") eq xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) eq xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") eq xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4028235E38&#34;) eq xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4028235E38") eq xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) eq xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") eq xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) eq xs:float(&#34;3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") eq xs:float("3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) ne xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") ne xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) ne xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") ne xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4028235E38&#34;) ne xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4028235E38") ne xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) ne xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") ne xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) ne xs:float(&#34;3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") ne xs:float("3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) eq xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") eq xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-47175562203048468&#34;) eq xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-47175562203048468") eq xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;92233720368547758&#34;) eq xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("92233720368547758") eq xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) eq xs:long(&#34;-47175562203048468&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") eq xs:long("-47175562203048468")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) eq xs:long(&#34;92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") eq xs:long("92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) ne xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") ne xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-47175562203048468&#34;) ne xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-47175562203048468") ne xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;92233720368547758&#34;) ne xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("92233720368547758") ne xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) ne xs:long(&#34;-47175562203048468&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") ne xs:long("-47175562203048468")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) ne xs:long(&#34;92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") ne xs:long("92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) eq xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") eq xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;44633&#34;) eq xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("44633") eq xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;65535&#34;) eq xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("65535") eq xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) eq xs:unsignedShort(&#34;44633&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") eq xs:unsignedShort("44633")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) eq xs:unsignedShort(&#34;65535&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") eq xs:unsignedShort("65535")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) ne xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") ne xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;44633&#34;) ne xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("44633") ne xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;65535&#34;) ne xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("65535") ne xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) ne xs:unsignedShort(&#34;44633&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") ne xs:unsignedShort("44633")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) ne xs:unsignedShort(&#34;65535&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") ne xs:unsignedShort("65535")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) eq xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-297014075999096793&#34;) eq xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-297014075999096793") eq xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-1&#34;) eq xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-1") eq xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) eq xs:negativeInteger(&#34;-297014075999096793&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-297014075999096793")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) eq xs:negativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") eq xs:negativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) ne xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-297014075999096793&#34;) ne xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-297014075999096793") ne xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-1&#34;) ne xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-1") ne xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) ne xs:negativeInteger(&#34;-297014075999096793&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-297014075999096793")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) ne xs:negativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") ne xs:negativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) eq xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") eq xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;52704602390610033&#34;) eq xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("52704602390610033") eq xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;999999999999999999&#34;) eq xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("999999999999999999") eq xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) eq xs:positiveInteger(&#34;52704602390610033&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") eq xs:positiveInteger("52704602390610033")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) eq xs:positiveInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") eq xs:positiveInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) ne xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") ne xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;52704602390610033&#34;) ne xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("52704602390610033") ne xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;999999999999999999&#34;) ne xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("999999999999999999") ne xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) ne xs:positiveInteger(&#34;52704602390610033&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") ne xs:positiveInteger("52704602390610033")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) ne xs:positiveInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") ne xs:positiveInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) eq xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") eq xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;130747108607674654&#34;) eq xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("130747108607674654") eq xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;184467440737095516&#34;) eq xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("184467440737095516") eq xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) eq xs:unsignedLong(&#34;130747108607674654&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") eq xs:unsignedLong("130747108607674654")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) eq xs:unsignedLong(&#34;184467440737095516&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") eq xs:unsignedLong("184467440737095516")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) ne xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") ne xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;130747108607674654&#34;) ne xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("130747108607674654") ne xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;184467440737095516&#34;) ne xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("184467440737095516") ne xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) ne xs:unsignedLong(&#34;130747108607674654&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") ne xs:unsignedLong("130747108607674654")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) ne xs:unsignedLong(&#34;184467440737095516&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") ne xs:unsignedLong("184467440737095516")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) eq xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-475688437271870490&#34;) eq xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-475688437271870490") eq xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0&#34;) eq xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0") eq xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) eq xs:nonPositiveInteger(&#34;-475688437271870490&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("-475688437271870490")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) eq xs:nonPositiveInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") eq xs:nonPositiveInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) ne xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-475688437271870490&#34;) ne xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-475688437271870490") ne xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0&#34;) ne xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0") ne xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) ne xs:nonPositiveInteger(&#34;-475688437271870490&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("-475688437271870490")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) ne xs:nonPositiveInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") ne xs:nonPositiveInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) eq xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;303884545991464527&#34;) eq xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("303884545991464527") eq xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;999999999999999999&#34;) eq xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("999999999999999999") eq xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) eq xs:nonNegativeInteger(&#34;303884545991464527&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("303884545991464527")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) eq xs:nonNegativeInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") eq xs:nonNegativeInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) ne xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;303884545991464527&#34;) ne xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("303884545991464527") ne xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;999999999999999999&#34;) ne xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("999999999999999999") ne xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) ne xs:nonNegativeInteger(&#34;303884545991464527&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("303884545991464527")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) ne xs:nonNegativeInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") ne xs:nonNegativeInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) eq xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") eq xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-5324&#34;) eq xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-5324") eq xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;32767&#34;) eq xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("32767") eq xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) eq xs:short(&#34;-5324&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") eq xs:short("-5324")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) eq xs:short(&#34;32767&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") eq xs:short("32767")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) ne xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") ne xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-5324&#34;) ne xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-5324") ne xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;32767&#34;) ne xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("32767") ne xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) ne xs:short(&#34;-5324&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") ne xs:short("-5324")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) ne xs:short(&#34;32767&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") ne xs:short("32767")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="() eq ()">
      <x:call>
        <x:param select="string(.)">() eq ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(1) eq xs:integer(1)">
      <x:call>
        <x:param select="string(.)">xs:integer(1) eq xs:integer(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(1) ne xs:integer(2)">
      <x:call>
        <x:param select="string(.)">xs:integer(1) ne xs:integer(2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(1) eq xs:integer(1)">
      <x:call>
        <x:param select="string(.)">xs:integer(1) eq xs:integer(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(-1) eq xs:integer(-1)">
      <x:call>
        <x:param select="string(.)">xs:integer(-1) eq xs:integer(-1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(1) ne xs:integer(2)">
      <x:call>
        <x:param select="string(.)">xs:integer(1) ne xs:integer(2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(1.1) eq xs:decimal(1.1)">
      <x:call>
        <x:param select="string(.)">xs:decimal(1.1) eq xs:decimal(1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(1.1) ne xs:decimal(2.1)">
      <x:call>
        <x:param select="string(.)">xs:decimal(1.1) ne xs:decimal(2.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(1.1) eq xs:decimal(1.1)">
      <x:call>
        <x:param select="string(.)">xs:decimal(1.1) eq xs:decimal(1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(-1.1) eq xs:decimal(-1.1)">
      <x:call>
        <x:param select="string(.)">xs:decimal(-1.1) eq xs:decimal(-1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(1.1) ne xs:decimal(2.1)">
      <x:call>
        <x:param select="string(.)">xs:decimal(1.1) ne xs:decimal(2.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(2) ne xs:decimal(2.6)">
      <x:call>
        <x:param select="string(.)">xs:integer(2) ne xs:decimal(2.6)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1.1) eq xs:double(1.1)">
      <x:call>
        <x:param select="string(.)">xs:double(1.1) eq xs:double(1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(-1.1) eq xs:double(-1.1)">
      <x:call>
        <x:param select="string(.)">xs:double(-1.1) eq xs:double(-1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1.1) ne xs:double(2.1)">
      <x:call>
        <x:param select="string(.)">xs:double(1.1) ne xs:double(2.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(-1) ne xs:double(1)">
      <x:call>
        <x:param select="string(.)">xs:double(-1) ne xs:double(1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;NaN&#34;) ne xs:double(&#34;NaN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("NaN") ne xs:double("NaN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;NaN&#34;) ne xs:double(0)">
      <x:call>
        <x:param select="string(.)">xs:double("NaN") ne xs:double(0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(0) ne xs:double(&#34;NaN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double(0) ne xs:double("NaN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-INF&#34;) eq xs:double(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-INF") eq xs:double("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) eq xs:double(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("INF") eq xs:double("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-INF&#34;) ne xs:double(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-INF") ne xs:double("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) ne xs:double(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("INF") ne xs:double("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;INF&#34;) ne xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("INF") ne xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-INF&#34;) ne xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-INF") ne xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) ne xs:double(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") ne xs:double("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) ne xs:double(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") ne xs:double("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(1.1) eq xs:float(1.1)">
      <x:call>
        <x:param select="string(.)">xs:float(1.1) eq xs:float(1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(-1.1) eq xs:float(-1.1)">
      <x:call>
        <x:param select="string(.)">xs:float(-1.1) eq xs:float(-1.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(1.1) ne xs:float(2.1)">
      <x:call>
        <x:param select="string(.)">xs:float(1.1) ne xs:float(2.1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;NaN&#34;) ne xs:float(&#34;NaN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("NaN") ne xs:float("NaN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;NaN&#34;) ne xs:float(0)">
      <x:call>
        <x:param select="string(.)">xs:float("NaN") ne xs:float(0)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(0) ne xs:float(&#34;NaN&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float(0) ne xs:float("NaN")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) eq xs:float(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") eq xs:float("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;INF&#34;) eq xs:float(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("INF") eq xs:float("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) ne xs:float(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") ne xs:float("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;INF&#34;) ne xs:float(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("INF") ne xs:float("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;INF&#34;) ne xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("INF") ne xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-INF&#34;) ne xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-INF") ne xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) ne xs:float(&#34;INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") ne xs:float("INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) ne xs:float(&#34;-INF&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") ne xs:float("-INF")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(remove(remove((current-time(), 1), 1), 1)) eq 0">
      <x:call>
        <x:param select="string(.)">count(remove(remove((current-time(), 1), 1), 1)) eq 0</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="not(0 eq count((1, 2, timezone-from-time(current-time()))))">
      <x:call>
        <x:param select="string(.)">not(0 eq count((1, 2, timezone-from-time(current-time()))))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="0 ne count((1, 2, timezone-from-time(current-time())))">
      <x:call>
        <x:param select="string(.)">0 ne count((1, 2, timezone-from-time(current-time())))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:untypedAtomic(&#34;3&#34;), 3) eq 3">
      <x:call>
        <x:param select="string(.)">(xs:untypedAtomic("3"), 3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="count(xs:untypedAtomic(&#34;1&#34;) to 3) eq 3">
      <x:call>
        <x:param select="string(.)">count(xs:untypedAtomic("1") to 3) eq 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;three&#34;) + 3">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("three") + 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>