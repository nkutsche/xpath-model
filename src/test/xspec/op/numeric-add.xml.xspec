<?xml version="1.0" encoding="UTF-8"?><x:description xmlns:nk="http://www.nkutsche.com/xpath-model" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../../main/resources/xsl/xpath-model.xsl"><x:scenario label="/qt3tests-master/op/numeric-add.xml"><x:call function="nk:xpath-model"/><x:scenario label="xs:int(&#34;-1873914410&#34;) + xs:int(&#34;-273569238&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-1873914410") + xs:int("-273569238")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;2147483647&#34;) + xs:int(&#34;-2147483648&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("2147483647") + xs:int("-2147483648")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-273569238&#34;) + xs:int(&#34;-1873914410&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-273569238") + xs:int("-1873914410")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:int(&#34;-2147483648&#34;) + xs:int(&#34;2147483647&#34;)">
      <x:call>
        <x:param select="string(.)">xs:int("-2147483648") + xs:int("2147483647")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;830993497117024304&#34;) + xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("830993497117024304") + xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;999999999999999999&#34;) + xs:integer(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("999999999999999999") + xs:integer("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) + xs:integer(&#34;830993497117024304&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") + xs:integer("830993497117024304")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(&#34;-999999999999999999&#34;) + xs:integer(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:integer("-999999999999999999") + xs:integer("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;617375191608514839&#34;) + xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("617375191608514839") + xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;999999999999999999&#34;) + xs:decimal(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("999999999999999999") + xs:decimal("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) + xs:decimal(&#34;617375191608514839&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") + xs:decimal("617375191608514839")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(&#34;-999999999999999999&#34;) + xs:decimal(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:decimal("-999999999999999999") + xs:decimal("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;0&#34;) + xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("0") + xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;1.7976931348623157E308&#34;) + xs:double(&#34;-1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("1.7976931348623157E308") + xs:double("-1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) + xs:double(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") + xs:double("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(&#34;-1.7976931348623157E308&#34;) + xs:double(&#34;1.7976931348623157E308&#34;)">
      <x:call>
        <x:param select="string(.)">xs:double("-1.7976931348623157E308") + xs:double("1.7976931348623157E308")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;0&#34;) + xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("0") + xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;3.4028235E38&#34;) + xs:float(&#34;-3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("3.4028235E38") + xs:float("-3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) + xs:float(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") + xs:float("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(&#34;-3.4028235E38&#34;) + xs:float(&#34;3.4028235E38&#34;)">
      <x:call>
        <x:param select="string(.)">xs:float("-3.4028235E38") + xs:float("3.4028235E38")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-47175562203048468&#34;) + xs:long(&#34;-45058158165499290&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-47175562203048468") + xs:long("-45058158165499290")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;92233720368547758&#34;) + xs:long(&#34;-92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("92233720368547758") + xs:long("-92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-45058158165499290&#34;) + xs:long(&#34;-47175562203048468&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-45058158165499290") + xs:long("-47175562203048468")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(&#34;-92233720368547758&#34;) + xs:long(&#34;92233720368547758&#34;)">
      <x:call>
        <x:param select="string(.)">xs:long("-92233720368547758") + xs:long("92233720368547758")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) + xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") + xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;44633&#34;) + xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("44633") + xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;65535&#34;) + xs:unsignedShort(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("65535") + xs:unsignedShort("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) + xs:unsignedShort(&#34;44633&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") + xs:unsignedShort("44633")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedShort(&#34;0&#34;) + xs:unsignedShort(&#34;65535&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedShort("0") + xs:unsignedShort("65535")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-297014075999096793&#34;) + xs:negativeInteger(&#34;-702985924000903206&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-297014075999096793") + xs:negativeInteger("-702985924000903206")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-1&#34;) + xs:negativeInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-1") + xs:negativeInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-702985924000903206&#34;) + xs:negativeInteger(&#34;-297014075999096793&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-702985924000903206") + xs:negativeInteger("-297014075999096793")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:negativeInteger(&#34;-999999999999999999&#34;) + xs:negativeInteger(&#34;-1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:negativeInteger("-999999999999999999") + xs:negativeInteger("-1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) + xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") + xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;52704602390610033&#34;) + xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("52704602390610033") + xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;999999999999999998&#34;) + xs:positiveInteger(&#34;1&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("999999999999999998") + xs:positiveInteger("1")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) + xs:positiveInteger(&#34;52704602390610033&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") + xs:positiveInteger("52704602390610033")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(&#34;1&#34;) + xs:positiveInteger(&#34;999999999999999998&#34;)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger("1") + xs:positiveInteger("999999999999999998")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) + xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") + xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;130747108607674654&#34;) + xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("130747108607674654") + xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;184467440737095516&#34;) + xs:unsignedLong(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("184467440737095516") + xs:unsignedLong("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) + xs:unsignedLong(&#34;130747108607674654&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") + xs:unsignedLong("130747108607674654")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:unsignedLong(&#34;0&#34;) + xs:unsignedLong(&#34;184467440737095516&#34;)">
      <x:call>
        <x:param select="string(.)">xs:unsignedLong("0") + xs:unsignedLong("184467440737095516")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-475688437271870490&#34;) + xs:nonPositiveInteger(&#34;-524311562728129509&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-475688437271870490") + xs:nonPositiveInteger("-524311562728129509")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;0&#34;) + xs:nonPositiveInteger(&#34;-999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("0") + xs:nonPositiveInteger("-999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-524311562728129509&#34;) + xs:nonPositiveInteger(&#34;-475688437271870490&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-524311562728129509") + xs:nonPositiveInteger("-475688437271870490")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonPositiveInteger(&#34;-999999999999999999&#34;) + xs:nonPositiveInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonPositiveInteger("-999999999999999999") + xs:nonPositiveInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) + xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;303884545991464527&#34;) + xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("303884545991464527") + xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;999999999999999999&#34;) + xs:nonNegativeInteger(&#34;0&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("999999999999999999") + xs:nonNegativeInteger("0")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) + xs:nonNegativeInteger(&#34;303884545991464527&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("303884545991464527")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(&#34;0&#34;) + xs:nonNegativeInteger(&#34;999999999999999999&#34;)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger("0") + xs:nonNegativeInteger("999999999999999999")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-5324&#34;) + xs:short(&#34;-27444&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-5324") + xs:short("-27444")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;32767&#34;) + xs:short(&#34;-32768&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("32767") + xs:short("-32768")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-27444&#34;) + xs:short(&#34;-5324&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-27444") + xs:short("-5324")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(&#34;-32768&#34;) + xs:short(&#34;32767&#34;)">
      <x:call>
        <x:param select="string(.)">xs:short("-32768") + xs:short("32767")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + ()">
      <x:call>
        <x:param select="string(.)">1 + ()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + '1'">
      <x:call>
        <x:param select="string(.)">1 + '1'</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + xs:integer('1')">
      <x:call>
        <x:param select="string(.)">1 + xs:integer('1')</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:long(10) + xs:unsignedLong(35)">
      <x:call>
        <x:param select="string(.)">xs:long(10) + xs:unsignedLong(35)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(10) + xs:nonPositiveInteger(-15)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger(10) + xs:nonPositiveInteger(-15)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:nonNegativeInteger(10) + xs:short(15)">
      <x:call>
        <x:param select="string(.)">xs:nonNegativeInteger(10) + xs:short(15)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:short(10) + xs:long(145)">
      <x:call>
        <x:param select="string(.)">xs:short(10) + xs:long(145)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:positiveInteger(10) + xs:negativeInteger(-5)">
      <x:call>
        <x:param select="string(.)">xs:positiveInteger(10) + xs:negativeInteger(-5)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(6) + xs:double(2) eq 8">
      <x:call>
        <x:param select="string(.)">xs:double(6) + xs:double(2) eq 8</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(6) + xs:decimal(2) eq 8">
      <x:call>
        <x:param select="string(.)">xs:decimal(6) + xs:decimal(2) eq 8</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:decimal(6.1) + xs:decimal(2.1) eq 8.2">
      <x:call>
        <x:param select="string(.)">xs:decimal(6.1) + xs:decimal(2.1) eq 8.2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1.1 + 2.2 eq 3.3">
      <x:call>
        <x:param select="string(.)">1.1 + 2.2 eq 3.3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:double(1.1) + xs:double(2.2) ne 3.3">
      <x:call>
        <x:param select="string(.)">xs:double(1.1) + xs:double(2.2) ne 3.3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(1.1) + xs:float(2.2) ne 3.3">
      <x:call>
        <x:param select="string(.)">xs:float(1.1) + xs:float(2.2) ne 3.3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:integer(6) + xs:integer(2) eq 8">
      <x:call>
        <x:param select="string(.)">xs:integer(6) + xs:integer(2) eq 8</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:float(6) + xs:float(2) eq 8">
      <x:call>
        <x:param select="string(.)">xs:float(6) + xs:float(2) eq 8</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:float(&#34;NaN&#34;) + 3) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:float("NaN") + 3) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(xs:double(&#34;NaN&#34;) + 3) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(xs:double("NaN") + 3) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(3 + xs:float(&#34;NaN&#34;)) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(3 + xs:float("NaN")) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="string(3 + xs:double(&#34;NaN&#34;)) eq &#34;NaN&#34;">
      <x:call>
        <x:param select="string(.)">string(3 + xs:double("NaN")) eq "NaN"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) + xs:integer(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) + xs:integer(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) + xs:decimal(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) + xs:decimal(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) + xs:integer(2)) instance of xs:integer">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) + xs:integer(2)) instance of xs:integer</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) + xs:decimal(2)) instance of xs:decimal">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) + xs:decimal(2)) instance of xs:decimal</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) + xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) + xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) + xs:decimal(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) + xs:decimal(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) + xs:integer(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) + xs:integer(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) + xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) + xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) + xs:float(2)) instance of xs:float">
      <x:call>
        <x:param select="string(.)">(xs:float(6) + xs:float(2)) instance of xs:float</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:decimal(6) + xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:decimal(6) + xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) + xs:decimal(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) + xs:decimal(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) + xs:float(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) + xs:float(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:float(6) + xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:float(6) + xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) + xs:integer(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) + xs:integer(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:integer(6) + xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:integer(6) + xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:double(6) + xs:double(2)) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:double(6) + xs:double(2)) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1+1 eq 2">
      <x:call>
        <x:param select="string(.)">1+1 eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 eq 1+1">
      <x:call>
        <x:param select="string(.)">2 eq 1+1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 + error()">
      <x:call>
        <x:param select="string(.)">3 + error()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="error() + 3">
      <x:call>
        <x:param select="string(.)">error() + 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 + (error(), 4)">
      <x:call>
        <x:param select="string(.)">3 + (error(), 4)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(4, error()) + 3">
      <x:call>
        <x:param select="string(.)">(4, error()) + 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 + (4, error())">
      <x:call>
        <x:param select="string(.)">3 + (4, error())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(error(), 4) + 3">
      <x:call>
        <x:param select="string(.)">(error(), 4) + 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2) + 1">
      <x:call>
        <x:param select="string(.)">(1, 2) + 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty((1, 2) + ())">
      <x:call>
        <x:param select="string(.)">empty((1, 2) + ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + (1, 2)">
      <x:call>
        <x:param select="string(.)">1 + (1, 2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() + (1, 2))">
      <x:call>
        <x:param select="string(.)">empty(() + (1, 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="error() + 3">
      <x:call>
        <x:param select="string(.)">error() + 3</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="3 + error()">
      <x:call>
        <x:param select="string(.)">3 + error()</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;3&#34; + &#34;3&#34;">
      <x:call>
        <x:param select="string(.)">"3" + "3"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;3&#34; + xs:untypedAtomic(&#34;3&#34;)">
      <x:call>
        <x:param select="string(.)">"3" + xs:untypedAtomic("3")</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(3 + xs:untypedAtomic(&#34;3&#34;)) eq 6">
      <x:call>
        <x:param select="string(.)">(3 + xs:untypedAtomic("3")) eq 6</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:untypedAtomic(&#34;3&#34;) + 3.0) eq 6">
      <x:call>
        <x:param select="string(.)">(xs:untypedAtomic("3") + 3.0) eq 6</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(2 + 4) * 5 eq 30">
      <x:call>
        <x:param select="string(.)">(2 + 4) * 5 eq 30</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 + 4 * 5 eq 22">
      <x:call>
        <x:param select="string(.)">2 + 4 * 5 eq 22</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + 2 * 4 + (1 + 2 + 3 * 4) eq 24">
      <x:call>
        <x:param select="string(.)">1 + 2 * 4 + (1 + 2 + 3 * 4) eq 24</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="empty(() + ())">
      <x:call>
        <x:param select="string(.)">empty(() + ())</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(remove((1, &#34;two&#34;), 2) + 1) eq 2">
      <x:call>
        <x:param select="string(.)">(remove((1, "two"), 2) + 1) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 eq (1 + remove((1, &#34;two&#34;), 2))">
      <x:call>
        <x:param select="string(.)">2 eq (1 + remove((1, "two"), 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(remove((1, &#34;two&#34;), 2) + xs:untypedAtomic(&#34;1&#34;)) eq 2">
      <x:call>
        <x:param select="string(.)">(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 eq (xs:untypedAtomic(&#34;1&#34;) + remove((1, &#34;two&#34;), 2))">
      <x:call>
        <x:param select="string(.)">2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(remove((xs:untypedAtomic(&#34;1&#34;), &#34;two&#34;), 2) + 1) eq 2">
      <x:call>
        <x:param select="string(.)">(remove((xs:untypedAtomic("1"), "two"), 2) + 1) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 eq (1 + remove((xs:untypedAtomic(&#34;1&#34;), &#34;two&#34;), 2))">
      <x:call>
        <x:param select="string(.)">2 eq (1 + remove((xs:untypedAtomic("1"), "two"), 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(remove((1, &#34;two&#34;), 2) + xs:untypedAtomic(&#34;1&#34;)) eq 2">
      <x:call>
        <x:param select="string(.)">(remove((1, "two"), 2) + xs:untypedAtomic("1")) eq 2</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="2 eq (xs:untypedAtomic(&#34;1&#34;) + remove((1, &#34;two&#34;), 2))">
      <x:call>
        <x:param select="string(.)">2 eq (xs:untypedAtomic("1") + remove((1, "two"), 2))</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="xs:untypedAtomic(&#34;3&#34;) + 3 eq 6">
      <x:call>
        <x:param select="string(.)">xs:untypedAtomic("3") + 3 eq 6</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(xs:untypedAtomic(&#34;3&#34;) + 3) instance of xs:double">
      <x:call>
        <x:param select="string(.)">(xs:untypedAtomic("3") + 3) instance of xs:double</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(remove((5, 1e0), 2) + 1) eq 6">
      <x:call>
        <x:param select="string(.)">(remove((5, 1e0), 2) + 1) eq 6</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1 + remove((5, 1e0), 2)) eq 6">
      <x:call>
        <x:param select="string(.)">(1 + remove((5, 1e0), 2)) eq 6</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + subsequence(&#34;a string&#34;, 1, 1)">
      <x:call>
        <x:param select="string(.)">1 + subsequence("a string", 1, 1)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="subsequence(&#34;a string&#34;, 1, 1) + 1">
      <x:call>
        <x:param select="string(.)">subsequence("a string", 1, 1) + 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="&#34;foo&#34; + 1">
      <x:call>
        <x:param select="string(.)">"foo" + 1</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="1 + &#34;foo&#34;">
      <x:call>
        <x:param select="string(.)">1 + "foo"</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario><x:scenario label="(1, 2) + (1, 2)">
      <x:call>
        <x:param select="string(.)">(1, 2) + (1, 2)</x:param>
      </x:call>
      <x:expect label="result should be valid">
        <expr>...</expr>
      </x:expect>
    </x:scenario></x:scenario></x:description>